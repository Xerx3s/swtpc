2023-01-26 12:01:33,768 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (5,)
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/generators.py", line 81, in generate_swarm
    pos = center * np.random.uniform(
  File "mtrand.pyx", line 1134, in numpy.random.mtrand.RandomState.uniform
  File "_common.pyx", line 600, in numpy.random._common.cont
  File "_common.pyx", line 517, in numpy.random._common.cont_broadcast_2
  File "__init__.pxd", line 741, in numpy.PyArray_MultiIterNew3
ValueError: shape mismatch: objects cannot be broadcast to a single shape.  Mismatch is between arg 0 with shape (50, 5) and arg 1 with shape (50, 3).
2023-01-26 12:02:44,764 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 12:04:49,543 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 12:13:22,604 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (11,)
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/generators.py", line 81, in generate_swarm
    pos = center * np.random.uniform(
  File "mtrand.pyx", line 1134, in numpy.random.mtrand.RandomState.uniform
  File "_common.pyx", line 600, in numpy.random._common.cont
  File "_common.pyx", line 517, in numpy.random._common.cont_broadcast_2
  File "__init__.pxd", line 741, in numpy.PyArray_MultiIterNew3
ValueError: shape mismatch: objects cannot be broadcast to a single shape.  Mismatch is between arg 0 with shape (50, 11) and arg 1 with shape (50, 3).
2023-01-26 12:22:08,620 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 12:23:07,296 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 12:24:32,660 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 12:25:54,811 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 12:28:04,624 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 12:29:52,951 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 12:31:25,425 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 12:31:55,751 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 12:32:53,345 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 12:38:48,256 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 12:43:56,120 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 12:44:25,415 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 12:48:02,496 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 12:48:48,941 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 12:50:06,387 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 12:50:30,608 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 12:51:29,801 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 12:54:15,147 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 12:54:24,094 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 12:55:45,961 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 13:02:40,370 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 13:04:00,558 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 13:04:47,873 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (1,)
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/generators.py", line 81, in generate_swarm
    pos = center * np.random.uniform(
  File "mtrand.pyx", line 1134, in numpy.random.mtrand.RandomState.uniform
  File "_common.pyx", line 600, in numpy.random._common.cont
  File "_common.pyx", line 518, in numpy.random._common.cont_broadcast_2
  File "_common.pyx", line 245, in numpy.random._common.validate_output_shape
ValueError: Output size (1, 1) is not compatible with broadcast dimensions of inputs (1, 11).
2023-01-26 13:05:10,888 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 13:06:26,660 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 13:08:01,002 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3}
2023-01-26 13:08:01,014 - pyswarms.backend.operators - ERROR - Missing keyword in swarm.options
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 130, in compute_velocity
    w = swarm.options["w"]
KeyError: 'w'
2023-01-26 13:09:16,659 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:09:17,316 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 2.7035157680511475, best pos: [  8.44106456 577.64704632  19.13253245 352.08337126   0.57874535
  26.82785577  53.73010733   1.04908804  55.58120974  16.05559741
  48.61919145]
2023-01-26 13:11:34,197 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:11:34,854 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 20.11424446105957, best pos: [  8.3918822  741.14059054  88.48585122  96.46346761   0.78193231
  91.43571406 105.85112588   2.86224822  54.09698752  16.2044344
  55.10264365]
2023-01-26 13:12:52,456 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:12:53,263 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.262331008911133, best pos: [  8.97173242 761.94606441  74.59925547 318.72640149   0.84470777
  38.22740055 144.27424674   1.18205412  37.63877585  14.15805319
  37.2367023 ]
2023-01-26 13:14:16,791 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:14:17,690 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 16.169431686401367, best pos: [  8.4263613  369.55348004  76.3563243   60.67200101   0.8690495
  64.74117258 141.86710057   1.63123013  28.3624111   10.38065209
  50.33545865]
2023-01-26 13:14:34,157 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:14:35,209 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 11.551494598388672, best pos: [8.96697803e+00 8.22665952e+02 5.34512479e+01 2.79165275e+02
 6.50116418e-01 1.95347637e+00 7.22227320e+01 1.00089558e+00
 5.51121233e+01 1.09054203e+01 3.83626235e+01]
2023-01-26 13:15:20,087 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:15:20,745 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 21.105451583862305, best pos: [8.18572015e+00 6.61659288e+02 8.07913149e+01 2.77256046e+02
 9.85623889e-03 8.84316942e+01 1.84643172e+02 1.34880507e+00
 2.19097385e+01 1.86580284e+01 5.90588554e+01]
2023-01-26 13:16:45,516 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:16:46,167 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 9.960488319396973, best pos: [8.64928600e+00 3.94023592e+02 7.79028773e+01 1.02093620e+02
 2.41486770e-01 1.25553294e+01 1.92880896e+02 1.78490893e+00
 2.72576877e+01 1.85594019e+01 1.70780735e+01]
2023-01-26 13:17:12,014 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:17:12,673 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 7.415426254272461, best pos: [  8.3490981  395.42038861  95.05709444 390.22233128   1.08132477
   1.46275613 122.72958195   2.92574322  26.6972982   20.07211266
  38.39855821]
2023-01-26 13:18:30,589 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:18:31,246 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 3.8227291107177734, best pos: [  8.63835266 692.59929202   6.6236749  325.72267878   0.74615237
  45.74480154 116.01634771   1.75014909  37.57713288  18.94668494
  41.74435474]
2023-01-26 13:29:03,409 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:29:03,994 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.591286659240723, best pos: [  8.60160305 451.55612478  20.93797774 377.42067029   0.67372284
  62.13568312 127.15083553   2.49878205  48.94362804  11.15456171
  21.8691109 ]
2023-01-26 13:29:16,664 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:29:17,352 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 13.06200885772705, best pos: [  8.38925096 800.63184022 149.8823108   34.09585758   0.80486578
  66.75138544  73.8102532    1.91388941  47.91534655  13.73129584
  22.37411654]
2023-01-26 13:39:42,136 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (6,)
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-01-26 13:41:36,874 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:41:37,550 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 35.22361373901367, best pos: [8.84858426e+00 8.28305191e+02 1.16356807e+02 4.32496376e-01
 5.76680045e+01 8.10859279e+01 1.16471431e+02 1.76081587e+00
 3.09290572e+01 1.79950226e+01 8.33735899e+00]
2023-01-26 13:42:05,302 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:42:05,874 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 49.6057014465332, best pos: [  8.11905609 405.89428765  94.02795346   0.69532327 260.57415759
   9.56505776  64.86049578   2.42629077  43.16900356  10.56887616
  26.86998429]
2023-01-26 13:42:23,156 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:42:24,054 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 5.843199729919434, best pos: [  8.2352904  511.84909038  32.05861942   0.85587584 255.0761059
  53.98271681 119.7103089    1.55893674  55.62779957  10.53410316
  22.28079673]
2023-01-26 13:42:38,545 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:42:39,141 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 6.166795253753662, best pos: [8.29061654e+00 6.90760934e+02 1.47268679e+01 6.56335514e-01
 1.59180621e+02 6.59282853e+01 1.87667833e+02 2.21190290e+00
 5.57446212e+01 1.04508340e+01 7.85274655e+00]
2023-01-26 13:43:51,375 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (6,)
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-01-26 13:43:52,553 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:43:53,138 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 3.6725852489471436, best pos: [  8.16758461 495.62877229  45.69942003   0.51785733 319.16398718
  66.275758   135.33581402   1.2206563   38.52955555  18.50203237
  16.71133706]
2023-01-26 13:44:19,925 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (6,)
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-01-26 13:44:22,240 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:44:22,830 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.12675867974758148, best pos: [8.15585026e+00 7.13314585e+02 5.71792274e+01 3.05562983e-01
 2.88703499e+02 1.04804031e+01 6.46472157e+01 2.06002053e+00
 2.21802460e+01 1.95797033e+01 5.64056509e+01]
2023-01-26 13:46:22,549 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (6,)
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-01-26 13:46:24,819 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:46:25,411 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 18.93194007873535, best pos: [8.15670268e+00 5.49930624e+02 1.32283070e+02 3.29102938e-01
 1.36526255e+02 5.88292504e+01 1.95616392e+02 1.72532248e+00
 5.53255085e+01 1.55990782e+01 5.89903083e+01]
2023-01-26 13:48:34,657 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (6,)
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-01-26 13:48:35,261 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (4,)
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-01-26 13:48:36,164 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:48:36,750 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.38915765285491943, best pos: [  8.24943769 535.17938142  42.72514364   0.7868827   47.99274311
  16.92179862 116.01455697   2.3341425   49.41448691  17.57617533
  20.79336979]
2023-01-26 13:48:57,225 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (6,)
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-01-26 13:48:57,837 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (4,)
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-01-26 13:48:58,669 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:48:59,245 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.515115737915039, best pos: [8.20148220e+00 8.18212670e+02 9.60556131e+00 8.97461771e-02
 3.04387669e+02 8.47766176e+00 7.90916965e+01 1.74076180e+00
 3.99536355e+01 1.75799138e+01 5.58286258e+01]
2023-01-26 13:49:21,011 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (6,)
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-01-26 13:49:21,618 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (4,)
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-01-26 13:49:23,702 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:49:24,277 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 14.33836841583252, best pos: [8.17820778e+00 4.60291198e+02 1.31764515e+02 4.03307904e-02
 3.48867232e+02 2.93802242e+00 1.15090835e+02 1.68574193e+00
 3.07253623e+01 1.92414506e+01 5.48120835e+00]
2023-01-26 13:51:10,344 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (4,)
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-01-26 13:51:11,212 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:51:11,789 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 13.588676452636719, best pos: [8.24151656e+00 5.28398600e+02 1.08588762e+02 4.94861099e-01
 2.25621419e+01 2.38511479e+01 1.53558844e+02 1.68560925e+00
 4.02530609e+01 1.36679111e+01 4.82068327e+01]
2023-01-26 13:53:42,619 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (6,)
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-01-26 13:53:43,224 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (4,)
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-01-26 13:53:43,637 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:53:44,221 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 17.34733009338379, best pos: [  8.15479465 667.39893491 141.93351507   0.70271781 215.62093899
  25.37847417 106.77939059   1.48356242  28.08475662  14.80898432
  25.57077854]
2023-01-26 13:54:22,140 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (6,)
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-01-26 13:54:23,298 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (4,)
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-01-26 13:54:24,190 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:54:24,792 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 17.942888259887695, best pos: [9.35776162e+00 6.64589423e+02 5.30621631e+01 2.57794966e-01
 3.93326075e+02 8.74769462e+01 1.61054112e+02 1.35052640e+00
 5.98589285e+01 1.29436009e+01 1.38420893e+01]
2023-01-26 13:56:15,413 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (6,)
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-01-26 13:56:17,212 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (4,)
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-01-26 13:56:17,640 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 13:56:18,220 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 2.354213237762451, best pos: [  8.18218801 502.53889547  24.51071942   0.69736307 379.68782488
  61.27465432  90.17966364   2.38026254  54.0191468   12.98507068
  52.52557209]
2023-01-26 14:02:13,222 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 14:02:13,819 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 926.9127807617188, best pos: [5.05327412e+02 4.56381684e+01 4.49001652e-01 1.58426203e+02
 2.33054598e+00 6.74402294e+00]
2023-01-26 14:02:14,030 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 14:02:14,605 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 7.756828308105469, best pos: [  9.21160186  42.02117412   1.07900132 337.33716241]
2023-01-26 14:02:14,861 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 14:02:15,429 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 44.38252258300781, best pos: [8.15383614e+00 3.58169046e+02 3.62987997e+01 2.56138739e-01
 8.08689697e+01 7.28759570e+01 8.59127887e+01 2.38053707e+00
 2.83109809e+01 1.35854708e+01 3.95583765e+01]
2023-01-26 14:02:40,204 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 14:02:41,159 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 333.9670104980469, best pos: [3.30892589e+02 3.51574490e+01 1.03598783e+00 3.23947634e+02
 4.17838045e+00 2.88049715e-02]
2023-01-26 14:02:41,835 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 14:02:42,456 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 7.669471740722656, best pos: [  9.31773962  46.04285007   0.86275364 332.66993971]
2023-01-26 14:02:42,717 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 14:02:43,345 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.5207552909851074, best pos: [8.20598725e+00 8.15841986e+02 5.17613763e+01 3.16142886e-01
 2.42128922e+02 2.27608176e+01 9.45777093e+01 1.80329112e+00
 4.36253853e+01 1.82526106e+01 5.02084914e+01]
2023-01-26 14:04:10,578 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 14:04:11,235 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 315.765380859375, best pos: [3.29284730e+02 3.80212674e+01 9.71749590e-01 8.47744316e+01
 8.35085196e-01 3.73615271e-02]
2023-01-26 14:04:11,815 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 14:04:12,426 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 7.669471740722656, best pos: [  9.53059507  37.36644504   0.95632289 347.05676691]
2023-01-26 14:04:12,685 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 14:04:13,317 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.5325369834899902, best pos: [8.22004817e+00 4.81239358e+02 2.25635258e+01 1.61056930e-01
 1.15404612e+02 3.06674577e+01 1.33568011e+02 2.10652063e+00
 3.96654251e+01 1.77489009e+01 3.73437926e+01]
2023-01-26 15:46:19,605 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 15:46:20,242 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 315.9493103027344, best pos: [3.26023659e+02 3.85772027e+01 6.22463356e-01 8.41040370e+01
 3.40113164e+00 3.42228889e-02]
2023-01-26 15:46:20,817 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 15:46:21,432 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 7.669471740722656, best pos: [  9.36843101  38.20773453   0.88503595 348.92441601]
2023-01-26 15:46:21,691 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 15:46:22,318 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.424503207206726, best pos: [  8.22674329 607.09358599  51.28661925   0.66295002 238.58379822
  26.12715559 128.72718415   2.02309455  46.1632501   10.84032084
  42.05494165]
2023-01-26 15:47:26,999 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 15:47:27,680 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 324.5609130859375, best pos: [3.33391845e+02 4.25613738e+01 9.64577211e-01 1.79528695e+02
 3.40184341e+00 2.01613241e-02]
2023-01-26 15:47:28,860 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 15:47:29,488 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 7.669471740722656, best pos: [  9.25869122  43.92232512   0.91734457 333.03124398]
2023-01-26 15:47:29,762 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 15:47:30,393 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.000929117202759, best pos: [8.21845942e+00 4.68171043e+02 4.54084550e+00 3.34424573e-01
 1.94793257e+02 9.64947202e+00 1.20916968e+02 2.10394242e+00
 3.04739778e+01 1.07752080e+01 5.25131857e+01]
2023-01-26 15:48:13,443 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 15:48:14,109 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 362.0929870605469, best pos: [3.38003686e+02 3.24586407e+01 7.18018924e-01 2.49182292e+02
 3.35770859e+00 2.97507786e-02]
2023-01-26 15:48:14,312 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 15:48:15,292 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 7.669471740722656, best pos: [  9.34428387  36.67776722   0.98721178 340.51376378]
2023-01-26 15:48:15,852 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 15:48:16,494 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.8023428916931152, best pos: [8.18219064e+00 8.22764953e+02 2.11303257e+01 5.50926354e-01
 3.85547894e+02 1.03408779e+01 8.07645102e+01 1.55554004e+00
 4.77985113e+01 1.19727423e+01 5.38233084e+01]
2023-01-26 15:55:14,858 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 15:55:15,496 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 323.7568054199219, best pos: [3.24039499e+02 3.67869322e+01 9.80863441e-01 1.31764960e+02
 5.26393373e+00 3.35117033e-02]
2023-01-26 15:55:15,703 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 15:55:16,335 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 7.669471740722656, best pos: [  9.29057969  35.32167153   0.79937793 338.75513508]
2023-01-26 15:55:16,593 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 15:55:17,227 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.8001024723052979, best pos: [8.21332272e+00 4.74747301e+02 1.77487043e+01 1.09165482e-01
 3.23964886e+02 2.01754341e+01 1.37424554e+02 1.94463899e+00
 3.61087865e+01 1.15720401e+01 5.25228252e+01]
2023-01-26 15:57:02,522 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 15:57:03,456 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 324.5609130859375, best pos: [3.25088516e+02 4.67687406e+01 8.21011749e-01 1.87640119e+02
 2.86257139e+00 2.97665639e-02]
2023-01-26 15:57:04,073 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 15:57:04,684 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 7.669471740722656, best pos: [  9.28346762  40.86518554   0.87453398 333.80936968]
2023-01-26 15:57:04,943 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 15:57:05,567 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.8001024723052979, best pos: [  8.20214951 464.53296126  37.22424779   0.69666149 111.52468879
  31.57054933  87.59368162   2.47868926  39.43341584  12.38692678
  55.68049868]
2023-01-26 15:57:19,955 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 15:57:20,615 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 364.3113098144531, best pos: [3.60842196e+02 3.84631017e+01 3.31674117e-01 5.15111243e+01
 1.29191611e+00 9.24448793e-03]
2023-01-26 15:57:20,816 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 15:57:21,425 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 7.669471740722656, best pos: [  9.43983418  45.41540926   0.7839514  344.72564757]
2023-01-26 15:57:21,696 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 15:57:22,327 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.8023428916931152, best pos: [8.16844683e+00 8.18871048e+02 2.85135416e+01 5.02320509e-01
 2.06087032e+02 3.48130627e+01 1.02792595e+02 2.33153948e+00
 3.41679781e+01 1.20854696e+01 5.79318938e+01]
2023-01-26 16:25:31,463 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 16:25:32,363 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 317.37762451171875, best pos: [3.30951041e+02 3.82616105e+01 7.58406681e-01 3.13211140e+01
 3.17755462e+00 4.39743648e-03]
2023-01-26 16:25:33,036 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 16:25:33,651 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 7.669471740722656, best pos: [  9.53796522  38.40109214   0.90332682 332.67306143]
2023-01-26 16:25:33,924 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 16:25:34,558 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.7021936178207397, best pos: [8.19882282e+00 8.23374915e+02 4.31059488e+01 2.45345083e-01
 3.14851791e+02 2.68249142e+01 1.28488298e+02 2.20220334e+00
 2.51732263e+01 1.13808432e+01 3.75762043e+01]
2023-01-26 16:56:01,168 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 16:56:01,793 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 345.0224609375, best pos: [3.31413168e+02 2.18271342e+01 6.50199419e-01 2.63127452e+02
 5.89417573e+00 1.08691498e-01]
2023-01-26 16:56:02,001 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 16:56:02,987 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 7.669471740722656, best pos: [  9.29569363  35.27346086   0.85620258 338.76135023]
2023-01-26 16:56:03,407 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 16:56:04,043 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.7066718339920044, best pos: [8.23111494e+00 4.64797333e+02 4.68257335e+00 7.39605123e-02
 3.20843743e+02 3.52827630e+01 1.11216211e+02 1.97369951e+00
 3.39900473e+01 1.40670131e+01 4.81364108e+01]
2023-01-26 16:56:55,415 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 16:56:56,264 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 323.5203857421875, best pos: [3.25759801e+02 3.74423928e+01 5.96299241e-01 8.47428160e+01
 6.42302441e+00 3.35218628e-02]
2023-01-26 16:56:57,155 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 16:56:57,767 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 7.669471740722656, best pos: [  9.32933378  36.73031609   0.81992388 337.52295588]
2023-01-26 16:56:58,041 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 16:56:58,669 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.5176960229873657, best pos: [8.16511869e+00 8.21095035e+02 4.31701918e+01 5.47192433e-01
 2.80498733e+02 3.24372471e+01 9.03280334e+01 1.98019653e+00
 4.08802292e+01 1.68233208e+01 5.35014144e+01]
2023-01-26 16:56:59,127 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 16:57:00,043 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 16:57:00,588 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 16:57:41,178 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 16:57:41,818 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 331.3963317871094, best pos: [3.31134899e+02 2.13654407e+01 1.05450395e+00 2.54343888e+02
 7.07977924e+00 4.35273913e-04]
2023-01-26 16:57:42,021 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 16:57:42,674 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 7.669471740722656, best pos: [  9.34338521  38.87846615   0.81044935 335.36201723]
2023-01-26 16:57:42,930 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 16:57:43,566 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -2.2201027870178223, best pos: [  8.23846263 457.22735631   5.16470134   0.75213224 146.15275772
   4.35564276 130.97806702   2.99191291  41.98057918  12.05140977
  56.6547215 ]
2023-01-26 16:57:44,019 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 16:57:44,935 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 16:57:45,480 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 17:01:12,763 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 17:01:13,398 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 326.246826171875, best pos: [3.24516778e+02 2.75741903e+01 6.29512884e-01 2.59472233e+02
 4.89972867e+00 4.62951332e-02]
2023-01-26 17:01:13,711 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 17:01:14,320 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 7.669471740722656, best pos: [  9.47013038  35.23480908   0.84769992 347.71694278]
2023-01-26 17:01:14,578 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 17:01:15,210 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.5325369834899902, best pos: [8.15550887e+00 4.79053313e+02 3.91020678e+01 2.45862348e-01
 1.66584095e+02 1.43348363e+01 1.23722768e+02 2.10609549e+00
 3.26218770e+01 1.82593523e+01 3.84542356e+01]
2023-01-26 17:01:15,664 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 17:01:16,280 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 325.60174560546875, best pos: [3.21968777e+02 3.44593346e+01 5.67583265e-01 2.54433325e+02
 1.91825434e+00 3.38266702e-02]
2023-01-26 17:01:16,673 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 17:01:17,277 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 7.669471740722656, best pos: [  9.53505226  44.22231035   1.0911504  348.78387357]
2023-01-26 17:01:17,799 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 17:01:18,531 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.733392357826233, best pos: [8.22382372e+00 8.27397796e+02 4.09799104e+01 5.71754956e-02
 2.12228400e+02 3.97687454e+01 1.04866156e+02 1.60127212e+00
 4.46012738e+01 1.23388449e+01 5.15245060e+01]
2023-01-26 17:01:48,603 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 17:01:49,231 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 331.83929443359375, best pos: [3.31107741e+02 2.85936353e+01 3.54460067e-01 2.04160954e+02
 6.61136839e-01 3.62084415e-02]
2023-01-26 17:01:50,582 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 17:01:51,199 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 7.669471740722656, best pos: [  9.37490904  40.28418713   0.85712409 342.17891463]
2023-01-26 17:01:51,455 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 17:01:52,084 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.6496797800064087, best pos: [8.19210473e+00 6.16869736e+02 3.71287977e+00 3.33181392e-01
 2.11816076e+02 3.27475037e+01 1.15345488e+02 2.73195873e+00
 4.42923012e+01 1.30322417e+01 4.38074855e+01]
2023-01-26 17:01:52,545 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 17:01:53,167 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 326.4745178222656, best pos: [3.27467856e+02 2.85813316e+01 3.28368713e-01 1.89778028e+02
 2.64527966e+00 3.53461459e-02]
2023-01-26 17:01:53,682 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 17:01:54,320 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 7.669471740722656, best pos: [  9.3698177   36.92789651   0.97124092 329.78636012]
2023-01-26 17:01:54,823 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 17:01:55,458 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.8001024723052979, best pos: [  8.1792517  483.83507297  41.8175547    0.57247546 220.28141466
  22.44121619 111.79053189   1.9404455   32.73154377  11.62789988
  57.90236035]
2023-01-26 16:12:18,043 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/models.py changed, reloading.
2023-01-26 16:12:27,841 - django.request - WARNING - Not Found: /favicon.ico
2023-01-26 16:14:03,135 - django.utils.autoreload - INFO - /opt/django/backend/backend/urls.py changed, reloading.
2023-01-26 16:14:15,767 - django.utils.autoreload - INFO - /opt/django/backend/backend/urls.py changed, reloading.
2023-01-26 16:14:31,715 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 723, in render
    context = self.get_context(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 695, in get_context
    'post_form': self.get_rendered_html_form(data, view, 'POST', request),
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 510, in get_rendered_html_form
    return self.render_form_for_serializer(serializer)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 518, in render_form_for_serializer
    serializer.data,
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 555, in data
    ret = super().data
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 257, in data
    self._data = self.get_initial()
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 405, in get_initial
    for field in self.fields.values()
  File "/usr/local/lib/python3.10/dist-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 356, in fields
    for key, value in self.get_fields().items():
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 1076, in get_fields
    field_class, field_kwargs = self.build_field(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 1222, in build_field
    return self.build_unknown_field(field_name, model_class)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 1340, in build_unknown_field
    raise ImproperlyConfigured(
django.core.exceptions.ImproperlyConfigured: Field name `initial_EC_maxinitial_turbidity_min` is not valid for model `optimizeTurData`.
2023-01-26 16:15:15,759 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/serializers.py changed, reloading.
2023-01-26 16:15:25,310 - django.request - WARNING - Method Not Allowed: /opt_tur/
2023-01-26 16:16:13,611 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/serializers.py changed, reloading.
2023-01-26 16:16:39,924 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 723, in render
    context = self.get_context(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 695, in get_context
    'post_form': self.get_rendered_html_form(data, view, 'POST', request),
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 510, in get_rendered_html_form
    return self.render_form_for_serializer(serializer)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 518, in render_form_for_serializer
    serializer.data,
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 555, in data
    ret = super().data
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 257, in data
    self._data = self.get_initial()
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 405, in get_initial
    for field in self.fields.values()
  File "/usr/local/lib/python3.10/dist-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 356, in fields
    for key, value in self.get_fields().items():
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 1076, in get_fields
    field_class, field_kwargs = self.build_field(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 1222, in build_field
    return self.build_unknown_field(field_name, model_class)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 1340, in build_unknown_field
    raise ImproperlyConfigured(
django.core.exceptions.ImproperlyConfigured: Field name `flocculant` is not valid for model `optimizeTurData`.
2023-01-26 16:17:29,717 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/models.py changed, reloading.
2023-01-26 16:17:39,078 - django.request - WARNING - Method Not Allowed: /opt_tur/
2023-01-26 16:18:53,569 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 153, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 86, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 23, in minimize
    bounds["floc_saline_Molarity"][0],
KeyError: 'floc_saline_Molarity'
2023-01-26 16:20:12,815 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/views.py changed, reloading.
2023-01-26 16:20:26,019 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 16:20:26,770 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 426.2123718261719, best pos: [316.07719048  36.51718865   0.6360109  170.89236284   5.33791892
   0.51199503]
2023-01-26 16:20:26,902 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 167, in post
    "floc_cactus_share": best_param[6],
IndexError: index 6 is out of bounds for axis 0 with size 6
2023-01-26 16:25:29,096 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/views.py changed, reloading.
2023-01-26 16:25:39,579 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 16:25:40,350 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 425.52728271484375, best pos: [327.94543484  30.85598663   0.51603939 238.46834613   5.06020385
   0.52009766]
2023-01-26 16:26:25,442 - django.request - WARNING - Method Not Allowed: /opt_tur/
2023-01-26 16:26:33,121 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 16:26:33,863 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 7.700768947601318, best pos: [  8.38827908  27.29569858   0.6371866  185.00482549]
2023-01-26 16:26:47,446 - django.request - WARNING - Method Not Allowed: /opt_tur/
2023-01-26 16:26:52,892 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 16:26:53,760 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.568632125854492, best pos: [  8.2065882  471.93955274 130.95337658   0.80483132 233.56439576
  25.23756445 130.25298389   2.14303697  37.05209256  10.29054205
  55.20100639]
2023-01-26 16:26:54,005 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 193, in post
    "duration_sedimetation_phase": best_param[11],
IndexError: index 11 is out of bounds for axis 0 with size 11
2023-01-26 16:28:26,819 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/views.py changed, reloading.
2023-01-26 16:28:38,123 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-26 16:28:39,180 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.568632125854492, best pos: [  8.16505526 478.29542413 130.79442093   0.83472627 211.59002245
  22.11940215 118.76686603   1.54683238  32.51690541   4.86349515
  53.0603131 ]
2023-01-26 16:32:18,010 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/models.py changed, reloading.
2023-01-26 16:41:40,689 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-01-26 16:42:07,074 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/models.py changed, reloading.
2023-01-26 16:43:14,523 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/views.py changed, reloading.
2023-01-26 16:44:03,873 - django.utils.autoreload - INFO - /opt/django/backend/backend/urls.py changed, reloading.
2023-01-26 16:44:37,361 - django.request - WARNING - Not Found: /list_bounds/
2023-01-26 16:44:45,737 - django.request - ERROR - Internal Server Error: /bounds/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 24, in get
    data = get_bounds()
  File "/opt/django/backend/floc_analyzer/models.py", line 26, in get_bounds
    bounds[index] = [value, ub[index]+0.1]
TypeError: can only concatenate str (not "float") to str
2023-01-26 16:46:47,414 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/models.py changed, reloading.
2023-01-26 16:46:55,443 - django.request - ERROR - Internal Server Error: /bounds/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 24, in get
    data = get_bounds()
  File "/opt/django/backend/floc_analyzer/models.py", line 26, in get_bounds
    if type(bounds[index]) == (float or int):
KeyError: 'id'
2023-01-26 16:47:27,033 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/models.py changed, reloading.
2023-01-26 16:47:34,832 - django.request - ERROR - Internal Server Error: /bounds/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 24, in get
    data = get_bounds()
  File "/opt/django/backend/floc_analyzer/models.py", line 28, in get_bounds
    if type(bounds[index]) == (float or int):
KeyError: 'id'
2023-01-26 16:49:16,737 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/models.py changed, reloading.
2023-01-26 16:51:14,836 - django.request - ERROR - Internal Server Error: /bounds/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 24, in get
    data = get_bounds()
  File "/opt/django/backend/floc_analyzer/models.py", line 22, in get_bounds
    df.drop("id", inplace=True)
  File "/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py", line 331, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py", line 5396, in drop
    return super().drop(
  File "/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py", line 331, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py", line 4505, in drop
    obj = obj._drop_axis(labels, axis, level=level, errors=errors)
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py", line 4546, in _drop_axis
    new_axis = axis.drop(labels, errors=errors)
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py", line 6977, in drop
    raise KeyError(f"{list(labels[mask])} not found in axis")
KeyError: "['id'] not found in axis"
2023-01-26 16:51:55,861 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/models.py changed, reloading.
2023-01-26 16:52:04,151 - django.request - ERROR - Internal Server Error: /bounds/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 24, in get
    data = get_bounds()
  File "/opt/django/backend/floc_analyzer/models.py", line 22, in get_bounds
    df.drop(column="id", inplace=True)
  File "/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py", line 331, in wrapper
    return func(*args, **kwargs)
TypeError: DataFrame.drop() got an unexpected keyword argument 'column'
2023-01-26 16:52:36,753 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/models.py changed, reloading.
2023-01-26 16:52:48,626 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/models.py changed, reloading.
2023-01-26 16:52:58,776 - django.request - ERROR - Internal Server Error: /bounds/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 24, in get
    data = get_bounds()
  File "/opt/django/backend/floc_analyzer/models.py", line 29, in get_bounds
    if type(bounds[index]) == (float or int):
KeyError: 'surface_water'
2023-01-26 16:54:47,956 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/models.py changed, reloading.
2023-01-26 16:54:54,358 - django.request - ERROR - Internal Server Error: /bounds/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 24, in get
    data = get_bounds()
  File "/opt/django/backend/floc_analyzer/models.py", line 29, in get_bounds
    if type(bounds[index]) == (float or int):
KeyError: 'initial_pH'
2023-01-26 16:55:04,947 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/models.py changed, reloading.
2023-01-26 16:55:30,383 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/models.py changed, reloading.
2023-01-26 19:09:13,845 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/models.py changed, reloading.
2023-01-26 19:47:11,044 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/models.py changed, reloading.
2023-01-27 11:31:43,070 - django.request - WARNING - Not Found: /favicon.ico
2023-01-27 11:31:54,755 - django.request - WARNING - Not Found: /optimze
2023-01-27 11:32:01,650 - django.request - WARNING - Not Found: /optimize
2023-01-27 11:32:18,642 - django.request - WARNING - Method Not Allowed: /opt_tur/
2023-01-27 12:13:26,783 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 118, in post
    float(request.data.get("initial_pH_min")),
TypeError: float() argument must be a string or a real number, not 'NoneType'
2023-01-27 12:13:46,452 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 118, in post
    float(request.data.get("initial_pH_min")),
TypeError: float() argument must be a string or a real number, not 'NoneType'
2023-01-27 12:18:43,779 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 84, in inputoptimization
    pipe, _ = trainorloadpipe(pred_type, sw, floc, loadpipe, printass)
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 37, in trainorloadpipe
    X_train, X_test, y_train, y_test = preparedataset(pred_type=pred_type, sw=sw, floc=floc).traintestset()
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 29, in traintestset
    y = self.dataset[self.target]
AttributeError: 'preparedataset' object has no attribute 'dataset'
2023-01-27 12:23:08,364 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 84, in inputoptimization
    pipe, _ = trainorloadpipe(pred_type, sw, floc, loadpipe, printass)
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 37, in trainorloadpipe
    X_train, X_test, y_train, y_test = preparedataset(pred_type=pred_type, sw=sw, floc=floc).traintestset()
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 29, in traintestset
    y = self.dataset[self.target]
AttributeError: 'preparedataset' object has no attribute 'dataset'
2023-01-27 12:27:04,682 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 84, in inputoptimization
    pipe, _ = trainorloadpipe(pred_type, sw, floc, loadpipe, printass)
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 46, in trainorloadpipe
    pipe = load_pipeline(config.pipe_loadpath)
  File "/opt/django/backend/floc_analyzer/scripts/modules/mlalgorithms.py", line 76, in load_pipeline
    pipeline = load(loadpath)
  File "/usr/local/lib/python3.10/dist-packages/joblib/numpy_pickle.py", line 650, in load
    with open(filename, 'rb') as f:
FileNotFoundError: [Errno 2] No such file or directory: '\\opt\\django\\backend\\floc_analyzer\\data\\flocculation_analysis_pipeline'
2023-01-27 12:28:06,898 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 84, in inputoptimization
    pipe, _ = trainorloadpipe(pred_type, sw, floc, loadpipe, printass)
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 46, in trainorloadpipe
    pipe = load_pipeline(config.pipe_loadpath)
  File "/opt/django/backend/floc_analyzer/scripts/modules/mlalgorithms.py", line 76, in load_pipeline
    pipeline = load(loadpath)
  File "/usr/local/lib/python3.10/dist-packages/joblib/numpy_pickle.py", line 650, in load
    with open(filename, 'rb') as f:
FileNotFoundError: [Errno 2] No such file or directory: '\\opt\\django\\backend\\floc_analyzer\\data\\flocculation_analysis_pipeline'
2023-01-27 12:29:27,460 - django.request - WARNING - Bad Request: /opt_tur/
2023-01-27 12:31:23,558 - django.request - WARNING - Bad Request: /opt_tur/
2023-01-27 12:31:27,339 - django.request - WARNING - Bad Request: /opt_tur/
2023-01-27 12:31:30,950 - django.request - WARNING - Bad Request: /opt_tur/
2023-01-27 12:32:57,870 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-27 12:32:58,673 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.754457473754883, best pos: [8.21424776e+00 4.69947969e+02 1.09217761e+02 3.01300626e-01
 2.20951790e+02 3.64798733e+01 1.35183742e+02 1.96809589e+00
 2.31078938e+01 1.02505672e+01 3.96558594e+01]
2023-01-27 12:33:51,866 - django.request - WARNING - Method Not Allowed: /opt_tur/
2023-01-27 12:36:14,517 - django.request - WARNING - Method Not Allowed: /opt_tur/
2023-01-27 12:36:18,180 - django.request - WARNING - Method Not Allowed: /opt_tur/
2023-01-27 12:36:23,122 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-27 12:36:23,955 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.708403587341309, best pos: [8.19671346e+00 4.82686390e+02 1.22686304e+02 2.38753931e-01
 2.48664125e+02 3.48898038e+01 1.39276137e+02 2.14882046e+00
 2.67959554e+01 1.21840489e+01 4.06031045e+01]
2023-01-27 12:37:09,614 - django.request - WARNING - Bad Request: /opt_tur/
2023-01-27 12:38:00,628 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-27 12:38:01,381 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21160208e+00 4.83965310e+02 9.77099364e+01 3.35148001e-01
 1.66587354e+02 9.89657191e+00 1.02279129e+02            nan
 2.27772000e+01 1.21898750e+01 5.27953826e+01]
2023-01-27 12:38:01,485 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 99, in render
    ret = json.dumps(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/utils/json.py", line 25, in dumps
    return json.dumps(*args, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
ValueError: Out of range float values are not JSON compliant
2023-01-27 12:38:28,028 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-27 12:38:28,748 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.23722996e+00 4.75131519e+02 8.83464729e+01 3.58820415e-01
 1.51631660e+02 1.86178043e+01 1.04101821e+02            nan
 2.29981998e+01 1.19172559e+01 5.64360725e+01]
2023-01-27 12:38:28,861 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 99, in render
    ret = json.dumps(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/utils/json.py", line 25, in dumps
    return json.dumps(*args, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
ValueError: Out of range float values are not JSON compliant
2023-01-27 12:42:10,075 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-27 12:42:10,895 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.22003831e+00 4.70763216e+02 9.38167935e+01 4.13689400e-01
 2.22434075e+02 2.09016712e+01 9.86814906e+01            nan
 2.60481879e+01 1.05371765e+01 5.50912709e+01]
2023-01-27 12:42:10,988 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 99, in render
    ret = json.dumps(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/utils/json.py", line 25, in dumps
    return json.dumps(*args, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
ValueError: Out of range float values are not JSON compliant
2023-01-27 12:42:33,891 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 124, in post
    int(request.data.get("floc_concentration_min")),
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
2023-01-27 12:43:43,276 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-27 12:43:44,074 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.23358219e+00 4.71210074e+02 9.33982316e+01 1.07336401e-01
 1.46744289e+02 1.80830055e+01 1.14408982e+02            nan
 2.51502022e+01 1.23907930e+01 5.83298097e+01]
2023-01-27 12:43:44,187 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 723, in render
    context = self.get_context(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 679, in get_context
    'content': self.get_content(renderer, data, accepted_media_type, renderer_context),
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 412, in get_content
    content = renderer.render(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 99, in render
    ret = json.dumps(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/utils/json.py", line 25, in dumps
    return json.dumps(*args, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 201, in encode
    chunks = list(chunks)
  File "/usr/lib/python3.10/json/encoder.py", line 431, in _iterencode
    yield from _iterencode_dict(o, _current_indent_level)
  File "/usr/lib/python3.10/json/encoder.py", line 397, in _iterencode_dict
    yield _floatstr(value)
  File "/usr/lib/python3.10/json/encoder.py", line 239, in floatstr
    raise ValueError(
ValueError: Out of range float values are not JSON compliant: nan
2023-01-27 12:43:57,463 - django.request - WARNING - Method Not Allowed: /opt_tur/
2023-01-27 12:44:16,247 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 124, in post
    int(request.data.get("floc_concentration_min")),
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
2023-01-27 12:44:49,582 - django.request - WARNING - Method Not Allowed: /opt_tur/
2023-01-27 12:44:50,016 - django.request - WARNING - Not Found: /favicon.ico
2023-01-28 10:16:01,482 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 10:16:02,333 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.19428331e+00 4.75809623e+02 1.01530874e+02 4.64824342e-01
 1.48042042e+02 2.78292159e+01 9.72858070e+01            nan
 2.65491248e+01 1.19485982e+01 5.72892088e+01]
2023-01-28 10:16:02,475 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 723, in render
    context = self.get_context(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 679, in get_context
    'content': self.get_content(renderer, data, accepted_media_type, renderer_context),
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 412, in get_content
    content = renderer.render(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 99, in render
    ret = json.dumps(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/utils/json.py", line 25, in dumps
    return json.dumps(*args, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 201, in encode
    chunks = list(chunks)
  File "/usr/lib/python3.10/json/encoder.py", line 431, in _iterencode
    yield from _iterencode_dict(o, _current_indent_level)
  File "/usr/lib/python3.10/json/encoder.py", line 397, in _iterencode_dict
    yield _floatstr(value)
  File "/usr/lib/python3.10/json/encoder.py", line 239, in floatstr
    raise ValueError(
ValueError: Out of range float values are not JSON compliant: nan
2023-01-28 10:17:47,022 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 124, in post
    int(request.data.get("floc_concentration_min")),
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
2023-01-28 10:18:59,061 - django.request - WARNING - Method Not Allowed: /opt_tur/
2023-01-28 10:19:50,545 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 10:19:51,417 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.24919039e+00 4.73294788e+02 9.69643053e+01 2.22832408e-01
 1.70226433e+02 2.57369972e+01 1.04985107e+02            nan
 2.62045592e+01 1.23376649e+01 5.38830136e+01]
2023-01-28 10:19:51,530 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 723, in render
    context = self.get_context(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 679, in get_context
    'content': self.get_content(renderer, data, accepted_media_type, renderer_context),
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 412, in get_content
    content = renderer.render(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 99, in render
    ret = json.dumps(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/utils/json.py", line 25, in dumps
    return json.dumps(*args, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 201, in encode
    chunks = list(chunks)
  File "/usr/lib/python3.10/json/encoder.py", line 431, in _iterencode
    yield from _iterencode_dict(o, _current_indent_level)
  File "/usr/lib/python3.10/json/encoder.py", line 397, in _iterencode_dict
    yield _floatstr(value)
  File "/usr/lib/python3.10/json/encoder.py", line 239, in floatstr
    raise ValueError(
ValueError: Out of range float values are not JSON compliant: nan
2023-01-28 10:20:04,723 - django.request - WARNING - Not Found: /optimize
2023-01-28 10:20:13,397 - django.request - WARNING - Method Not Allowed: /opt_tur/
2023-01-28 10:21:26,788 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 10:21:27,617 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.24765860e+00 4.66062354e+02 9.56500185e+01 3.23219616e-01
 1.84840105e+02 3.97107841e+01 9.75878629e+01            nan
 2.72744391e+01 1.11518811e+01 5.37680580e+01]
2023-01-28 10:21:27,732 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 723, in render
    context = self.get_context(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 679, in get_context
    'content': self.get_content(renderer, data, accepted_media_type, renderer_context),
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 412, in get_content
    content = renderer.render(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 99, in render
    ret = json.dumps(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/utils/json.py", line 25, in dumps
    return json.dumps(*args, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 201, in encode
    chunks = list(chunks)
  File "/usr/lib/python3.10/json/encoder.py", line 431, in _iterencode
    yield from _iterencode_dict(o, _current_indent_level)
  File "/usr/lib/python3.10/json/encoder.py", line 397, in _iterencode_dict
    yield _floatstr(value)
  File "/usr/lib/python3.10/json/encoder.py", line 239, in floatstr
    raise ValueError(
ValueError: Out of range float values are not JSON compliant: nan
2023-01-28 10:21:31,591 - django.request - WARNING - Method Not Allowed: /opt_tur/
2023-01-28 10:22:08,531 - django.request - WARNING - Method Not Allowed: /opt_tur/
2023-01-28 10:22:18,105 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 10:22:18,858 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.22785953e+00 4.66301635e+02 9.13087147e+01 3.60545541e-01
 2.07601571e+02 3.39986361e+01 1.10410311e+02            nan
 2.42457607e+01 1.20041887e+01 5.63381884e+01]
2023-01-28 10:22:18,971 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 723, in render
    context = self.get_context(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 679, in get_context
    'content': self.get_content(renderer, data, accepted_media_type, renderer_context),
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 412, in get_content
    content = renderer.render(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 99, in render
    ret = json.dumps(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/utils/json.py", line 25, in dumps
    return json.dumps(*args, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 201, in encode
    chunks = list(chunks)
  File "/usr/lib/python3.10/json/encoder.py", line 431, in _iterencode
    yield from _iterencode_dict(o, _current_indent_level)
  File "/usr/lib/python3.10/json/encoder.py", line 397, in _iterencode_dict
    yield _floatstr(value)
  File "/usr/lib/python3.10/json/encoder.py", line 239, in floatstr
    raise ValueError(
ValueError: Out of range float values are not JSON compliant: nan
2023-01-28 10:22:25,787 - django.request - WARNING - Method Not Allowed: /opt_tur/
2023-01-28 10:24:07,035 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 10:24:07,901 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21039588e+00 4.77724809e+02 9.99942620e+01 4.27495090e-01
 1.88635107e+02 2.23425787e+01 1.07303705e+02            nan
 2.58016409e+01 1.23893388e+01 5.32905553e+01]
2023-01-28 10:24:08,009 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 723, in render
    context = self.get_context(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 679, in get_context
    'content': self.get_content(renderer, data, accepted_media_type, renderer_context),
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 412, in get_content
    content = renderer.render(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 99, in render
    ret = json.dumps(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/utils/json.py", line 25, in dumps
    return json.dumps(*args, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 201, in encode
    chunks = list(chunks)
  File "/usr/lib/python3.10/json/encoder.py", line 431, in _iterencode
    yield from _iterencode_dict(o, _current_indent_level)
  File "/usr/lib/python3.10/json/encoder.py", line 397, in _iterencode_dict
    yield _floatstr(value)
  File "/usr/lib/python3.10/json/encoder.py", line 239, in floatstr
    raise ValueError(
ValueError: Out of range float values are not JSON compliant: nan
2023-01-28 10:25:32,510 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 10:25:33,331 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.754457473754883, best pos: [8.22203917e+00 4.73881933e+02 8.80350753e+01 1.12065860e-01
 1.50628059e+02 2.25223033e+01 1.38281504e+02 1.96234834e+00
 2.68001354e+01 1.02115645e+01 4.51388992e+01]
2023-01-28 10:25:57,586 - django.request - WARNING - Method Not Allowed: /opt_tur/
2023-01-28 10:26:07,752 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 124, in post
    int(request.data.get("floc_concentration_min")),
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
2023-01-28 10:29:31,886 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 10:29:32,611 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.22653820e+00 4.81185874e+02 9.46607763e+01 3.26710519e-01
 1.64892074e+02 3.12053760e+01 9.60784059e+01            nan
 2.31030700e+01 1.21588206e+01 5.91653665e+01]
2023-01-28 10:29:32,705 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 99, in render
    ret = json.dumps(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/utils/json.py", line 25, in dumps
    return json.dumps(*args, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
ValueError: Out of range float values are not JSON compliant
2023-01-28 10:37:28,109 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 118, in post
    float(request.data.get("initial_pH_min")),
TypeError: float() argument must be a string or a real number, not 'NoneType'
2023-01-28 10:38:08,937 - django.request - WARNING - Bad Request: /opt_tur/
2023-01-28 10:45:29,024 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 118, in post
    float(request.data.get("initial_pH_min")),
AttributeError: 'str' object has no attribute 'get'
2023-01-28 10:46:32,409 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 10:46:33,121 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.23988966e+00 4.77553089e+02 9.99225440e+01 1.09808122e-01
 1.95913723e+02 2.43853806e+01 1.12929321e+02            nan
 2.29758119e+01 1.19260026e+01 5.37477970e+01]
2023-01-28 10:46:33,207 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 99, in render
    ret = json.dumps(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/utils/json.py", line 25, in dumps
    return json.dumps(*args, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
ValueError: Out of range float values are not JSON compliant
2023-01-28 10:47:58,696 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 10:47:59,401 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.16303864e+00 4.70254847e+02 9.94746599e+01 4.57768409e-01
 1.89614222e+02 3.14278977e+01 7.95244488e+01            nan
 2.55654843e+01 1.03627547e+01 5.54245872e+01]
2023-01-28 10:47:59,503 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 99, in render
    ret = json.dumps(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/utils/json.py", line 25, in dumps
    return json.dumps(*args, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
ValueError: Out of range float values are not JSON compliant
2023-01-28 10:50:05,408 - django.request - WARNING - Bad Request: /opt_tur/
2023-01-28 10:50:29,371 - django.request - WARNING - Bad Request: /opt_tur/
2023-01-28 10:51:32,003 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 10:51:32,845 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.24010255e+00 4.78318410e+02 8.69705462e+01 2.00887434e-01
 1.77832548e+02 1.02909204e+01 9.98692675e+01            nan
 2.57309111e+01 1.16126944e+01 5.34568474e+01]
2023-01-28 10:51:32,954 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 723, in render
    context = self.get_context(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 679, in get_context
    'content': self.get_content(renderer, data, accepted_media_type, renderer_context),
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 412, in get_content
    content = renderer.render(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 99, in render
    ret = json.dumps(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/utils/json.py", line 25, in dumps
    return json.dumps(*args, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 201, in encode
    chunks = list(chunks)
  File "/usr/lib/python3.10/json/encoder.py", line 431, in _iterencode
    yield from _iterencode_dict(o, _current_indent_level)
  File "/usr/lib/python3.10/json/encoder.py", line 397, in _iterencode_dict
    yield _floatstr(value)
  File "/usr/lib/python3.10/json/encoder.py", line 239, in floatstr
    raise ValueError(
ValueError: Out of range float values are not JSON compliant: nan
2023-01-28 11:00:10,637 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/pso.py changed, reloading.
2023-01-28 11:00:31,109 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:00:32,108 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.17851055e+00 4.81845062e+02 1.04672743e+02 4.11091671e-01
 1.48933241e+02 2.35818111e+01 9.81051378e+01            nan
 2.73063995e+01 1.09536742e+01 5.52581478e+01]
2023-01-28 11:00:32,255 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 99, in render
    ret = json.dumps(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/utils/json.py", line 25, in dumps
    return json.dumps(*args, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
ValueError: Out of range float values are not JSON compliant
2023-01-28 11:00:39,621 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:00:40,421 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.20892276e+00 4.79077507e+02 9.85755930e+01 2.94244797e-01
 1.09082920e+02 2.65005302e+01 1.11969690e+02            nan
 2.60641312e+01 1.06438483e+01 5.31222599e+01]
2023-01-28 11:00:40,512 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 99, in render
    ret = json.dumps(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/utils/json.py", line 25, in dumps
    return json.dumps(*args, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
ValueError: Out of range float values are not JSON compliant
2023-01-28 11:01:34,018 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/pso.py changed, reloading.
2023-01-28 11:01:59,619 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:02:00,439 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.19379080e+00 4.82621791e+02 9.53980788e+01 1.23307669e-01
 2.47502629e+02 3.21728765e+01 1.13508434e+02            nan
 2.42929897e+01 1.24287654e+01 5.35194963e+01]
2023-01-28 11:02:00,569 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 99, in render
    ret = json.dumps(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/utils/json.py", line 25, in dumps
    return json.dumps(*args, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
ValueError: Out of range float values are not JSON compliant
2023-01-28 11:04:20,905 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/pso.py changed, reloading.
2023-01-28 11:04:47,244 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:04:48,044 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.17902092e+00 4.81157336e+02 1.04061115e+02 2.81380807e-01
 2.90611739e+02 2.45620486e+01 9.07069726e+01            nan
 2.72959431e+01 1.16865833e+01 5.39852733e+01]
2023-01-28 11:04:48,174 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 99, in render
    ret = json.dumps(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/utils/json.py", line 25, in dumps
    return json.dumps(*args, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
ValueError: Out of range float values are not JSON compliant
2023-01-28 11:05:29,907 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/pso.py changed, reloading.
2023-01-28 11:05:42,222 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:05:43,098 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.754457473754883, best pos: [8.19601957e+00 4.76635289e+02 1.00821817e+02 2.53693180e-01
 1.57407770e+02 1.87786839e+01 7.84680050e+01            nan
 2.88122512e+01 1.22405343e+01 3.80349854e+01]
2023-01-28 11:05:43,228 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 99, in render
    ret = json.dumps(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/utils/json.py", line 25, in dumps
    return json.dumps(*args, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
ValueError: Out of range float values are not JSON compliant
2023-01-28 11:06:11,786 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/pso.py changed, reloading.
2023-01-28 11:06:20,063 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:06:21,233 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.19072349e+00 4.74100807e+02 1.10613501e+02 4.25715215e-01
 2.24040875e+02 2.35226279e+01 1.15532002e+02            nan
 2.63100343e+01 1.18376069e+01 5.63860615e+01]
2023-01-28 11:06:21,371 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 99, in render
    ret = json.dumps(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/utils/json.py", line 25, in dumps
    return json.dumps(*args, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
ValueError: Out of range float values are not JSON compliant
2023-01-28 11:06:39,790 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/pso.py changed, reloading.
2023-01-28 11:06:49,172 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:06:50,414 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.19434959e+00 4.78194383e+02 1.07720526e+02 1.76537179e-01
 1.45945906e+02 3.87243824e+01 1.03085898e+02            nan
 2.55856208e+01 1.20595120e+01 5.28206511e+01]
2023-01-28 11:06:50,553 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 99, in render
    ret = json.dumps(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/utils/json.py", line 25, in dumps
    return json.dumps(*args, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
ValueError: Out of range float values are not JSON compliant
2023-01-28 11:07:28,059 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/pso.py changed, reloading.
2023-01-28 11:07:38,887 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:07:39,789 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.754457473754883, best pos: [  8.22110192 464.58901893 116.13172787   0.4773977  216.39304199
  16.15476994  93.42276917          nan  27.77764593  10.13109376
  42.65551881]
2023-01-28 11:07:39,922 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 99, in render
    ret = json.dumps(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/utils/json.py", line 25, in dumps
    return json.dumps(*args, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
ValueError: Out of range float values are not JSON compliant
2023-01-28 11:11:09,504 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/pso.py changed, reloading.
2023-01-28 11:15:49,657 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:15:50,502 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.754457473754883, best pos: [8.23786938e+00 4.66861885e+02 9.25364293e+01 2.86824009e-01
 2.69957842e+02 1.44321017e+01 1.02888189e+02            nan
 2.75402291e+01 1.23371013e+01 4.54833567e+01]
2023-01-28 11:15:50,633 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 99, in render
    ret = json.dumps(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/utils/json.py", line 25, in dumps
    return json.dumps(*args, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.10/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
ValueError: Out of range float values are not JSON compliant
2023-01-28 11:16:12,584 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/pso.py changed, reloading.
2023-01-28 11:16:22,026 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:16:22,865 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.20255797e+00 4.65990683e+02 8.22989066e+01 2.59930218e-01
 1.35850464e+02 3.53396007e+01 9.86547768e+01            nan
 2.29566228e+01 1.09916665e+01 5.86145085e+01]
2023-01-28 11:17:11,224 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/pso.py changed, reloading.
2023-01-28 11:17:28,433 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/pso.py changed, reloading.
2023-01-28 11:21:37,084 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:21:37,891 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.15809442e+00 4.81242179e+02 9.62626406e+01 3.86962660e-01
 1.71954768e+02 1.61746831e+01 1.03188520e+02            nan
 2.53198182e+01 1.20989187e+01 5.65612749e+01]
2023-01-28 11:21:47,251 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:21:48,071 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21174796e+00 4.85486803e+02 1.10613828e+02 3.17594293e-01
 1.95673149e+02 3.09629091e+01 1.07212076e+02            nan
 2.42336446e+01 1.16420251e+01 5.59001775e+01]
2023-01-28 11:22:49,422 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:22:50,086 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:22:50,332 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.754457473754883, best pos: [8.22025903e+00 4.85004311e+02 9.99473626e+01 1.32509097e-01
 1.96091947e+02 2.76336736e+01 1.02064408e+02            nan
 2.30322420e+01 1.14627430e+01 4.80376729e+01]
2023-01-28 11:22:51,078 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.754457473754883, best pos: [8.19945067e+00 4.84050997e+02 1.01959291e+02 2.35317759e-01
 1.56425448e+02 2.68947119e+01 1.05456477e+02            nan
 2.52936025e+01 1.20999057e+01 4.55572100e+01]
2023-01-28 11:24:44,005 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:24:44,826 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.23961548e+00 4.83289926e+02 9.83828492e+01 2.61708307e-01
 1.63586527e+02 3.08873235e+01 1.02085428e+02            nan
 2.46614047e+01 1.10280608e+01 5.38319138e+01]
2023-01-28 11:25:46,916 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:25:47,701 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.20306961e+00 4.83688483e+02 1.06614309e+02 2.21815322e-01
 1.59589609e+02 4.08509592e+01 9.03574198e+01            nan
 2.51503535e+01 1.19726235e+01 5.36493363e+01]
2023-01-28 11:26:03,041 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:26:03,827 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.22687473e+00 4.83654756e+02 1.10644102e+02 4.59575033e-01
 2.11145956e+02 1.94290596e+01 1.01076502e+02            nan
 2.70259398e+01 1.07851197e+01 5.40766019e+01]
2023-01-28 11:30:44,349 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:30:45,083 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21329224e+00 4.71834031e+02 1.01649939e+02 2.62431664e-01
 2.45141546e+02 2.17504645e+01 9.16888682e+01            nan
 2.35143901e+01 1.23998131e+01 5.27578086e+01]
2023-01-28 11:37:27,747 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:37:28,553 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.23929073e+00 4.75520064e+02 1.00199430e+02 1.63442840e-01
 1.79896305e+02 3.90405401e+01 8.76558131e+01            nan
 2.56550037e+01 1.19910263e+01 5.40789818e+01]
2023-01-28 11:38:56,858 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:38:57,569 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21750416e+00 4.71279594e+02 9.33044922e+01 3.55344653e-01
 1.37217096e+02 3.70308396e+01 1.04039471e+02            nan
 2.51880911e+01 1.23677682e+01 5.45020133e+01]
2023-01-28 11:45:31,427 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:45:32,123 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.22559538e+00 4.80892644e+02 1.12629617e+02 4.34295397e-01
 2.03628671e+02 3.71727562e+01 9.11377630e+01            nan
 2.84219247e+01 1.21360188e+01 5.28821954e+01]
2023-01-28 11:47:21,471 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:47:22,161 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.16011219e+00 4.75273140e+02 9.33419227e+01 3.92503709e-01
 2.60706869e+02 3.54886958e+01 9.83566517e+01            nan
 2.57536338e+01 1.08532962e+01 5.41804748e+01]
2023-01-28 11:47:33,845 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:47:34,530 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.18945877e+00 4.75863415e+02 1.08938304e+02 2.95044481e-01
 2.18576267e+02 3.48875140e+01 1.03259784e+02            nan
 2.56874715e+01 1.23223726e+01 5.38647160e+01]
2023-01-28 11:48:49,696 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:48:50,544 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.16526319e+00 4.79137220e+02 1.16966640e+02 1.81195697e-01
 1.43198639e+02 1.61996518e+01 9.65350263e+01            nan
 2.58456186e+01 1.22650380e+01 5.27656256e+01]
2023-01-28 11:49:10,244 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:49:11,037 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.20754249e+00 4.73988523e+02 1.04408136e+02 2.80197818e-01
 2.19894939e+02 1.53594053e+01 1.11908710e+02            nan
 2.57055743e+01 1.12842823e+01 5.63137495e+01]
2023-01-28 11:51:10,754 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:51:11,681 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.23885574e+00 4.67710803e+02 9.09820747e+01 3.35402962e-01
 1.76382444e+02 2.64390278e+01 9.52135550e+01            nan
 2.40603010e+01 1.08106705e+01 5.44685303e+01]
2023-01-28 11:56:09,529 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:56:10,223 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.19294377e+00 4.79492598e+02 1.14824357e+02 2.26996380e-01
 1.85393797e+02 2.20670401e+01 9.65652678e+01            nan
 2.76845974e+01 1.16846752e+01 5.35802284e+01]
2023-01-28 11:56:26,724 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:56:27,481 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21022781e+00 4.67670023e+02 9.86631916e+01 1.70588730e-01
 1.52019881e+02 1.42192261e+01 1.08210263e+02            nan
 2.67286402e+01 1.20513753e+01 5.76628743e+01]
2023-01-28 11:57:01,765 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:57:03,397 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.18707310e+00 4.80031291e+02 1.03281358e+02 3.74511146e-01
 1.42336600e+02 1.68780472e+01 1.00936986e+02            nan
 2.83378724e+01 1.20173268e+01 5.25855980e+01]
2023-01-28 11:57:38,414 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:57:39,213 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.24069901e+00 4.84967808e+02 1.01544599e+02 3.18065125e-01
 1.88049402e+02 3.72015090e+01 8.43667648e+01            nan
 2.69102748e+01 1.22468942e+01 5.30015641e+01]
2023-01-28 11:58:31,098 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 11:58:31,899 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.754457473754883, best pos: [8.20685734e+00 4.82912953e+02 1.03283130e+02 2.86159113e-01
 1.56113864e+02 9.97444775e+00 1.14226190e+02            nan
 2.32548446e+01 1.20239419e+01 4.65154597e+01]
2023-01-28 12:01:07,115 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 12:01:07,872 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.754457473754883, best pos: [8.19174175e+00 4.79696356e+02 1.02788091e+02 4.76367098e-01
 2.02763541e+02 1.37431936e+01 9.20814018e+01            nan
 2.31664914e+01 1.10744936e+01 3.97346566e+01]
2023-01-28 12:02:06,850 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 12:02:07,677 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21625225e+00 4.80006254e+02 9.46159793e+01 1.87309410e-01
 2.51690817e+02 9.47763755e+00 1.11457149e+02            nan
 2.45816265e+01 1.21603529e+01 5.30520795e+01]
2023-01-28 12:02:23,805 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 12:02:24,610 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21676895e+00 4.75920323e+02 9.06683994e+01 4.49399614e-01
 2.04351224e+02 3.01623551e+01 9.14800875e+01            nan
 2.71025293e+01 1.08108678e+01 5.53603157e+01]
2023-01-28 12:02:45,637 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 12:02:46,461 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.16093312e+00 4.85022581e+02 1.02710781e+02 1.83279231e-01
 1.84910296e+02 3.30426332e+01 9.37822930e+01            nan
 2.55306006e+01 1.16566563e+01 5.87778838e+01]
2023-01-28 12:03:01,589 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 12:03:02,459 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21762853e+00 4.64897667e+02 1.13491656e+02 4.19140834e-01
 1.79230618e+02 3.68360921e+01 1.06264683e+02            nan
 2.26221894e+01 1.15897463e+01 5.49219923e+01]
2023-01-28 12:03:16,188 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 12:03:16,917 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.15390675e+00 4.79672550e+02 1.05724539e+02 4.22498271e-01
 1.81796224e+02 2.77112737e+01 9.21746336e+01            nan
 2.74842575e+01 1.19682221e+01 5.49357477e+01]
2023-01-28 12:05:50,371 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 12:05:51,080 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.18309168e+00 4.75907067e+02 1.10767910e+02 3.70742491e-01
 1.47468775e+02 3.50163879e+01 9.45301411e+01            nan
 2.33797778e+01 1.24586883e+01 5.73106519e+01]
2023-01-28 12:08:52,224 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 12:08:53,033 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.20335771e+00 4.84892081e+02 1.10376299e+02 3.75726186e-01
 2.38124472e+02 1.14327509e+01 1.13303857e+02            nan
 2.84496728e+01 1.10615152e+01 5.66307407e+01]
2023-01-28 12:09:42,692 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 12:09:43,385 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.19378920e+00 4.82237774e+02 1.01143305e+02 2.09658224e-01
 1.57876268e+02 3.84489214e+01 1.10811461e+02            nan
 2.42193650e+01 1.14818488e+01 5.27545530e+01]
2023-01-28 12:12:39,826 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 12:12:40,525 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21006655e+00 4.70727990e+02 9.52078663e+01 2.68629969e-01
 1.84782411e+02 1.42449411e+01 1.00817442e+02            nan
 2.70563524e+01 1.14378923e+01 5.46692226e+01]
2023-01-28 12:13:16,645 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 12:13:17,458 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.18142196e+00 4.70350622e+02 1.10572497e+02 4.15575351e-01
 1.71966024e+02 1.85473729e+01 1.07962369e+02            nan
 2.66138860e+01 1.17090670e+01 5.37958059e+01]
2023-01-28 12:15:01,307 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 12:15:02,043 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.15135430e+00 4.85308339e+02 9.49341725e+01 2.68704226e-01
 1.51531490e+02 3.58762395e+01 8.12729999e+01            nan
 2.59333317e+01 1.21457765e+01 5.35377279e+01]
2023-01-28 12:15:38,167 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 12:15:38,982 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.23151407e+00 4.67187838e+02 9.05088167e+01 3.89920887e-01
 1.62767630e+02 4.11551669e+01 9.39393449e+01            nan
 2.79657799e+01 1.10258670e+01 5.38439790e+01]
2023-01-28 12:16:22,447 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 12:16:23,210 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21728480e+00 4.71919467e+02 1.08973936e+02 3.11389148e-01
 2.31908575e+02 2.11263418e+01 9.73081188e+01            nan
 2.85452480e+01 1.22470836e+01 5.30426067e+01]
2023-01-28 12:16:44,777 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 12:16:45,732 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21716505e+00 4.82628131e+02 9.51121760e+01 3.87336165e-01
 2.36661293e+02 2.91743791e+01 8.99939312e+01            nan
 2.46318444e+01 1.22460925e+01 5.28100345e+01]
2023-01-28 12:18:04,266 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 12:18:05,084 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.15541099e+00 4.82425952e+02 1.09542298e+02 2.52215870e-01
 1.71107227e+02 8.97792292e+00 7.79701959e+01            nan
 2.65113431e+01 1.11728206e+01 5.28527824e+01]
2023-01-28 12:19:04,275 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 12:19:04,975 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.754457473754883, best pos: [8.19184646e+00 4.77685159e+02 9.34494637e+01 3.15858274e-01
 1.47400092e+02 2.25865375e+01 9.69831718e+01            nan
 2.86819560e+01 1.24769686e+01 4.61022327e+01]
2023-01-28 12:19:39,466 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 12:19:40,172 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.24320329e+00 4.72372642e+02 1.16174848e+02 2.55259257e-01
 2.83133841e+02 1.07826627e+01 1.01465316e+02            nan
 2.53943070e+01 1.24499803e+01 5.58372823e+01]
2023-01-28 12:24:00,840 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 12:24:01,543 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.22696962e+00 4.81073983e+02 1.03167620e+02 2.96428455e-01
 2.09429210e+02 3.97521748e+01 1.10445571e+02            nan
 2.41964696e+01 1.21731320e+01 5.57629389e+01]
2023-01-28 12:24:41,287 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 12:24:42,098 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.16739259e+00 4.72981482e+02 9.59375441e+01 2.22181725e-01
 1.82524674e+02 1.53297065e+01 9.90610325e+01            nan
 2.26336606e+01 1.13661138e+01 5.30748031e+01]
2023-01-28 12:30:32,943 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 12:30:33,768 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.16969782e+00 4.80039983e+02 9.44872148e+01 4.79007870e-01
 1.77024237e+02 2.14042183e+01 1.12890835e+02            nan
 2.64215311e+01 1.22505903e+01 5.40625177e+01]
2023-01-28 12:35:01,610 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 12:35:02,439 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.24858739e+00 4.84138668e+02 9.92013140e+01 2.08537073e-01
 1.63225340e+02 1.83327552e+01 1.03661382e+02            nan
 2.46339041e+01 1.24996666e+01 5.31358502e+01]
2023-01-28 13:21:50,279 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 13:21:51,158 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.754457473754883, best pos: [8.21945478e+00 4.79968489e+02 9.51277610e+01 3.18588081e-01
 2.13036338e+02 2.78063528e+01 1.16353960e+02            nan
 2.25124154e+01 1.18826965e+01 4.12287180e+01]
2023-01-28 13:22:04,071 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 13:22:04,911 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.19968118e+00 4.69128302e+02 9.14056305e+01 1.96688924e-01
 2.22099523e+02 3.18385475e+01 1.06188015e+02            nan
 2.28007201e+01 1.23918331e+01 5.66264177e+01]
2023-01-28 13:22:33,087 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 13:22:33,934 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.754457473754883, best pos: [8.20606790e+00 4.79257690e+02 8.75310647e+01 2.41129367e-01
 1.64742839e+02 2.44297428e+01 9.23976543e+01            nan
 2.56974992e+01 1.21594010e+01 4.13633095e+01]
2023-01-28 13:24:48,790 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 13:24:49,529 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [  8.18937358 482.68664704 103.79892726   0.48601377 263.6559347
  19.32071982  87.07136122          nan  26.36677633  12.1241706
  52.66309359]
2023-01-28 13:25:26,224 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-28 13:25:27,016 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.20919127e+00 4.65153597e+02 9.22382585e+01 2.27403981e-01
 2.21526847e+02 2.15503612e+01 1.12269087e+02            nan
 2.44891623e+01 1.22612141e+01 5.30989496e+01]
2023-01-29 08:10:08,984 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:10:09,846 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.18553811e+00 4.82750549e+02 9.86583628e+01 2.81197027e-01
 2.53758062e+02 2.70603950e+01 1.02490762e+02            nan
 2.32085344e+01 1.23457352e+01 5.34749314e+01]
2023-01-29 08:11:02,343 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:11:03,174 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.22594499e+00 4.85436938e+02 1.03233217e+02 3.61077015e-01
 2.40948098e+02 8.37204722e+00 9.68830003e+01            nan
 2.40986501e+01 1.07960291e+01 5.93200947e+01]
2023-01-29 08:11:15,003 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:11:15,845 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.16640465e+00 4.79533722e+02 1.04808980e+02 4.40800562e-01
 2.92657908e+02 3.43777975e+01 9.14663591e+01            nan
 2.64759424e+01 1.21110423e+01 5.40231204e+01]
2023-01-29 08:17:36,807 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:17:37,526 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.22714481e+00 4.68268162e+02 9.39127258e+01 2.11796734e-01
 1.75471011e+02 1.60399981e+01 1.21072719e+02            nan
 2.55184832e+01 1.19900668e+01 5.64961155e+01]
2023-01-29 08:17:49,211 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:17:49,940 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.15125475e+00 4.84327609e+02 1.04289742e+02 1.42684182e-01
 1.69135437e+02 3.64216831e+01 1.16677854e+02            nan
 2.63579895e+01 1.23278473e+01 5.51951675e+01]
2023-01-29 08:20:12,665 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:20:13,401 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.754457473754883, best pos: [8.23062818e+00 4.76189089e+02 9.69701562e+01 2.93327028e-01
 1.60980803e+02 3.84383238e+01 1.03377271e+02            nan
 2.43073082e+01 1.22478805e+01 4.31686836e+01]
2023-01-29 08:20:21,735 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:20:22,462 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.15500704e+00 4.65224656e+02 1.08044726e+02 1.20918443e-01
 1.70370979e+02 1.48898252e+01 8.17941203e+01            nan
 2.61665520e+01 1.14638698e+01 5.68643649e+01]
2023-01-29 08:21:28,233 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:21:29,090 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.23795118e+00 4.69351840e+02 1.01795386e+02 1.04017070e-01
 1.75237982e+02 3.55449024e+01 9.71760627e+01            nan
 2.49938281e+01 1.12944817e+01 5.48817595e+01]
2023-01-29 08:24:25,864 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:24:26,655 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:24:26,856 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.24255063e+00 4.84610433e+02 9.76484089e+01 3.26587800e-01
 1.51869159e+02 3.71136435e+01 1.07344958e+02            nan
 2.57991247e+01 1.17201098e+01 5.39810151e+01]
2023-01-29 08:24:27,574 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.16468900e+00 4.74940864e+02 8.91168518e+01 3.82276138e-01
 2.64392827e+02 4.01881882e+00 1.03599399e+02            nan
 2.25414799e+01 1.16111581e+01 5.41776522e+01]
2023-01-29 08:38:11,138 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:38:12,946 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.17657267e+00 4.70534724e+02 1.09470412e+02 4.61655299e-01
 1.35842011e+02 3.30999798e+01 9.10400827e+01            nan
 2.36611045e+01 1.15956085e+01 5.63219616e+01]
2023-01-29 08:49:26,769 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:49:26,883 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:49:29,669 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.24136854e+00 4.72512597e+02 9.11509414e+01 1.98442180e-01
 1.75436177e+02 1.64582049e+01 1.08122266e+02            nan
 2.34248140e+01 1.15479203e+01 5.37049743e+01]
2023-01-29 08:49:29,748 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:49:30,025 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.20279219e+00 4.77974439e+02 8.71784076e+01 2.78937973e-01
 2.79891893e+02 3.57448046e+01 9.39412801e+01            nan
 2.25279653e+01 1.19047979e+01 5.37651123e+01]
2023-01-29 08:49:30,783 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.22702668e+00 4.73373338e+02 1.06238642e+02 1.12015658e-01
 1.75572199e+02 2.54075972e+01 1.09968518e+02            nan
 2.65607861e+01 1.22121089e+01 5.46244813e+01]
2023-01-29 08:49:32,107 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:49:32,873 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.15590935e+00 4.68177261e+02 9.58157451e+01 1.17082986e-01
 1.47083468e+02 1.28649177e+01 1.11710847e+02            nan
 2.84955322e+01 1.21940231e+01 5.81744971e+01]
2023-01-29 08:50:03,246 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:50:04,036 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.19148664e+00 4.73824611e+02 9.13022418e+01 3.29541770e-01
 1.67320835e+02 1.94227791e+01 1.13352680e+02            nan
 2.68965981e+01 1.16323408e+01 5.80682842e+01]
2023-01-29 08:51:15,247 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:51:16,342 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [  8.1869231  464.99403675 113.83237098   0.48357273 245.58499186
  22.5719443  100.3654477           nan  23.77311924  10.64515606
  53.8421092 ]
2023-01-29 08:51:17,977 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:51:18,700 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.18275971e+00 4.69544972e+02 1.01973864e+02 4.51208378e-01
 2.23985360e+02 3.04642136e+01 9.74791179e+01            nan
 2.60659980e+01 1.05784326e+01 5.36331311e+01]
2023-01-29 08:52:32,618 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:52:33,431 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.19749569e+00 4.76276293e+02 1.07817281e+02 1.54939509e-01
 2.28432938e+02 2.78207923e+01 1.22636665e+02            nan
 2.69258520e+01 1.14933613e+01 5.72472846e+01]
2023-01-29 08:52:41,503 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:52:42,443 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21536234e+00 4.71267384e+02 1.06576923e+02 1.96675774e-01
 1.99989773e+02 2.40728080e+01 1.03436531e+02            nan
 2.54365088e+01 1.12254698e+01 5.27671426e+01]
2023-01-29 08:52:42,534 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:52:43,259 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.754457473754883, best pos: [8.15264293e+00 4.76379079e+02 1.01097790e+02 3.34728007e-01
 2.03208158e+02 1.95362993e+01 1.17270163e+02            nan
 2.41209379e+01 1.14710824e+01 4.29465934e+01]
2023-01-29 08:52:46,002 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:52:46,710 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.23357227e+00 4.74711317e+02 9.39174110e+01 3.24671709e-01
 1.45689637e+02 2.58080583e+01 1.00172779e+02            nan
 2.75643431e+01 1.12555663e+01 5.90564373e+01]
2023-01-29 08:54:10,991 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:54:11,721 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.19786003e+00 4.75081867e+02 8.65890795e+01 3.78118092e-01
 1.36890866e+02 3.44433141e+01 1.12764960e+02            nan
 2.88629009e+01 1.08167085e+01 5.41314332e+01]
2023-01-29 08:54:53,688 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:54:54,500 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.18394788e+00 4.73451238e+02 8.90550552e+01 2.74848766e-01
 1.46496134e+02 3.79921707e+01 1.03187030e+02            nan
 2.32481702e+01 1.18150337e+01 5.28955171e+01]
2023-01-29 08:57:01,917 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:57:03,066 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.754457473754883, best pos: [8.18407642e+00 4.80219842e+02 1.09211164e+02 3.00103942e-01
 1.30914157e+02 6.09898415e+00 1.05441388e+02            nan
 2.73603370e+01 1.18608325e+01 4.73979503e+01]
2023-01-29 08:57:08,115 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:57:08,647 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:57:09,226 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21606837e+00 4.73606743e+02 9.93397877e+01 3.32493779e-01
 1.71009801e+02 2.72278805e+01 1.10144003e+02            nan
 2.75920769e+01 1.16365832e+01 5.32297622e+01]
2023-01-29 08:57:09,742 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.19932774e+00 4.78077606e+02 1.04725169e+02 4.64315731e-01
 2.12246773e+02 2.00108593e+01 9.86442883e+01            nan
 2.73924462e+01 1.24462507e+01 5.78107834e+01]
2023-01-29 08:59:03,908 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:59:04,724 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.22659268e+00 4.65256584e+02 1.02843943e+02 1.85210438e-01
 1.64058793e+02 3.20426551e+01 9.78451425e+01            nan
 2.61342011e+01 1.18374188e+01 5.26648777e+01]
2023-01-29 08:59:07,923 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:59:08,727 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:59:08,803 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21014147e+00 4.70195282e+02 9.88659237e+01 3.98872496e-01
 1.99414566e+02 2.96553635e+01 9.64818115e+01            nan
 2.87457543e+01 1.23619360e+01 5.75420623e+01]
2023-01-29 08:59:09,566 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21590577e+00 4.69741382e+02 1.05562448e+02 3.51927391e-01
 2.75046936e+02 3.48216398e+01 1.08376257e+02            nan
 2.73910018e+01 1.16379992e+01 5.47108339e+01]
2023-01-29 08:59:58,535 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 08:59:59,266 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.599085807800293, best pos: [8.17049335e+00 4.73462323e+02 1.29700705e+02 4.22146589e-01
 2.21444770e+02 1.67897169e+01 1.14898900e+02            nan
 2.88028454e+01 1.20765039e+01 5.37382899e+01]
2023-01-29 09:00:12,132 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 09:00:12,845 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.17220604e+00 4.69798832e+02 1.03350862e+02 1.63246585e-01
 2.72438160e+02 8.09727013e+00 1.14726581e+02            nan
 2.37018248e+01 1.12332410e+01 5.32498149e+01]
2023-01-29 09:00:16,694 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 09:00:17,105 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 09:00:17,907 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.754457473754883, best pos: [8.15427423e+00 4.65920167e+02 1.11464933e+02 2.59370114e-01
 1.50612297e+02 3.43682923e+01 8.51917679e+01            nan
 2.48332887e+01 1.20302526e+01 4.15518584e+01]
2023-01-29 09:00:18,363 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.19010405e+00 4.79487343e+02 1.03102258e+02 2.19958925e-01
 1.93456252e+02 2.80895569e+00 9.47698500e+01            nan
 2.66449646e+01 1.23420292e+01 5.56542283e+01]
2023-01-29 09:00:32,174 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 09:00:32,876 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.599085807800293, best pos: [8.15537303e+00 4.68458615e+02 1.30577200e+02 4.21423035e-01
 2.14557282e+02 1.95851322e+01 9.56761441e+01            nan
 2.64830583e+01 1.22896376e+01 5.25768119e+01]
2023-01-29 16:21:15,202 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 16:21:15,969 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21706811e+00 4.81686109e+02 9.99556861e+01 3.33296716e-01
 2.15234560e+02 1.47899593e+01 9.13145360e+01            nan
 2.41953402e+01 1.20330136e+01 5.35176380e+01]
2023-01-29 16:21:17,473 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 16:21:18,192 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21884074e+00 4.71355509e+02 1.12437733e+02 3.68039137e-01
 2.63513033e+02 1.08610737e+01 9.77186922e+01            nan
 2.68295162e+01 1.09787644e+01 5.97757784e+01]
2023-01-29 16:25:38,794 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 16:25:39,674 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.20041341e+00 4.73134639e+02 9.50128430e+01 2.38516337e-01
 2.07692133e+02 3.85491735e+01 1.00888638e+02            nan
 2.27490960e+01 1.16585978e+01 5.40047479e+01]
2023-01-29 16:25:40,014 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-01-29 16:25:40,778 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.22435550e+00 4.76649228e+02 9.67852436e+01 4.20580605e-01
 2.72104752e+02 3.33823687e+01 8.59901048e+01            nan
 2.46568973e+01 1.07242413e+01 5.38421035e+01]
2023-02-01 15:23:02,720 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-01 15:23:03,677 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21540742e+00 4.82510856e+02 1.11605934e+02 1.70853678e-01
 2.25539504e+02 3.09289972e+01 8.80481549e+01            nan
 2.59125480e+01 1.15933763e+01 5.30238674e+01]
2023-02-01 15:24:11,925 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-01 15:24:12,800 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.16974870e+00 4.78680545e+02 9.87439462e+01 3.48893666e-01
 2.40655623e+02 3.68199608e+01 1.04396728e+02            nan
 2.81649976e+01 1.13077780e+01 5.46766284e+01]
2023-02-01 15:25:24,615 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-01 15:25:25,450 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 28.65203094482422, best pos: [9.67905003e+00 4.99473021e+02 8.99684539e+01 2.72026472e-01
 1.94951060e+02 3.52655060e+01 1.07587232e+02 1.00000000e+00
 2.15294684e+01 1.35666536e+01 3.20351260e+01]
2023-02-01 15:25:42,732 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-01 15:25:43,560 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.15128944e+00 4.81718051e+02 1.02009806e+02 1.71442858e-01
 2.40725303e+02 2.30329556e+01 1.04389895e+02            nan
 2.44495478e+01 1.24046811e+01 5.35550920e+01]
2023-02-01 15:27:11,120 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-01 15:27:12,025 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.17670489e+00 4.78511291e+02 1.16022566e+02 1.51008987e-01
 1.53093078e+02 3.52019037e+01 1.14861666e+02            nan
 2.34129943e+01 1.23443882e+01 5.59161879e+01]
2023-02-01 15:27:14,903 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-01 15:27:15,786 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.16791919e+00 4.75422062e+02 8.97958511e+01 2.78643067e-01
 1.64076694e+02 4.03942919e+01 8.90302608e+01            nan
 2.40207061e+01 1.21181341e+01 5.26604056e+01]
2023-02-01 15:28:06,997 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-01 15:28:07,807 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.18503862e+00 4.78407060e+02 1.10288643e+02 2.97482640e-01
 2.95142433e+02 2.39949637e+01 9.98373978e+01            nan
 2.67550434e+01 1.14654541e+01 5.54339242e+01]
2023-02-01 15:28:08,108 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-01 15:28:08,831 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.23775127e+00 4.78353219e+02 8.26459061e+01 3.74993619e-01
 1.84999836e+02 3.52109687e+01 9.09118350e+01            nan
 2.53029426e+01 1.24388304e+01 5.98279080e+01]
2023-02-01 15:33:52,511 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-01 15:33:52,692 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-01 15:33:53,971 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21365216e+00 4.83781030e+02 1.00698937e+02 2.93777412e-01
 2.02496021e+02 3.39398472e+01 1.07098445e+02            nan
 2.45307347e+01 1.19099951e+01 5.36643643e+01]
2023-02-01 15:33:54,185 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.20941128e+00 4.74790277e+02 9.94483375e+01 4.12346972e-01
 1.98669745e+02 3.40744734e+01 1.01780491e+02            nan
 2.37528513e+01 1.22057999e+01 5.41374496e+01]
2023-02-01 15:34:02,287 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-01 15:34:03,023 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.22571247e+00 4.72685327e+02 8.37858319e+01 3.62858597e-01
 2.11363393e+02 1.78000766e+01 9.17128837e+01            nan
 2.50829375e+01 1.11831105e+01 5.48883137e+01]
2023-02-01 16:01:09,653 - django.request - WARNING - Not Found: /favicon.ico
2023-02-01 16:01:14,407 - django.request - WARNING - Not Found: /favicon.ico
2023-02-01 16:12:26,865 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-01 16:12:28,486 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.19074030e+00 4.78283165e+02 1.00459840e+02 4.20473747e-01
 1.55745184e+02 1.97940555e+01 9.97500410e+01            nan
 2.52017388e+01 1.23154470e+01 5.27489953e+01]
2023-02-01 16:12:40,761 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-01 16:12:42,343 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.22819607e+00 4.79346800e+02 1.00193122e+02 1.55460458e-01
 1.81203279e+02 4.09209211e+01 1.03664122e+02            nan
 2.27616186e+01 1.19414205e+01 5.28634742e+01]
2023-02-01 16:12:42,885 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-01 16:12:43,651 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.754457473754883, best pos: [8.20248946e+00 4.74630693e+02 1.05823776e+02 2.01048478e-01
 1.50649585e+02 1.90277793e+01 1.07727383e+02            nan
 2.56262610e+01 1.23942054e+01 4.90709504e+01]
2023-02-01 16:23:39,351 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-01 16:23:40,039 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-01 16:23:40,425 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.20322012e+00 4.72330204e+02 1.02722788e+02 3.14700636e-01
 1.81752900e+02 2.81191300e+01 9.67779904e+01            nan
 2.35421657e+01 1.20820300e+01 5.36447476e+01]
2023-02-01 16:23:40,979 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21620409e+00 4.72643745e+02 1.00506473e+02 1.21842680e-01
 2.10092143e+02 3.16828151e+01 1.17469454e+02            nan
 2.84718399e+01 1.18727333e+01 5.51908298e+01]
2023-02-01 16:23:42,879 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-01 16:23:43,671 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.754457473754883, best pos: [8.16502833e+00 4.73010186e+02 1.06046833e+02 3.89330349e-01
 1.27485010e+02 2.81646410e+01 8.47177187e+01            nan
 2.53204726e+01 1.03117796e+01 4.37730609e+01]
2023-02-01 16:28:19,852 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-01 16:28:20,620 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.18318664e+00 4.66661294e+02 8.86677135e+01 3.74445064e-01
 2.54712961e+02 2.58563725e+01 8.52997277e+01            nan
 2.47078324e+01 1.21709125e+01 5.26857237e+01]
2023-02-01 16:29:30,152 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-01 16:29:30,880 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.18502215e+00 4.72418184e+02 1.07607039e+02 2.02901369e-01
 2.52208125e+02 2.36799553e+01 9.95690024e+01            nan
 2.27864396e+01 1.10868943e+01 5.32011731e+01]
2023-02-14 09:13:28,194 - django.request - WARNING - Not Found: /favicon.ico
2023-02-14 09:44:47,730 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-14 09:44:48,584 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.754457473754883, best pos: [8.18029552e+00 4.69237617e+02 1.10565201e+02 3.63940112e-01
 1.49327797e+02 3.61794900e+01 1.04895975e+02            nan
 2.90509861e+01 1.15643685e+01 4.67536926e+01]
2023-02-14 09:47:00,437 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-14 09:47:01,292 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.17298346e+00 4.69456411e+02 1.01034120e+02 3.57875809e-01
 2.22859875e+02 3.78141574e+01 1.07822925e+02            nan
 2.56174061e+01 1.14839464e+01 5.28281401e+01]
2023-02-20 11:34:05,234 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-20 11:34:06,026 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.19408959e+00 4.81749383e+02 1.05878462e+02 4.02947136e-01
 2.25141014e+02 3.34892355e+01 1.04584608e+02            nan
 2.62309226e+01 1.22916941e+01 5.87707633e+01]
2023-02-20 11:34:35,868 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-20 11:34:36,660 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.23828170e+00 4.73650793e+02 9.36690877e+01 2.47147491e-01
 2.12068639e+02 2.88504041e+01 1.06251336e+02            nan
 2.65120864e+01 1.05477933e+01 5.27068013e+01]
2023-02-20 11:35:11,256 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-20 11:35:11,623 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-20 11:35:12,725 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.19763959e+00 4.83407369e+02 8.71784471e+01 3.53849373e-01
 2.16596881e+02 3.35513729e+01 9.33937025e+01            nan
 2.29858419e+01 1.15271763e+01 5.51479555e+01]
2023-02-20 11:35:13,107 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.15428934e+00 4.69970741e+02 1.02545726e+02 1.05081954e-01
 2.16892359e+02 1.55820344e+01 9.64023219e+01            nan
 2.56630369e+01 1.21242500e+01 5.44278286e+01]
2023-02-20 11:36:56,782 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-20 11:36:57,656 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.23845995e+00 4.80330001e+02 8.90767604e+01 4.55636210e-01
 2.39658679e+02 2.79362058e+01 1.10533091e+02            nan
 2.53483923e+01 1.22743149e+01 5.56176233e+01]
2023-02-20 11:37:15,931 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-02-20 11:37:16,917 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [  8.23002253 478.32782885 103.67959991   0.48513204 234.97182307
  26.5945406   96.4917682           nan  25.71884646  12.4747831
  52.74732421]
2023-02-21 09:27:41,052 - django.request - WARNING - Not Found: /favicon.ico
2023-02-28 09:19:39,090 - django.request - WARNING - Not Found: /favicon.ico
2023-02-28 09:20:06,505 - django.request - WARNING - Not Found: /flocdata494
2023-02-28 09:20:11,722 - django.request - WARNING - Not Found: /flocdata/494/
2023-02-28 09:28:49,117 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/config.py changed, reloading.
2023-02-28 09:30:29,527 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/config.py changed, reloading.
2023-02-28 11:11:00,633 - django.utils.autoreload - INFO - /opt/django/backend/db_connection/models.py changed, reloading.
2023-02-28 11:11:45,669 - django.utils.autoreload - INFO - /opt/django/backend/db_connection/serializers.py changed, reloading.
2023-02-28 11:13:05,709 - django.utils.autoreload - INFO - /opt/django/backend/db_connection/serializers.py changed, reloading.
2023-02-28 11:13:52,009 - django.utils.autoreload - INFO - /opt/django/backend/db_connection/views.py changed, reloading.
2023-02-28 11:15:42,535 - django.utils.autoreload - INFO - /opt/django/backend/db_connection/models.py changed, reloading.
2023-02-28 11:16:52,183 - django.utils.autoreload - INFO - /opt/django/backend/backend/urls.py changed, reloading.
2023-02-28 11:17:00,094 - django.utils.autoreload - INFO - /opt/django/backend/backend/urls.py changed, reloading.
2023-02-28 11:17:14,453 - django.request - WARNING - Not Found: /bsfdata/
2023-02-28 11:17:24,274 - django.utils.autoreload - INFO - /opt/django/backend/backend/urls.py changed, reloading.
2023-02-28 11:17:30,928 - django.request - ERROR - Internal Server Error: /bsfdata/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/db/backends/utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
psycopg2.errors.UndefinedTable: relation "db_connection_bsf_data" does not exist
LINE 1: SELECT COUNT(*) AS "__count" FROM "db_connection_bsf_data"
                                          ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/mixins.py", line 40, in list
    page = self.paginate_queryset(queryset)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/generics.py", line 171, in paginate_queryset
    return self.paginator.paginate_queryset(queryset, self.request, view=self)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/pagination.py", line 204, in paginate_queryset
    self.page = paginator.page(page_number)
  File "/usr/local/lib/python3.10/dist-packages/django/core/paginator.py", line 75, in page
    number = self.validate_number(number)
  File "/usr/local/lib/python3.10/dist-packages/django/core/paginator.py", line 53, in validate_number
    if number > self.num_pages:
  File "/usr/local/lib/python3.10/dist-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/local/lib/python3.10/dist-packages/django/core/paginator.py", line 102, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/local/lib/python3.10/dist-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/local/lib/python3.10/dist-packages/django/core/paginator.py", line 96, in count
    return c()
  File "/usr/local/lib/python3.10/dist-packages/django/db/models/query.py", line 621, in count
    return self.query.get_count(using=self.db)
  File "/usr/local/lib/python3.10/dist-packages/django/db/models/sql/query.py", line 559, in get_count
    return obj.get_aggregation(using, ["__count"])["__count"]
  File "/usr/local/lib/python3.10/dist-packages/django/db/models/sql/query.py", line 544, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/local/lib/python3.10/dist-packages/django/db/models/sql/compiler.py", line 1398, in execute_sql
    cursor.execute(sql, params)
  File "/usr/local/lib/python3.10/dist-packages/django/db/backends/utils.py", line 103, in execute
    return super().execute(sql, params)
  File "/usr/local/lib/python3.10/dist-packages/django/db/backends/utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "/usr/local/lib/python3.10/dist-packages/django/db/backends/utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/usr/local/lib/python3.10/dist-packages/django/db/backends/utils.py", line 84, in _execute
    with self.db.wrap_database_errors:
  File "/usr/local/lib/python3.10/dist-packages/django/db/utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/usr/local/lib/python3.10/dist-packages/django/db/backends/utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
django.db.utils.ProgrammingError: relation "db_connection_bsf_data" does not exist
LINE 1: SELECT COUNT(*) AS "__count" FROM "db_connection_bsf_data"
                                          ^

2023-02-28 11:17:44,248 - django.utils.autoreload - INFO - /opt/django/backend/db_connection/serializers.py changed, reloading.
2023-02-28 11:17:56,938 - django.request - ERROR - Internal Server Error: /bsfdata/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/db/backends/utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
psycopg2.errors.UndefinedTable: relation "db_connection_bsf_data" does not exist
LINE 1: SELECT COUNT(*) AS "__count" FROM "db_connection_bsf_data"
                                          ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/mixins.py", line 40, in list
    page = self.paginate_queryset(queryset)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/generics.py", line 171, in paginate_queryset
    return self.paginator.paginate_queryset(queryset, self.request, view=self)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/pagination.py", line 204, in paginate_queryset
    self.page = paginator.page(page_number)
  File "/usr/local/lib/python3.10/dist-packages/django/core/paginator.py", line 75, in page
    number = self.validate_number(number)
  File "/usr/local/lib/python3.10/dist-packages/django/core/paginator.py", line 53, in validate_number
    if number > self.num_pages:
  File "/usr/local/lib/python3.10/dist-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/local/lib/python3.10/dist-packages/django/core/paginator.py", line 102, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/local/lib/python3.10/dist-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/local/lib/python3.10/dist-packages/django/core/paginator.py", line 96, in count
    return c()
  File "/usr/local/lib/python3.10/dist-packages/django/db/models/query.py", line 621, in count
    return self.query.get_count(using=self.db)
  File "/usr/local/lib/python3.10/dist-packages/django/db/models/sql/query.py", line 559, in get_count
    return obj.get_aggregation(using, ["__count"])["__count"]
  File "/usr/local/lib/python3.10/dist-packages/django/db/models/sql/query.py", line 544, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/local/lib/python3.10/dist-packages/django/db/models/sql/compiler.py", line 1398, in execute_sql
    cursor.execute(sql, params)
  File "/usr/local/lib/python3.10/dist-packages/django/db/backends/utils.py", line 103, in execute
    return super().execute(sql, params)
  File "/usr/local/lib/python3.10/dist-packages/django/db/backends/utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "/usr/local/lib/python3.10/dist-packages/django/db/backends/utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/usr/local/lib/python3.10/dist-packages/django/db/backends/utils.py", line 84, in _execute
    with self.db.wrap_database_errors:
  File "/usr/local/lib/python3.10/dist-packages/django/db/utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/usr/local/lib/python3.10/dist-packages/django/db/backends/utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
django.db.utils.ProgrammingError: relation "db_connection_bsf_data" does not exist
LINE 1: SELECT COUNT(*) AS "__count" FROM "db_connection_bsf_data"
                                          ^

2023-02-28 11:18:47,191 - django.request - ERROR - Internal Server Error: /bsfdata/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/db/backends/utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
psycopg2.errors.UndefinedTable: relation "db_connection_bsf_data" does not exist
LINE 1: SELECT COUNT(*) AS "__count" FROM "db_connection_bsf_data"
                                          ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/mixins.py", line 40, in list
    page = self.paginate_queryset(queryset)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/generics.py", line 171, in paginate_queryset
    return self.paginator.paginate_queryset(queryset, self.request, view=self)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/pagination.py", line 204, in paginate_queryset
    self.page = paginator.page(page_number)
  File "/usr/local/lib/python3.10/dist-packages/django/core/paginator.py", line 75, in page
    number = self.validate_number(number)
  File "/usr/local/lib/python3.10/dist-packages/django/core/paginator.py", line 53, in validate_number
    if number > self.num_pages:
  File "/usr/local/lib/python3.10/dist-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/local/lib/python3.10/dist-packages/django/core/paginator.py", line 102, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/local/lib/python3.10/dist-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/local/lib/python3.10/dist-packages/django/core/paginator.py", line 96, in count
    return c()
  File "/usr/local/lib/python3.10/dist-packages/django/db/models/query.py", line 621, in count
    return self.query.get_count(using=self.db)
  File "/usr/local/lib/python3.10/dist-packages/django/db/models/sql/query.py", line 559, in get_count
    return obj.get_aggregation(using, ["__count"])["__count"]
  File "/usr/local/lib/python3.10/dist-packages/django/db/models/sql/query.py", line 544, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/local/lib/python3.10/dist-packages/django/db/models/sql/compiler.py", line 1398, in execute_sql
    cursor.execute(sql, params)
  File "/usr/local/lib/python3.10/dist-packages/django/db/backends/utils.py", line 103, in execute
    return super().execute(sql, params)
  File "/usr/local/lib/python3.10/dist-packages/django/db/backends/utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "/usr/local/lib/python3.10/dist-packages/django/db/backends/utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/usr/local/lib/python3.10/dist-packages/django/db/backends/utils.py", line 84, in _execute
    with self.db.wrap_database_errors:
  File "/usr/local/lib/python3.10/dist-packages/django/db/utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/usr/local/lib/python3.10/dist-packages/django/db/backends/utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
django.db.utils.ProgrammingError: relation "db_connection_bsf_data" does not exist
LINE 1: SELECT COUNT(*) AS "__count" FROM "db_connection_bsf_data"
                                          ^

2023-02-28 11:19:41,135 - django.request - ERROR - Internal Server Error: /bsfdata/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/db/backends/utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
psycopg2.errors.UndefinedTable: relation "db_connection_bsf_data" does not exist
LINE 1: SELECT COUNT(*) AS "__count" FROM "db_connection_bsf_data"
                                          ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/mixins.py", line 40, in list
    page = self.paginate_queryset(queryset)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/generics.py", line 171, in paginate_queryset
    return self.paginator.paginate_queryset(queryset, self.request, view=self)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/pagination.py", line 204, in paginate_queryset
    self.page = paginator.page(page_number)
  File "/usr/local/lib/python3.10/dist-packages/django/core/paginator.py", line 75, in page
    number = self.validate_number(number)
  File "/usr/local/lib/python3.10/dist-packages/django/core/paginator.py", line 53, in validate_number
    if number > self.num_pages:
  File "/usr/local/lib/python3.10/dist-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/local/lib/python3.10/dist-packages/django/core/paginator.py", line 102, in num_pages
    if self.count == 0 and not self.allow_empty_first_page:
  File "/usr/local/lib/python3.10/dist-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/local/lib/python3.10/dist-packages/django/core/paginator.py", line 96, in count
    return c()
  File "/usr/local/lib/python3.10/dist-packages/django/db/models/query.py", line 621, in count
    return self.query.get_count(using=self.db)
  File "/usr/local/lib/python3.10/dist-packages/django/db/models/sql/query.py", line 559, in get_count
    return obj.get_aggregation(using, ["__count"])["__count"]
  File "/usr/local/lib/python3.10/dist-packages/django/db/models/sql/query.py", line 544, in get_aggregation
    result = compiler.execute_sql(SINGLE)
  File "/usr/local/lib/python3.10/dist-packages/django/db/models/sql/compiler.py", line 1398, in execute_sql
    cursor.execute(sql, params)
  File "/usr/local/lib/python3.10/dist-packages/django/db/backends/utils.py", line 103, in execute
    return super().execute(sql, params)
  File "/usr/local/lib/python3.10/dist-packages/django/db/backends/utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "/usr/local/lib/python3.10/dist-packages/django/db/backends/utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/usr/local/lib/python3.10/dist-packages/django/db/backends/utils.py", line 84, in _execute
    with self.db.wrap_database_errors:
  File "/usr/local/lib/python3.10/dist-packages/django/db/utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/usr/local/lib/python3.10/dist-packages/django/db/backends/utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
django.db.utils.ProgrammingError: relation "db_connection_bsf_data" does not exist
LINE 1: SELECT COUNT(*) AS "__count" FROM "db_connection_bsf_data"
                                          ^

2023-02-28 11:20:02,939 - django.utils.autoreload - INFO - /opt/django/backend/db_connection/serializers.py changed, reloading.
2023-02-28 11:20:18,761 - django.utils.autoreload - INFO - /opt/django/backend/db_connection/models.py changed, reloading.
2023-03-01 07:50:55,314 - django.request - WARNING - Not Found: /favicon.ico
2023-03-01 09:40:16,194 - django.utils.autoreload - INFO - /opt/django/backend/backend/urls.py changed, reloading.
2023-03-01 09:41:41,459 - django.utils.autoreload - INFO - /opt/django/backend/backend/urls.py changed, reloading.
2023-03-01 09:42:19,690 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/modules/pso.py changed, reloading.
2023-03-01 09:43:10,247 - django.utils.autoreload - INFO - /opt/django/backend/backend/settings.py changed, reloading.
2023-03-01 09:43:54,873 - django.request - WARNING - Method Not Allowed: /bsf/
2023-03-01 09:44:34,356 - django.request - ERROR - Internal Server Error: /bsf/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/bsf_concept/views.py", line 21, in post
    result=outputprediction(
  File "/opt/django/backend/bsf_concept/scripts/main.py", line 68, in outputprediction
    pipe, _ = trainorloadpipe(loadpipe, printass)
  File "/opt/django/backend/bsf_concept/scripts/main.py", line 33, in trainorloadpipe
    X_train, X_test, y_train, y_test = preparedataset().traintestset()
  File "/opt/django/backend/bsf_concept/scripts/main.py", line 12, in __init__
    self.dataset = connectdb().flocdataEC()
AttributeError: 'connectdb' object has no attribute 'flocdataEC'
2023-03-01 09:45:50,331 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/main.py changed, reloading.
2023-03-01 09:46:01,728 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/main.py changed, reloading.
2023-03-01 09:46:10,246 - django.request - WARNING - Method Not Allowed: /bsf/
2023-03-01 09:46:12,901 - django.request - ERROR - Internal Server Error: /bsf/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/bsf_concept/views.py", line 21, in post
    result=outputprediction(
  File "/opt/django/backend/bsf_concept/scripts/main.py", line 68, in outputprediction
    pipe, _ = trainorloadpipe(loadpipe, printass)
  File "/opt/django/backend/bsf_concept/scripts/main.py", line 33, in trainorloadpipe
    X_train, X_test, y_train, y_test = preparedataset().traintestset()
  File "/opt/django/backend/bsf_concept/scripts/main.py", line 15, in __init__
    self.dataset.loc[hc["mean_grain_diameter"].isnull(),'mean_grain_diameter'] = (self.dataset["min_grain_diameter"] + self.dataset["max_grain_diameter"])/2
NameError: name 'hc' is not defined
2023-03-01 09:47:01,130 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/main.py changed, reloading.
2023-03-01 09:47:09,775 - django.request - WARNING - Method Not Allowed: /bsf/
2023-03-01 09:47:13,018 - django.request - ERROR - Internal Server Error: /bsf/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/bsf_concept/views.py", line 21, in post
    result=outputprediction(
  File "/opt/django/backend/bsf_concept/scripts/main.py", line 70, in outputprediction
    prediction = round(float(pipe.predict([inputvalues])),1)
  File "/usr/local/lib/python3.10/dist-packages/sklearn/pipeline.py", line 457, in predict
    Xt = transform.transform(Xt)
  File "/usr/local/lib/python3.10/dist-packages/sklearn/impute/_base.py", line 515, in transform
    X = self._validate_input(X, in_fit=False)
  File "/usr/local/lib/python3.10/dist-packages/sklearn/impute/_base.py", line 319, in _validate_input
    raise ve
  File "/usr/local/lib/python3.10/dist-packages/sklearn/impute/_base.py", line 302, in _validate_input
    X = self._validate_data(
  File "/usr/local/lib/python3.10/dist-packages/sklearn/base.py", line 600, in _validate_data
    self._check_n_features(X, reset=reset)
  File "/usr/local/lib/python3.10/dist-packages/sklearn/base.py", line 400, in _check_n_features
    raise ValueError(
ValueError: X has 7 features, but SimpleImputer is expecting 8 features as input.
2023-03-01 09:53:21,782 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/main.py changed, reloading.
2023-03-01 09:53:32,412 - django.request - WARNING - Method Not Allowed: /bsf/
2023-03-01 09:58:40,111 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/models.py changed, reloading.
2023-03-01 09:59:24,296 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/serializers.py changed, reloading.
2023-03-01 10:01:12,865 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/serializers.py changed, reloading.
2023-03-01 10:02:03,622 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/views.py changed, reloading.
2023-03-01 10:02:29,641 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/views.py changed, reloading.
2023-03-01 10:02:45,566 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/views.py changed, reloading.
2023-03-01 10:03:39,887 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/views.py changed, reloading.
2023-03-01 10:07:04,591 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/views.py changed, reloading.
2023-03-01 10:09:48,628 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/views.py changed, reloading.
2023-03-01 10:10:31,614 - django.utils.autoreload - INFO - /opt/django/backend/backend/urls.py changed, reloading.
2023-03-01 10:13:22,798 - django.request - ERROR - Internal Server Error: /opt_bsf/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 723, in render
    context = self.get_context(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 695, in get_context
    'post_form': self.get_rendered_html_form(data, view, 'POST', request),
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 510, in get_rendered_html_form
    return self.render_form_for_serializer(serializer)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 518, in render_form_for_serializer
    serializer.data,
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 555, in data
    ret = super().data
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 257, in data
    self._data = self.get_initial()
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 405, in get_initial
    for field in self.fields.values()
  File "/usr/local/lib/python3.10/dist-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 356, in fields
    for key, value in self.get_fields().items():
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 1076, in get_fields
    field_class, field_kwargs = self.build_field(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 1222, in build_field
    return self.build_unknown_field(field_name, model_class)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 1340, in build_unknown_field
    raise ImproperlyConfigured(
django.core.exceptions.ImproperlyConfigured: Field name `load_pipediameter_min` is not valid for model `optimizeBsfData`.
2023-03-01 10:13:43,420 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/serializers.py changed, reloading.
2023-03-01 10:14:08,409 - django.request - WARNING - Method Not Allowed: /opt_bsf/
2023-03-01 10:15:00,003 - django.request - ERROR - Internal Server Error: /opt_bsf/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/bsf_concept/views.py", line 67, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/bsf_concept/scripts/main.py", line 81, in inputoptimization
    output, best_param = minimize(pipe=pipe, bounds=bounds)
TypeError: minimize() missing 1 required positional argument: 'pred_type'
2023-03-01 10:16:01,562 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/modules/pso.py changed, reloading.
2023-03-01 10:16:11,162 - django.request - WARNING - Method Not Allowed: /opt_bsf/
2023-03-01 10:16:13,807 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-01 10:16:14,555 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.6286491751670837, best pos: [48.03741519  2.33602564         nan  1.04079058 18.47134914 17.45008864
 14.87877946]
2023-03-01 10:16:14,709 - django.request - ERROR - Internal Server Error: /opt_bsf/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 723, in render
    context = self.get_context(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 679, in get_context
    'content': self.get_content(renderer, data, accepted_media_type, renderer_context),
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 412, in get_content
    content = renderer.render(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 99, in render
    ret = json.dumps(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/utils/json.py", line 25, in dumps
    return json.dumps(*args, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.10/json/encoder.py", line 201, in encode
    chunks = list(chunks)
  File "/usr/lib/python3.10/json/encoder.py", line 431, in _iterencode
    yield from _iterencode_dict(o, _current_indent_level)
  File "/usr/lib/python3.10/json/encoder.py", line 397, in _iterencode_dict
    yield _floatstr(value)
  File "/usr/lib/python3.10/json/encoder.py", line 239, in floatstr
    raise ValueError(
ValueError: Out of range float values are not JSON compliant: nan
2023-03-01 10:17:30,140 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/modules/pso.py changed, reloading.
2023-03-01 10:17:38,934 - django.request - WARNING - Method Not Allowed: /opt_bsf/
2023-03-01 10:17:41,711 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-01 10:17:42,594 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.6290203332901001, best pos: [52.29911804  7.96327558         nan  0.72602641 18.63550276 15.55047334
 14.79014379]
2023-03-01 17:28:54,987 - django.request - WARNING - Not Found: /favicon.ico
2023-03-01 18:00:19,627 - django.request - WARNING - Method Not Allowed: /tur/
2023-03-01 18:00:37,448 - django.request - WARNING - Method Not Allowed: /ec/
2023-03-01 18:06:52,363 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-01 18:06:53,142 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.20221952e+00 4.67826873e+02 1.06933803e+02 1.83788191e-01
 2.09265691e+02 2.43746608e+01 9.75335581e+01            nan
 2.46426165e+01 1.05546906e+01 5.61418859e+01]
2023-03-01 18:07:18,392 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-01 18:07:19,128 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.7689037322998047, best pos: [8.21873892e+00 4.72388378e+02 5.96097075e+01 2.04569807e-01
 1.46574517e+02 3.56011980e+01 1.04705031e+02            nan
 2.52836478e+01 1.24306099e+01 5.27875804e+01]
2023-03-02 17:27:46,433 - django.request - WARNING - Method Not Allowed: /bsf/
2023-03-02 18:00:09,742 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/models.py changed, reloading.
2023-03-02 18:01:09,355 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 18:01:10,104 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.754457473754883, best pos: [8.20901690e+00 4.65114732e+02 1.02409339e+02 3.62473766e-01
 1.68447663e+02 2.99837776e+01 8.72709672e+01            nan
 2.81231325e+01 1.22441962e+01 4.18576415e+01]
2023-03-02 18:02:32,117 - django.utils.autoreload - INFO - /opt/django/backend/backend/urls.py changed, reloading.
2023-03-02 18:03:07,890 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 18:03:09,022 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.24877220e+00 4.73565714e+02 1.17980086e+02 3.93731455e-01
 2.43624267e+02 1.83597157e+01 9.91411919e+01            nan
 2.59184375e+01 1.20124693e+01 5.29882645e+01]
2023-03-02 18:03:10,335 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 18:03:11,076 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.20384876e+00 4.80077415e+02 9.30301566e+01 2.83586036e-01
 1.94807173e+02 2.57847216e+01 1.07864066e+02            nan
 2.40834735e+01 1.23029672e+01 5.25687858e+01]
2023-03-02 18:05:27,850 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/views.py changed, reloading.
2023-03-02 18:05:57,480 - django.utils.autoreload - INFO - /opt/django/backend/backend/urls.py changed, reloading.
2023-03-02 18:06:10,528 - django.request - ERROR - Internal Server Error: /bsf_bounds/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/bsf_concept/views.py", line 12, in get
    data = get_bounds()
  File "/opt/django/backend/bsf_concept/models.py", line 5, in get_bounds
    df = connectdb().bsfdatatodf()
AttributeError: 'connectdb' object has no attribute 'bsfdatatodf'
2023-03-02 18:06:52,568 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/models.py changed, reloading.
2023-03-02 18:07:01,253 - django.request - ERROR - Internal Server Error: /bsf_bounds/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/bsf_concept/views.py", line 12, in get
    data = get_bounds()
  File "/opt/django/backend/bsf_concept/models.py", line 12, in get_bounds
    bounds[index] = [value, ub[index]+0.1]
TypeError: can only concatenate str (not "float") to str
2023-03-02 18:07:35,983 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/models.py changed, reloading.
2023-03-02 18:09:24,627 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/models.py changed, reloading.
2023-03-02 18:09:54,254 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/models.py changed, reloading.
2023-03-02 18:13:32,069 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/models.py changed, reloading.
2023-03-02 18:14:21,039 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/models.py changed, reloading.
2023-03-02 19:35:39,625 - django.request - ERROR - Internal Server Error: /opt_bsf/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/bsf_concept/views.py", line 54, in post
    int(request.data.get("diameter_min")),
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
2023-03-02 19:35:39,935 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:35:40,867 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.20228427e+00 4.77703618e+02 1.04526010e+02 1.73535758e-01
 2.51107877e+02 2.16885960e+01 9.11912904e+01            nan
 2.78477484e+01 1.20455626e+01 5.32439089e+01]
2023-03-02 19:37:55,251 - django.request - ERROR - Internal Server Error: /opt_bsf/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/bsf_concept/views.py", line 54, in post
    int(request.data.get("diameter_min")),
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
2023-03-02 19:39:13,877 - django.request - ERROR - Internal Server Error: /opt_bsf/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/bsf_concept/views.py", line 54, in post
    int(request.data.get("diameter_min")),
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
2023-03-02 19:40:49,515 - django.request - ERROR - Internal Server Error: /opt_bsf/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/bsf_concept/views.py", line 54, in post
    int(request.data.get("diameter_min")),
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
2023-03-02 19:42:22,593 - django.request - ERROR - Internal Server Error: /opt_bsf/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/bsf_concept/views.py", line 54, in post
    int(request.data.get("diameter_min")),
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
2023-03-02 19:43:20,111 - django.request - ERROR - Internal Server Error: /opt_bsf/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/bsf_concept/views.py", line 54, in post
    int(request.data.get("diameter_min")),
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
2023-03-02 19:49:46,614 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:49:47,647 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22207584977149963, best pos: [ 22.31643617  23.57450859          nan  94.0294014           nan
  29.02589381 105.40594022]
2023-03-02 19:49:47,691 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:49:48,404 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22207584977149963, best pos: [ 28.71061867  24.22484758          nan  89.92851956          nan
  29.8516154  110.21670495]
2023-03-02 19:50:44,422 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:50:45,345 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22207584977149963, best pos: [ 21.86604681  24.02168314          nan  89.29137889          nan
  29.74468421 108.61132178]
2023-03-02 19:52:35,240 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:52:36,543 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22207584977149963, best pos: [ 28.02890423  25.56470356          nan 108.38913867          nan
  29.47546887 103.83531499]
2023-03-02 19:52:37,114 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:52:37,868 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22207584977149963, best pos: [ 21.89315853  28.39797053          nan 112.34047444          nan
  29.17835554 115.5089994 ]
2023-03-02 19:54:25,450 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:54:26,540 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22207584977149963, best pos: [ 25.27611357  21.76989657          nan  85.61537713          nan
  29.42079856 109.69574208]
2023-03-02 19:54:41,792 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:54:41,897 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:54:44,130 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22207584977149963, best pos: [ 28.04530159  22.02790713          nan 114.90200041          nan
  29.79516486 106.62877111]
2023-03-02 19:54:44,451 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22207584977149963, best pos: [ 28.40195106  17.4522775           nan 114.57250708          nan
  29.97762722 116.06163505]
2023-03-02 19:54:44,544 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:54:45,486 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22207584977149963, best pos: [ 27.81082161  16.30760143          nan 107.11241349          nan
  29.50365558 112.75694798]
2023-03-02 19:54:59,905 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:55:00,890 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22207584977149963, best pos: [ 28.03044713  18.36357624          nan 123.11130606          nan
  29.39193499 105.3289397 ]
2023-03-02 19:55:22,401 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:55:23,358 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:55:24,866 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22207584977149963, best pos: [ 24.23292025  18.03891038          nan  84.53660799          nan
  29.43999817 108.9320356 ]
2023-03-02 19:55:25,453 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.21767936646938324, best pos: [ 26.23169249  17.70286902          nan  40.09944682          nan
  29.16588891 111.92159031]
2023-03-02 19:55:25,485 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:55:26,798 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.21767936646938324, best pos: [ 29.10637146  23.60243277          nan  39.34511256          nan
  29.69934144 104.29656007]
2023-03-02 19:55:35,450 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:55:36,415 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.017041442915797234, best pos: [ 23.17301447  20.95154744          nan   1.65054132  20.70884662
  29.59626271 108.54174859]
2023-03-02 19:55:53,498 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:55:54,241 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:55:56,247 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.01670619659125805, best pos: [ 26.61216508  20.01629552          nan   1.8478648   11.8070519
  29.61640424 110.51724308]
2023-03-02 19:55:56,818 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:55:56,901 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 24.04294831  17.94095539          nan   1.23503299  12.04984136
  12.57448592 114.45521257]
2023-03-02 19:55:57,830 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 22.04467901  16.72584764          nan   1.09937298  11.47052655
  17.57430044 109.9113782 ]
2023-03-02 19:56:02,256 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:56:03,199 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 23.20322772  18.56088746          nan   1.13166256  16.92693964
  14.11431972 106.13591273]
2023-03-02 19:56:03,316 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:56:04,038 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.029948361217975616, best pos: [ 25.5416842   21.65469639          nan   1.78161548  23.07380453
  12.00086544 106.06672147]
2023-03-02 19:56:58,826 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:56:59,688 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 23.56544306  17.59992889          nan   1.13877908  20.30479718
  16.0263729  109.93955126]
2023-03-02 19:57:02,208 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:57:03,059 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22039012610912323, best pos: [21.86477687 24.78316752         nan 47.62439513 10.11219049 11.02218806
 82.29416014]
2023-03-02 19:57:03,234 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:57:03,996 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22357939183712006, best pos: [ 21.51526286  20.25574749          nan  39.64051805  16.31880109
  16.56145377 116.48745735]
2023-03-02 19:57:23,112 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:57:24,015 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 21.56018812  18.43521338          nan   1.1480021   17.26899676
  17.43280267 106.50158505]
2023-03-02 19:57:26,160 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:57:27,303 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 26.33454585  20.90494668          nan   1.10341618  15.7957783
  17.28052833 114.41365002]
2023-03-02 19:57:27,494 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:57:28,362 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.21599364280700684, best pos: [25.59996475 16.71732317         nan 39.51835907 10.15474889 15.20995953
 86.50766203]
2023-03-02 19:58:26,269 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:58:27,618 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 25.84312805  20.83479698          nan   1.13148347  17.36910054
  14.79929681 115.70638849]
2023-03-02 19:58:28,435 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:58:29,325 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22039012610912323, best pos: [23.1292288  17.7702567          nan 41.1444522  10.22853545 14.48603646
 80.51430317]
2023-03-02 19:58:29,435 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:58:30,204 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 26.73866693  19.77193431          nan   1.07311843  12.54656635
  14.0756255  118.45399082]
2023-03-02 19:58:57,430 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:58:59,055 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 23.9655962   18.97957531          nan   1.30087251  14.91656857
  15.39072742 109.95109844]
2023-03-02 19:59:16,754 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:59:16,828 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:59:19,044 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 26.97196886  20.60639009          nan   1.30075075  16.42168555
  17.08037015 106.19694986]
2023-03-02 19:59:19,214 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 22.7526162   21.5452524           nan   1.49377329  19.1507618
  14.30428943 104.62318183]
2023-03-02 19:59:19,998 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 19:59:20,689 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22163431346416473, best pos: [ 23.9507022   17.25813221          nan  59.78794804  10.11133643
  14.5087534  104.86677325]
2023-03-02 20:00:13,814 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:00:14,764 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22163431346416473, best pos: [ 23.64409686  19.03576032          nan  48.14652657  10.2674694
  13.70371319 110.34155813]
2023-03-02 20:00:17,405 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:00:18,240 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 26.38317499  19.16231834          nan   1.46007767  15.24248322
  18.25704642 105.83833034]
2023-03-02 20:00:18,413 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:00:19,117 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 23.6028934   17.32195034          nan   1.05462481  11.46358887
  14.5263415  110.77730482]
2023-03-02 20:00:48,001 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:00:49,020 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.21723783016204834, best pos: [ 24.65355168  17.38077733          nan  40.07318858  10.23984687
  13.50445104 108.66361899]
2023-03-02 20:02:12,865 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:02:14,246 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 25.09367036  21.68067893          nan   1.08397868  22.77307112
  16.72234976 110.69193652]
2023-03-02 20:02:14,620 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:02:15,658 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 26.10124779  18.86194305          nan   1.42452209  12.50716016
  14.31330736 107.70246334]
2023-03-02 20:02:15,701 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:02:16,444 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 22.90939518  18.62375536          nan   1.49514881  14.31641704
  14.38894213 115.04639846]
2023-03-02 20:02:36,080 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:02:37,161 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22039012610912323, best pos: [25.36775564 22.64091564         nan 65.37115625 10.04461104 17.0150605
 80.32238903]
2023-03-02 20:03:01,859 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:03:03,160 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 23.31344493  17.73838003          nan   1.49466365  19.3274929
  15.00842772 108.95710713]
2023-03-02 20:03:03,716 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:03:04,683 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22039012610912323, best pos: [23.79619747 19.0488856          nan 67.74059108 10.09073271 15.42135848
 87.56070851]
2023-03-02 20:03:04,821 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:03:05,576 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 24.7582374   20.18481004          nan   1.11697999  15.27315007
  16.4276037  105.67073348]
2023-03-02 20:03:45,752 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:03:46,555 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22039012610912323, best pos: [ 22.79416199  17.55716194          nan 139.97831913  10.01669174
  13.50755466  81.31235797]
2023-03-02 20:03:48,325 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:03:49,237 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22039012610912323, best pos: [22.98264235 19.54152997         nan 55.28206585 10.15424598 14.69449933
 86.84707548]
2023-03-02 20:03:49,380 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:03:50,106 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 26.66469482  21.27182898          nan   1.25943332  10.93835321
  14.57899225 110.65369611]
2023-03-02 20:04:34,644 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:04:35,758 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.0424320250749588, best pos: [28.6909566  19.24259934         nan  1.83285452 10.08244237 10.99134658
 85.14282937]
2023-03-02 20:04:36,992 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:04:37,849 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 27.0548314   16.45156944          nan   0.18178882  16.69532143
  10.42766806 116.86975834]
2023-03-02 20:04:38,438 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:04:39,292 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 25.67585602  21.02573065          nan   0.68308507  19.49942997
  16.20577264 106.91045304]
2023-03-02 20:05:15,611 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:05:16,703 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 25.95059323  17.56840969          nan   0.62777547  10.28668736
  15.10083623 108.43866926]
2023-03-02 20:05:18,497 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:05:19,384 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 25.19425021  19.31333482          nan   1.02092841  13.71125329
  15.18263353 105.09773978]
2023-03-02 20:05:19,404 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:05:20,214 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 23.56968841  18.43170928          nan   0.39271622  16.4589461
  15.07705178 113.3329378 ]
2023-03-02 20:05:37,616 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:05:38,379 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22039012610912323, best pos: [25.71169024 23.27926862         nan 45.91722911 10.21779326 15.8632495
 81.30869315]
2023-03-02 20:05:40,098 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:05:41,291 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.018995260819792747, best pos: [ 29.80577328  24.9489459           nan   0.68401159  10.18689864
  18.29327685 110.97613492]
2023-03-02 20:05:41,531 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:05:42,269 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 21.45166432  21.7569669           nan   0.42642722  11.42547928
  13.64769407 104.47862479]
2023-03-02 20:05:53,742 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:05:54,779 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.018995260819792747, best pos: [ 28.31980204  19.78999637          nan   1.34557497  10.09927654
  11.67463244 115.6265665 ]
2023-03-02 20:06:00,469 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:06:01,387 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 28.69992798  22.16352128          nan   1.40296679  18.45639376
  14.00138389 109.53051132]
2023-03-02 20:06:01,560 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:06:02,270 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 26.4801681   20.94565879          nan   1.36261387  13.06461576
  17.37479282 115.5487939 ]
2023-03-02 20:06:12,066 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:06:13,883 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 24.30862316  18.9298183           nan   1.23071553  16.64360338
  14.1123332  106.99880622]
2023-03-02 20:06:13,884 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:06:14,571 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:06:15,242 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 28.82477415  22.38554465          nan   1.45568542  18.37993727
  10.47146149 106.76724386]
2023-03-02 20:06:15,765 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 26.01254686  20.35369964          nan   1.17800066  16.14639895
  14.90327618 107.31529801]
2023-03-02 20:06:24,905 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:06:26,154 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:06:26,224 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22039012610912323, best pos: [ 24.57470467  20.9863708           nan 122.40582883  10.16407951
  11.19693052  87.79235789]
2023-03-02 20:06:27,166 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22039012610912323, best pos: [ 24.42089673  21.44537797          nan 115.30997546  10.20950245
  14.31471851  86.53630367]
2023-03-02 20:06:29,506 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:06:30,387 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.018995260819792747, best pos: [ 26.87202858  18.42952245          nan   0.60955335  10.15035089
  17.3823901  113.36161848]
2023-03-02 20:06:33,148 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:06:34,077 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22039012610912323, best pos: [22.84665676 17.95933792         nan 79.67004979 10.13219321 13.37387025
 84.78308907]
2023-03-02 20:06:34,195 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:06:34,917 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22039012610912323, best pos: [27.5883347  18.00105883         nan 55.42760262 10.09519505 15.35438128
 83.67258184]
2023-03-02 20:07:12,379 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:07:13,439 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 24.87784119  18.7459138           nan   1.40952749  18.34957313
  10.10905025 114.67465158]
2023-03-02 20:07:14,784 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:07:15,844 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:07:16,005 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 27.35839788  22.18246279          nan   1.15171606  12.33160867
  11.19313169 106.78767177]
2023-03-02 20:07:16,770 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22039012610912323, best pos: [21.63540135 20.24169045         nan 43.49484252 10.2617064  14.26401519
 85.5907356 ]
2023-03-02 20:07:46,666 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:07:47,994 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 25.40240371  18.6876369           nan   1.39437112  13.75841001
  17.47419026 111.93299038]
2023-03-02 20:07:48,174 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:07:48,924 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 23.77034427  21.11451695          nan   1.10360824  11.69991152
  15.42189486 108.4702473 ]
2023-03-02 20:08:08,252 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:08:09,271 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 26.70445022  20.64369499          nan   1.35659541  20.30466148
  14.36532293 104.05286509]
2023-03-02 20:08:22,972 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:08:23,841 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 24.25761234  19.14815396          nan   1.3320403   16.31990367
  17.60446328 112.71585081]
2023-03-02 20:08:32,462 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:08:33,395 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22163431346416473, best pos: [ 27.24533755  22.47507766          nan  66.46322538  10.00687526
  14.20101256 106.39655057]
2023-03-02 20:08:33,486 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:08:34,190 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 24.18815132  20.98605091          nan   1.03613183  14.9640468
  15.1483982  106.26966997]
2023-03-02 20:09:03,335 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:09:04,203 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 27.72973478  18.16176217          nan   1.39746014  18.861626
  14.43608358 112.50164224]
2023-03-02 20:09:04,472 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:09:05,182 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 25.41083395  18.94127773          nan   1.4616953   20.91653906
  15.99122546 111.17849758]
2023-03-02 20:10:01,482 - django.request - ERROR - Internal Server Error: /opt_bsf/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/bsf_concept/views.py", line 60, in post
    float(request.data.get("mean_flow_min")),
TypeError: float() argument must be a string or a real number, not 'NoneType'
2023-03-02 20:10:45,785 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:10:46,681 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 26.60577402  17.70208731          nan   1.24153849  19.74792782
  17.60950169 112.38886196]
2023-03-02 20:10:59,409 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:11:00,855 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 27.10344156  17.47820423          nan   1.37707751  17.1996252
  12.55802977 106.89180212]
2023-03-02 20:11:01,773 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:11:02,227 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:11:03,090 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.02368854731321335, best pos: [ 24.10555188  20.91605977          nan   1.63338173  10.20882627
  18.49966658 108.5509438 ]
2023-03-02 20:11:03,521 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.21723783016204834, best pos: [ 27.38572597  22.16565648          nan  39.90456081  10.16992267
  16.77559537 111.1647226 ]
2023-03-02 20:12:24,451 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:12:25,149 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22357939183712006, best pos: [ 24.74557827  17.47114544          nan  38.91334489  17.6373376
  14.60286501 108.3838605 ]
2023-03-02 20:12:30,659 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:12:31,544 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 26.87950411  18.98010526          nan   1.50884781  15.3657727
  13.60483712 105.4657171 ]
2023-03-02 20:12:32,047 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:12:32,781 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22163431346416473, best pos: [ 22.66441077  21.84791595          nan  75.46071911  10.15495317
  14.47729969 110.01443982]
2023-03-02 20:13:15,246 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:13:15,954 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 26.07422956  23.45878506          nan   1.34044686  19.54095455
  14.61282176 111.01004765]
2023-03-02 20:13:19,749 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:13:20,515 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22163431346416473, best pos: [ 23.18212978  19.07543577          nan  51.90796558  10.10126816
  14.49484588 105.30852379]
2023-03-02 20:13:20,976 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:13:21,678 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 25.73268648  22.31403384          nan   1.43988613  16.99838524
  13.95406301 114.93246711]
2023-03-02 20:13:53,459 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:13:54,328 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:13:55,481 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 26.26290184  19.70528615          nan   1.35884799  13.7340395
  16.0874798  115.78710886]
2023-03-02 20:13:55,889 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:13:56,146 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 24.61367371  19.14586996          nan   1.08365433  21.39802969
  13.26946028 109.52185906]
2023-03-02 20:13:56,835 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.21723783016204834, best pos: [ 25.62131473  19.03777617          nan  39.94005138  10.13619829
  14.48811233 114.72065525]
2023-03-02 20:14:00,350 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:14:01,037 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 27.21371743  22.12713443          nan   1.26763372  20.57134323
  16.69794473 110.12973168]
2023-03-02 20:14:07,868 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:14:08,664 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22163431346416473, best pos: [ 23.20184571  19.09876356          nan  59.79389008  10.20703227
  12.56050809 111.25063487]
2023-03-02 20:15:06,427 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:15:07,291 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.19198101e+00 4.82089248e+02 1.00472702e+02 4.15813834e-01
 2.09485337e+02 3.13527339e+01 9.63249876e+01            nan
 2.32543929e+01 1.22387519e+01 5.30007251e+01]
2023-03-02 20:15:53,132 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:15:53,878 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22039012610912323, best pos: [26.42992808 20.6798105          nan 60.00163203 10.25759086 16.49039122
 83.81284814]
2023-03-02 20:16:02,353 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:16:03,191 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 24.72923732  18.50451369          nan   1.16919259  15.84409479
  10.41712479 110.9808818 ]
2023-03-02 20:16:11,800 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:16:12,655 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.21723783016204834, best pos: [ 24.68228537  20.55393888          nan  39.81324546  10.24841563
  12.43629014 110.49075144]
2023-03-02 20:16:13,216 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:16:13,990 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 23.04321361  20.47022867          nan   1.23230185  20.41388563
  12.84946092 115.39738306]
2023-03-02 20:16:33,210 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:16:33,951 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 27.82078298  17.32055334          nan   1.47759961  13.47263242
  11.12277272 109.71208965]
2023-03-02 20:17:15,126 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:17:16,211 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 28.41575427  17.57028579          nan   1.05912255  18.54250465
  15.6359608  117.88794227]
2023-03-02 20:17:22,231 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:17:23,100 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 22.95190546  18.34291164          nan   1.25064541  15.96680926
  16.27985405 108.11468659]
2023-03-02 20:17:23,423 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:17:24,149 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 21.73786999  22.6281072           nan   1.39512916  16.13694058
  15.9381204  105.58170313]
2023-03-02 20:17:44,439 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:17:45,430 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 25.39995365  22.83446973          nan   1.05115849  15.57470392
  15.23648559 112.5383562 ]
2023-03-02 20:18:29,937 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:18:30,934 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 27.59558007  20.03344966          nan   1.17061637  13.72336619
  15.6651318  107.26038195]
2023-03-02 20:18:31,896 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:18:32,685 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 24.77729523  21.06250189          nan   1.39810184  13.10847824
  11.26078972 115.53200171]
2023-03-02 20:18:42,455 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:18:43,358 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:18:43,543 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.21599364280700684, best pos: [26.11663873 18.54427148         nan 39.29184484 10.25277856 13.40362803
 87.6601917 ]
2023-03-02 20:18:44,212 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 28.56355235  22.66368205          nan   1.04672018  17.83874307
  15.05942377 114.12923955]
2023-03-02 20:18:59,795 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:19:00,485 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.6137666702270508, best pos: [ 33.9827586   50.58387918          nan   1.35535409 100.76227429
  22.74507767  85.58390497]
2023-03-02 20:19:07,064 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:19:07,862 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.27916812896728516, best pos: [ 33.33722467  25.51182416          nan   1.3195559   75.18819115
  18.99148342 108.68202465]
2023-03-02 20:19:25,681 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:19:26,612 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:19:26,724 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.21723783016204834, best pos: [ 26.65937991  20.30496086          nan  40.21913145  10.24285009
  14.19246569 105.22465637]
2023-03-02 20:19:27,419 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 21.14470384  24.18235186          nan   1.40049523  17.37704677
  17.19806053 115.56255546]
2023-03-02 20:19:28,663 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:19:29,436 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 24.99824922  18.5902496           nan   1.31813072  15.5651149
  15.93700908 105.43200542]
2023-03-02 20:19:35,805 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:19:36,600 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 25.81735283  21.03720774          nan   1.40860299  21.47819735
  17.76502882 106.95406431]
2023-03-02 20:20:21,989 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:20:22,730 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.18456254e+00 4.79786399e+02 1.04147719e+02 3.10777004e-01
 1.20547135e+02 3.14193604e+01 1.01843288e+02            nan
 2.70708329e+01 1.17587545e+01 5.41611386e+01]
2023-03-02 20:20:25,388 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:20:26,091 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.20819374e+00 4.76583382e+02 9.86879833e+01 4.59203823e-01
 1.63062022e+02 3.61030920e+01 1.14574798e+02            nan
 2.35720958e+01 1.15247399e+01 5.57153362e+01]
2023-03-02 20:20:57,667 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:20:58,688 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.15209885e+00 4.69117598e+02 9.61680456e+01 2.81459930e-01
 2.07062570e+02 3.20401353e+01 9.05363214e+01            nan
 2.84008743e+01 1.15142292e+01 5.41831730e+01]
2023-03-02 20:20:58,823 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:20:59,812 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.20678162e+00 4.75645266e+02 1.02775699e+02 4.50073647e-01
 1.91572728e+02 1.87212431e+01 8.97961212e+01            nan
 2.33993033e+01 1.05653256e+01 5.79035244e+01]
2023-03-02 20:21:07,038 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:21:07,777 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.18649273e+00 4.81680811e+02 1.03206007e+02 4.38116838e-01
 1.75379209e+02 4.11874022e+00 9.46615788e+01            nan
 2.50978345e+01 1.24057350e+01 5.51692206e+01]
2023-03-02 20:22:16,032 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:22:16,748 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.21723783016204834, best pos: [ 27.49039835  24.20319565          nan  38.88649119  10.26161379
  14.64917712 109.83128207]
2023-03-02 20:25:49,166 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:25:49,855 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.22357939183712006, best pos: [ 25.75531975  19.64833439          nan  39.62333427  15.46080232
  17.15545892 105.96189935]
2023-03-02 20:33:26,791 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/modules/pso.py changed, reloading.
2023-03-02 20:33:40,010 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:33:41,025 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:33:43,873 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:34:02,657 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.018995260819792747, best pos: [ 23.15620635  23.10909154          nan   1.36455698  10.07246634
  14.98658432 115.0213726 ]
2023-03-02 20:34:05,734 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.21599364280700684, best pos: [26.68537682 19.85973161         nan 40.05505637 10.07409422 13.24812811
 85.77716521]
2023-03-02 20:34:06,987 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.018995260819792747, best pos: [ 23.17664833  20.65843715          nan   1.28735861  10.03177908
  14.92737281 109.00936276]
2023-03-02 20:34:28,898 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/modules/pso.py changed, reloading.
2023-03-02 20:41:22,353 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:41:23,015 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:41:23,504 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 29.05339321  20.31339614          nan   1.43177788  18.05566224
  16.51622941 108.12991937]
2023-03-02 20:41:24,092 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.17167696356773376, best pos: [28.44359026 24.91574383  0.3        60.39830034 13.57398875 11.01480886
 85.1971894 ]
2023-03-02 20:42:06,597 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:42:07,592 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.018995260819792747, best pos: [ 25.69693506  21.65738726          nan   1.49131131  10.21653993
  16.07700663 106.90557895]
2023-03-02 20:42:09,151 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:42:09,539 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:42:11,491 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 28.68444836  20.7319896           nan   1.44613936  16.00500384
  13.23965596 115.1191064 ]
2023-03-02 20:42:11,850 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.21723783016204834, best pos: [ 22.17223503  16.31337607          nan  39.13583644  10.06214583
  18.41042473 110.74024039]
2023-03-02 20:42:26,193 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:42:26,955 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 22.91330091  21.17586405          nan   1.13974077  13.85915065
  16.99072698 113.54364626]
2023-03-02 20:42:58,603 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:42:59,635 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0255903210490942, best pos: [ 25.11924957  19.42223724          nan   1.33538703  12.47722185
  15.0845394  114.8836653 ]
2023-03-02 20:43:07,163 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:43:08,325 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.21723783016204834, best pos: [ 23.3830462   22.46299382          nan  39.32143254  10.22643796
  13.94802101 104.87233926]
2023-03-02 20:43:09,972 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:43:10,697 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.023353300988674164, best pos: [ 27.57173407  23.06859322          nan   1.54293143  10.17413228
  14.30821032 112.09706783]
2023-03-02 20:46:18,181 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:46:18,885 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.6455678939819336, best pos: [22.1814305  23.48200053         nan 88.15591292 12.56737061 19.51067026
 85.30589345]
2023-03-02 20:46:42,677 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:46:43,670 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:46:43,750 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.6455678939819336, best pos: [23.67453505 24.11903536         nan 62.41798616 12.07814019 18.324675
 81.30357953]
2023-03-02 20:46:44,461 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.5753374099731445, best pos: [25.25693648 23.64801829         nan 47.07750608 12.37755106 17.57412698
 85.85358936]
2023-03-02 20:46:45,117 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:46:45,851 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.6455678939819336, best pos: [22.93931237 23.59978164         nan 61.88145708 12.65427755 18.2314816
 87.79286476]
2023-03-02 20:47:22,190 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/modules/mlalgorithms.py changed, reloading.
2023-03-02 20:47:32,876 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:47:33,892 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.646486759185791, best pos: [23.81740418 24.59525616         nan 32.227914   11.93009767 18.95583711
 87.53874632]
2023-03-02 20:47:33,962 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:47:34,764 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.6455678939819336, best pos: [23.83569363 24.3530683          nan 57.48442632 12.10554789 18.63452701
 85.30774638]
2023-03-02 20:47:35,798 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:47:36,527 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.646486759185791, best pos: [23.75313696 23.54047149         nan 34.92727396 12.17301298 18.9661999
 83.08411791]
2023-03-02 20:48:02,592 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/modules/mlalgorithms.py changed, reloading.
2023-03-02 20:48:12,562 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:48:13,450 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.0366480350494385, best pos: [25.37881822 23.33854951         nan  1.42327846 21.12172383 17.94702455
 86.67085819]
2023-03-02 20:48:13,688 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:48:14,388 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.8534404039382935, best pos: [26.53371678 24.18059627         nan 15.99303248 21.36442788 17.84917196
 84.84032498]
2023-03-02 20:48:16,034 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-02 20:48:16,628 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.7973366379737854, best pos: [25.76103671 24.36637991         nan 54.2349132  17.52882722 18.06313598
 87.09449341]
2023-03-02 20:50:18,974 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/main.py changed, reloading.
2023-03-02 20:51:07,225 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/main.py changed, reloading.
2023-03-02 20:51:57,275 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/main.py changed, reloading.
2023-03-07 09:14:41,435 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/models.py changed, reloading.
2023-03-07 09:14:56,271 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/models.py changed, reloading.
2023-03-07 09:15:05,933 - django.request - WARNING - Not Found: /favicon.ico
2023-03-07 09:15:11,585 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 723, in render
    context = self.get_context(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 695, in get_context
    'post_form': self.get_rendered_html_form(data, view, 'POST', request),
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 507, in get_rendered_html_form
    serializer = self._get_serializer(view.serializer_class, view,
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 443, in _get_serializer
    return serializer_class(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/db/models/base.py", line 565, in __init__
    raise TypeError(
TypeError: SODISForecastData() got unexpected keyword arguments: 'context'
2023-03-07 09:18:43,447 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/models.py changed, reloading.
2023-03-07 09:18:53,644 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 723, in render
    context = self.get_context(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 695, in get_context
    'post_form': self.get_rendered_html_form(data, view, 'POST', request),
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 507, in get_rendered_html_form
    serializer = self._get_serializer(view.serializer_class, view,
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 443, in _get_serializer
    return serializer_class(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/db/models/base.py", line 565, in __init__
    raise TypeError(
TypeError: SODISForecastData() got unexpected keyword arguments: 'context'
2023-03-07 09:19:07,906 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/models.py changed, reloading.
2023-03-07 09:20:03,023 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 723, in render
    context = self.get_context(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 695, in get_context
    'post_form': self.get_rendered_html_form(data, view, 'POST', request),
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 507, in get_rendered_html_form
    serializer = self._get_serializer(view.serializer_class, view,
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 443, in _get_serializer
    return serializer_class(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/db/models/base.py", line 565, in __init__
    raise TypeError(
TypeError: SODISForecastData() got unexpected keyword arguments: 'context'
2023-03-07 09:26:04,334 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/models.py changed, reloading.
2023-03-07 09:26:20,833 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/models.py changed, reloading.
2023-03-07 09:26:32,091 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 723, in render
    context = self.get_context(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 695, in get_context
    'post_form': self.get_rendered_html_form(data, view, 'POST', request),
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 507, in get_rendered_html_form
    serializer = self._get_serializer(view.serializer_class, view,
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 443, in _get_serializer
    return serializer_class(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/db/models/base.py", line 565, in __init__
    raise TypeError(
TypeError: SODISForecastData() got unexpected keyword arguments: 'context'
2023-03-07 09:26:32,376 - django.request - WARNING - Not Found: /favicon.ico
2023-03-07 09:27:00,911 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 723, in render
    context = self.get_context(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 695, in get_context
    'post_form': self.get_rendered_html_form(data, view, 'POST', request),
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 507, in get_rendered_html_form
    serializer = self._get_serializer(view.serializer_class, view,
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 443, in _get_serializer
    return serializer_class(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/db/models/base.py", line 565, in __init__
    raise TypeError(
TypeError: SODISForecastData() got unexpected keyword arguments: 'context'
2023-03-07 09:27:01,152 - django.request - WARNING - Not Found: /favicon.ico
2023-03-07 09:27:31,534 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/models.py changed, reloading.
2023-03-07 09:28:23,146 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/serializers.py changed, reloading.
2023-03-07 09:28:41,347 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/serializers.py changed, reloading.
2023-03-07 09:29:00,620 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/views.py changed, reloading.
2023-03-07 09:29:13,644 - django.request - WARNING - Method Not Allowed: /sodis/
2023-03-07 09:29:13,896 - django.request - WARNING - Not Found: /favicon.ico
2023-03-07 09:29:23,297 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 15, in post
    float(request.data.get('starting_hour')),
ValueError: could not convert string to float: ''
2023-03-07 09:29:24,932 - django.request - WARNING - Method Not Allowed: /sodis/
2023-03-07 09:29:25,141 - django.request - WARNING - Not Found: /favicon.ico
2023-03-07 09:29:48,909 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 20, in post
    result, message =sodis_forecast(
  File "/opt/django/backend/sodis_forecast/scripts/main.py", line 22, in sodis_forecast
    starttime = radcal.settime(hour)
  File "/opt/django/backend/sodis_forecast/scripts/modules/radiation.py", line 60, in settime
    starttime = datetime.datetime.now(tz=self.tz).replace(day=nextday, hour=hour, minute=0, second=0, microsecond=0)
TypeError: 'float' object cannot be interpreted as an integer
2023-03-07 09:30:20,405 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/views.py changed, reloading.
2023-03-07 09:30:35,346 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/models.py changed, reloading.
2023-03-07 09:30:44,686 - django.request - WARNING - Method Not Allowed: /sodis/
2023-03-07 09:30:53,767 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 20, in post
    result, message =sodis_forecast(
  File "/opt/django/backend/sodis_forecast/scripts/main.py", line 22, in sodis_forecast
    starttime = radcal.settime(hour)
  File "/opt/django/backend/sodis_forecast/scripts/modules/radiation.py", line 60, in settime
    starttime = datetime.datetime.now(tz=self.tz).replace(day=nextday, hour=hour, minute=0, second=0, microsecond=0)
TypeError: 'float' object cannot be interpreted as an integer
2023-03-07 09:32:22,307 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/main.py changed, reloading.
2023-03-07 09:32:38,748 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/models.py changed, reloading.
2023-03-07 09:32:52,684 - django.request - WARNING - Method Not Allowed: /sodis/
2023-03-07 09:32:55,274 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 15, in post
    int(request.data.get('starting_hour')),
ValueError: invalid literal for int() with base 10: '8.0'
2023-03-07 09:33:20,827 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/models.py changed, reloading.
2023-03-07 09:33:48,543 - django.request - WARNING - Method Not Allowed: /sodis/
2023-03-07 09:33:51,481 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 15, in post
    int(request.data.get('starting_hour')),
ValueError: invalid literal for int() with base 10: '8.0'
2023-03-07 09:33:52,701 - django.request - WARNING - Method Not Allowed: /sodis/
2023-03-09 09:17:24,731 - django.request - WARNING - Not Found: /favicon.ico
2023-03-09 09:17:32,262 - django.request - WARNING - Method Not Allowed: /sodis/
2023-03-09 09:20:44,377 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/main.py changed, reloading.
2023-03-09 09:21:03,978 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/main.py changed, reloading.
2023-03-09 09:21:16,996 - django.request - WARNING - Method Not Allowed: /sodis/
2023-03-09 09:26:32,271 - django.request - WARNING - Method Not Allowed: /sodis/
2023-03-09 09:28:35,856 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/disinfection.py changed, reloading.
2023-03-09 09:28:48,228 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/main.py changed, reloading.
2023-03-09 09:30:08,465 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 20, in post
    result, message =sodis_forecast(
ValueError: too many values to unpack (expected 2)
2023-03-09 09:31:09,389 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/views.py changed, reloading.
2023-03-09 09:31:28,263 - django.request - WARNING - Method Not Allowed: /sodis/
2023-03-19 14:43:08,033 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-19 14:43:08,949 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.15050310e+00 4.79693652e+02 8.02474516e+01 2.15586633e-01
 1.71135725e+02 1.27025907e+01 1.18895028e+02            nan
 2.64702518e+01 1.08021754e+01 5.78850231e+01]
2023-03-19 16:36:30,430 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-19 16:36:31,230 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.24631270e+00 4.82009136e+02 9.64236531e+01 3.42559437e-01
 2.15759124e+02 2.55664305e+01 9.92250568e+01            nan
 2.56041661e+01 1.21852514e+01 5.38411037e+01]
2023-03-19 18:28:40,090 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-19 18:28:40,824 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.8534404039382935, best pos: [26.23327219 23.87280247         nan 22.24674247 16.58197194 17.58425377
 87.32232656]
2023-03-19 18:29:14,083 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-19 18:29:14,681 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.08241648972034454, best pos: [33.94123754 15.65619984         nan 20.55298416 19.6641694  11.43774426
  1.31462309]
2023-03-19 18:29:23,401 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-19 18:29:24,007 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.08215386420488358, best pos: [35.62685934 33.04580951         nan 34.65710505 20.23054086 11.16423127
  3.93451945]
2023-03-19 18:29:32,330 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-19 18:29:32,921 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 7.048852443695068, best pos: [32.48115026 40.50873599         nan  1.16739958 14.1552216  17.75259432
 33.47547896]
2023-03-19 18:29:47,787 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-19 18:29:48,489 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 16.847078323364258, best pos: [41.25737453 36.56285897         nan  1.15838265 14.563112   18.04280424
 34.79485816]
2023-03-20 10:57:30,916 - django.request - WARNING - Not Found: /favicon.ico
2023-03-20 11:44:18,111 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/main.py changed, reloading.
2023-03-20 11:45:05,804 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/main.py changed, reloading.
2023-03-20 11:45:24,123 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py", line 3803, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas/_libs/index.pyx", line 138, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 165, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 5745, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 5753, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'time'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 20, in post
    result, message, duration = sodis_forecast(
  File "/opt/django/backend/sodis_forecast/scripts/main.py", line 31, in sodis_forecast
    print(output["time"])
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py", line 3805, in __getitem__
    indexer = self.columns.get_loc(key)
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py", line 3805, in get_loc
    raise KeyError(key) from err
KeyError: 'time'
2023-03-20 11:46:07,894 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/main.py changed, reloading.
2023-03-20 11:46:58,836 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/main.py changed, reloading.
2023-03-20 11:54:39,609 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/main.py changed, reloading.
2023-03-20 11:57:15,312 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/main.py changed, reloading.
2023-03-20 17:29:49,726 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-20 17:29:50,499 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.15670318e+00 4.78406647e+02 1.07753610e+02 3.61913245e-01
 1.75266266e+02 2.31073085e+01 1.08959885e+02            nan
 2.54370568e+01 1.24158993e+01 5.36104970e+01]
2023-03-20 17:30:07,798 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-20 17:30:08,672 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.15334843e+00 4.85038466e+02 1.13183917e+02 4.05360477e-01
 1.62890040e+02 2.93514812e+01 8.93580575e+01            nan
 2.36344723e+01 1.17528510e+01 5.25734773e+01]
2023-03-24 17:16:41,519 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/disinfection.py changed, reloading.
2023-03-24 17:26:38,847 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-24 17:26:39,685 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.17734446e+00 4.81238869e+02 9.99411780e+01 4.47969458e-01
 2.34151816e+02 2.01301721e+01 9.48083632e+01            nan
 2.78177101e+01 1.22281967e+01 5.71105494e+01]
2023-03-24 17:26:40,723 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-24 17:26:41,543 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.24862726e+00 4.72229718e+02 8.79726426e+01 1.85717376e-01
 2.23504173e+02 1.18271579e+01 1.10844061e+02            nan
 2.68613155e+01 1.23685144e+01 5.35106850e+01]
2023-03-29 20:21:31,912 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 20, in post
    result, message, duration = sodis_forecast(
  File "/opt/django/backend/sodis_forecast/scripts/main.py", line 20, in sodis_forecast
    loc = getlocation(location["country"], location["city"])
  File "/opt/django/backend/sodis_forecast/scripts/modules/radiation.py", line 20, in getlocation
    return loc.latitude, loc.longitude, loc.altitude
AttributeError: 'NoneType' object has no attribute 'latitude'
2023-03-29 20:26:10,015 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/radiation.py changed, reloading.
2023-03-29 20:26:40,064 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/radiation.py changed, reloading.
2023-03-29 20:28:57,337 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/radiation.py changed, reloading.
2023-03-29 20:29:57,608 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/main.py changed, reloading.
2023-03-29 20:32:17,946 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/main.py changed, reloading.
2023-03-31 18:18:56,510 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/main.py changed, reloading.
2023-03-31 18:19:35,602 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/radiation.py changed, reloading.
2023-03-31 18:20:52,847 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/models.py changed, reloading.
2023-03-31 18:21:05,478 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/serializers.py changed, reloading.
2023-03-31 18:23:32,546 - django.request - WARNING - Not Found: /favicon.ico
2023-03-31 18:23:40,362 - django.request - WARNING - Method Not Allowed: /sodis/
2023-03-31 18:23:52,363 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 20, in post
    result, message, duration = sodis_forecast(
TypeError: sodis_forecast() got an unexpected keyword argument 'location'
2023-03-31 18:25:53,964 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/views.py changed, reloading.
2023-03-31 18:26:04,836 - django.request - WARNING - Method Not Allowed: /sodis/
2023-03-31 18:26:07,752 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 19, in post
    result, message, duration = sodis_forecast(
TypeError: sodis_forecast() got an unexpected keyword argument 'latitude'
2023-03-31 18:26:53,143 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/views.py changed, reloading.
2023-03-31 18:27:08,143 - django.request - WARNING - Method Not Allowed: /sodis/
2023-03-31 18:27:13,557 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 19, in post
    result, message, duration = sodis_forecast(
  File "/opt/django/backend/sodis_forecast/scripts/main.py", line 22, in sodis_forecast
    radcal = SRC(latlng[0], latlng[1]) #geodätische Höhe hinzufügen.
  File "/opt/django/backend/sodis_forecast/scripts/modules/radiation.py", line 42, in __init__
    self.timezonename = TimezoneFinder().timezone_at(lat=latitude, lng=longitude)
  File "/usr/local/lib/python3.10/dist-packages/timezonefinder/timezonefinder.py", line 419, in timezone_at
    lng, lat = utils.validate_coordinates(lng, lat)
  File "/usr/local/lib/python3.10/dist-packages/timezonefinder/utils.py", line 260, in validate_coordinates
    if not -180.0 <= lng <= 180.0:
TypeError: '<=' not supported between instances of 'float' and 'str'
2023-03-31 18:29:29,937 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/main.py changed, reloading.
2023-03-31 18:29:39,869 - django.request - WARNING - Method Not Allowed: /sodis/
2023-03-31 18:29:44,729 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 19, in post
    result, message, duration = sodis_forecast(
  File "/opt/django/backend/sodis_forecast/scripts/main.py", line 23, in sodis_forecast
    starttime = radcal.settime(hour)
  File "/opt/django/backend/sodis_forecast/scripts/modules/radiation.py", line 60, in settime
    starttime = datetime.datetime.now(tz=self.tz).replace(day=nextday, hour=hour, minute=0, second=0, microsecond=0)
ValueError: day is out of range for month
2023-03-31 18:33:06,859 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/radiation.py changed, reloading.
2023-03-31 18:33:21,820 - django.request - WARNING - Method Not Allowed: /sodis/
2023-03-31 18:33:26,678 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 19, in post
    result, message, duration = sodis_forecast(
  File "/opt/django/backend/sodis_forecast/scripts/main.py", line 23, in sodis_forecast
    starttime = radcal.settime(hour)
  File "/opt/django/backend/sodis_forecast/scripts/modules/radiation.py", line 52, in settime
    nextday = datetime.datetime.now(tz=self.tz).day + datetime.timedelta(days=1)
TypeError: unsupported operand type(s) for +: 'int' and 'datetime.timedelta'
2023-03-31 18:33:53,273 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/radiation.py changed, reloading.
2023-03-31 18:34:05,426 - django.request - WARNING - Method Not Allowed: /sodis/
2023-03-31 18:34:10,842 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 19, in post
    result, message, duration = sodis_forecast(
  File "/opt/django/backend/sodis_forecast/scripts/main.py", line 23, in sodis_forecast
    starttime = radcal.settime(hour)
  File "/opt/django/backend/sodis_forecast/scripts/modules/radiation.py", line 52, in settime
    nextday = datetime.datetime.today(tz=self.tz).day + datetime.timedelta(days=1)
TypeError: datetime.today() takes no keyword arguments
2023-03-31 18:34:30,814 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/radiation.py changed, reloading.
2023-03-31 18:35:56,147 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/radiation.py changed, reloading.
2023-03-31 18:36:11,234 - django.request - WARNING - Method Not Allowed: /sodis/
2023-03-31 18:36:16,256 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 19, in post
    result, message, duration = sodis_forecast(
  File "/opt/django/backend/sodis_forecast/scripts/main.py", line 23, in sodis_forecast
    starttime = radcal.settime(hour)
  File "/opt/django/backend/sodis_forecast/scripts/modules/radiation.py", line 52, in settime
    nextday = datetime.datetime.now(tz=self.tz).day + int(datetime.timedelta(days=1))
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'datetime.timedelta'
2023-03-31 18:37:19,898 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/radiation.py changed, reloading.
2023-03-31 18:37:31,135 - django.request - WARNING - Method Not Allowed: /sodis/
2023-03-31 18:37:38,871 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "pandas/_libs/index.pyx", line 548, in pandas._libs.index.DatetimeEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 2263, in pandas._libs.hashtable.Int64HashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 2273, in pandas._libs.hashtable.Int64HashTable.get_item
KeyError: 1677657600000000000

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py", line 3803, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas/_libs/index.pyx", line 516, in pandas._libs.index.DatetimeEngine.get_loc
  File "pandas/_libs/index.pyx", line 550, in pandas._libs.index.DatetimeEngine.get_loc
KeyError: Timestamp('2023-03-01 08:00:00')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/datetimes.py", line 736, in get_loc
    return Index.get_loc(self, key, method, tolerance)
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py", line 3805, in get_loc
    raise KeyError(key) from err
KeyError: Timestamp('2023-03-01 08:00:00')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 19, in post
    result, message, duration = sodis_forecast(
  File "/opt/django/backend/sodis_forecast/scripts/main.py", line 25, in sodis_forecast
    disdata, message, duration = disinfectionuntil(raddata, starttime, wattemp, tarlogdis)
  File "/opt/django/backend/sodis_forecast/scripts/modules/disinfection.py", line 71, in disinfectionuntil
    nowdata = raddata.loc[nowtime]
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/indexing.py", line 1073, in __getitem__
    return self._getitem_axis(maybe_callable, axis=axis)
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/indexing.py", line 1312, in _getitem_axis
    return self._get_label(key, axis=axis)
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/indexing.py", line 1260, in _get_label
    return self.obj.xs(label, axis=axis)
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py", line 4056, in xs
    loc = index.get_loc(key)
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/datetimes.py", line 738, in get_loc
    raise KeyError(orig_key) from err
KeyError: datetime.datetime(2023, 3, 1, 8, 0, tzinfo=<StaticTzInfo 'Etc/GMT'>)
2023-03-31 18:39:20,729 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/radiation.py changed, reloading.
2023-03-31 18:39:35,875 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/radiation.py changed, reloading.
2023-03-31 18:39:47,226 - django.request - WARNING - Method Not Allowed: /sodis/
2023-03-31 18:39:53,733 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "pandas/_libs/index.pyx", line 548, in pandas._libs.index.DatetimeEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 2263, in pandas._libs.hashtable.Int64HashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 2273, in pandas._libs.hashtable.Int64HashTable.get_item
KeyError: 1677657600000000000

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py", line 3803, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas/_libs/index.pyx", line 516, in pandas._libs.index.DatetimeEngine.get_loc
  File "pandas/_libs/index.pyx", line 550, in pandas._libs.index.DatetimeEngine.get_loc
KeyError: Timestamp('2023-03-01 08:00:00')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/datetimes.py", line 736, in get_loc
    return Index.get_loc(self, key, method, tolerance)
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py", line 3805, in get_loc
    raise KeyError(key) from err
KeyError: Timestamp('2023-03-01 08:00:00')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 19, in post
    result, message, duration = sodis_forecast(
  File "/opt/django/backend/sodis_forecast/scripts/main.py", line 25, in sodis_forecast
    disdata, message, duration = disinfectionuntil(raddata, starttime, wattemp, tarlogdis)
  File "/opt/django/backend/sodis_forecast/scripts/modules/disinfection.py", line 71, in disinfectionuntil
    nowdata = raddata.loc[nowtime]
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/indexing.py", line 1073, in __getitem__
    return self._getitem_axis(maybe_callable, axis=axis)
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/indexing.py", line 1312, in _getitem_axis
    return self._get_label(key, axis=axis)
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/indexing.py", line 1260, in _get_label
    return self.obj.xs(label, axis=axis)
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py", line 4056, in xs
    loc = index.get_loc(key)
  File "/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/datetimes.py", line 738, in get_loc
    raise KeyError(orig_key) from err
KeyError: datetime.datetime(2023, 3, 1, 8, 0, tzinfo=<StaticTzInfo 'Etc/GMT'>)
2023-03-31 18:42:14,428 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/radiation.py changed, reloading.
2023-03-31 18:42:26,934 - django.request - WARNING - Method Not Allowed: /sodis/
2023-03-31 18:42:27,128 - django.request - WARNING - Not Found: /favicon.ico
2023-03-31 18:43:00,926 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 19, in post
    result, message, duration = sodis_forecast(
  File "/opt/django/backend/sodis_forecast/scripts/main.py", line 22, in sodis_forecast
    radcal = SRC(float(latlng[0]), float(latlng[1])) #geodätische Höhe hinzufügen.
ValueError: could not convert string to float: 'None'
2023-03-31 18:54:18,463 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 19, in post
    result, message, duration = sodis_forecast(
  File "/opt/django/backend/sodis_forecast/scripts/main.py", line 22, in sodis_forecast
    radcal = SRC(float(latlng[0]), float(latlng[1])) #geodätische Höhe hinzufügen.
ValueError: could not convert string to float: 'None'
2023-03-31 18:55:59,627 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 19, in post
    result, message, duration = sodis_forecast(
  File "/opt/django/backend/sodis_forecast/scripts/main.py", line 22, in sodis_forecast
    radcal = SRC(float(latlng[0]), float(latlng[1])) #geodätische Höhe hinzufügen.
ValueError: could not convert string to float: 'None'
2023-03-31 18:56:44,712 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 19, in post
    result, message, duration = sodis_forecast(
  File "/opt/django/backend/sodis_forecast/scripts/main.py", line 22, in sodis_forecast
    radcal = SRC(float(latlng[0]), float(latlng[1])) #geodätische Höhe hinzufügen.
ValueError: could not convert string to float: 'None'
2023-03-31 18:57:28,650 - django.request - WARNING - Method Not Allowed: /sodis/
2023-03-31 18:58:30,867 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 16, in post
    int(request.data.get('water_temperature')),
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
2023-03-31 18:58:46,657 - django.request - WARNING - Method Not Allowed: /sodis/
2023-03-31 19:31:18,432 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 19, in post
    result, message, duration = sodis_forecast(
  File "/opt/django/backend/sodis_forecast/scripts/main.py", line 22, in sodis_forecast
    radcal = SRC(float(latlng[0]), float(latlng[1])) #geodätische Höhe hinzufügen.
ValueError: could not convert string to float: 'None'
2023-03-31 19:31:35,782 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 19, in post
    result, message, duration = sodis_forecast(
  File "/opt/django/backend/sodis_forecast/scripts/main.py", line 22, in sodis_forecast
    radcal = SRC(float(latlng[0]), float(latlng[1])) #geodätische Höhe hinzufügen.
ValueError: could not convert string to float: 'None'
2023-03-31 19:36:15,836 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 19, in post
    result, message, duration = sodis_forecast(
  File "/opt/django/backend/sodis_forecast/scripts/main.py", line 22, in sodis_forecast
    radcal = SRC(float(latlng[0]), float(latlng[1])) #geodätische Höhe hinzufügen.
ValueError: could not convert string to float: 'None'
2023-03-31 22:00:39,155 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-31 22:00:40,025 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21227581e+00 4.84204236e+02 1.08982599e+02 2.71408828e-01
 1.73879239e+02 2.10271348e+01 1.01747195e+02            nan
 2.61329068e+01 1.18691734e+01 5.63655857e+01]
2023-03-31 22:00:44,441 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-03-31 22:00:45,045 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.853127121925354, best pos: [25.30395362 24.47984543         nan 15.92186337 12.55495986 17.75847329
 82.37174988]
2023-03-31 22:00:49,096 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 19, in post
    result, message, duration = sodis_forecast(
  File "/opt/django/backend/sodis_forecast/scripts/main.py", line 22, in sodis_forecast
    radcal = SRC(float(latlng[0]), float(latlng[1])) #geodätische Höhe hinzufügen.
ValueError: could not convert string to float: 'None'
2023-03-31 22:11:08,844 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/main.py changed, reloading.
2023-03-31 22:12:09,296 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/radiation.py changed, reloading.
2023-03-31 22:13:54,334 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/disinfection.py changed, reloading.
2023-03-31 22:14:06,328 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/disinfection.py changed, reloading.
2023-03-31 22:14:16,055 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/disinfection.py changed, reloading.
2023-03-31 22:21:38,835 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/radiation.py changed, reloading.
2023-03-31 23:49:48,033 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 19, in post
    result, message, duration = sodis_forecast(
  File "/opt/django/backend/sodis_forecast/scripts/main.py", line 21, in sodis_forecast
    radcal = SRC(float(latlng[0]), float(latlng[1])) #geodätische Höhe hinzufügen.
ValueError: could not convert string to float: 'None'
2023-03-31 23:49:59,025 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 19, in post
    result, message, duration = sodis_forecast(
  File "/opt/django/backend/sodis_forecast/scripts/main.py", line 21, in sodis_forecast
    radcal = SRC(float(latlng[0]), float(latlng[1])) #geodätische Höhe hinzufügen.
ValueError: could not convert string to float: 'None'
2023-04-05 13:10:22,838 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-05 13:10:23,628 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21661642e+00 4.79631833e+02 1.06530135e+02 3.32861973e-01
 1.42034708e+02 2.97089877e+01 9.62372825e+01            nan
 2.70074501e+01 1.19355470e+01 5.47625427e+01]
2023-04-05 13:10:27,374 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-05 13:10:27,990 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.8534404039382935, best pos: [26.94716704 24.14667277         nan 15.13894516 16.82269668 17.51088162
 87.78203441]
2023-04-05 13:28:57,723 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-05 13:28:58,507 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.8534404039382935, best pos: [26.10001815 24.11534853         nan 36.73571929 21.61397741 17.91434952
 83.25014023]
2023-04-05 13:37:44,108 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-05 13:37:44,710 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.8473499417304993, best pos: [25.72931754 24.34130289         nan 19.49525377 20.46490261 18.78349598
 87.01745976]
2023-04-05 13:40:41,653 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-05 13:40:42,355 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.8534404039382935, best pos: [26.28787963 24.1991513          nan 28.13639995 21.69396274 17.59905233
 86.595183  ]
2023-04-05 13:41:21,926 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-05 13:41:22,519 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.8534404039382935, best pos: [25.27474492 24.27693572         nan 36.17769133 20.36263748 17.80073951
 84.74082486]
2023-04-05 13:41:54,449 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-05 13:41:55,886 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.6822935938835144, best pos: [ 26.54767363  23.91808684          nan  35.66973094  16.51238715
  17.68305799 100.63534695]
2023-04-05 13:41:59,235 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-05 13:41:59,827 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.7973366379737854, best pos: [26.75034078 24.36111573         nan 80.87059247 18.64473205 18.20978559
 86.08834823]
2023-04-05 13:42:46,821 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-05 13:42:48,020 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.16369308e+00 4.68915793e+02 8.88959799e+01 3.55851853e-01
 2.65289570e+02 2.06147892e+01 1.20560050e+02            nan
 2.48505924e+01 1.18018437e+01 5.67975828e+01]
2023-04-06 07:10:10,603 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:10:11,418 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.24471575e+00 4.67493694e+02 1.01428766e+02 4.66134104e-01
 2.95062367e+02 2.52612790e+01 9.96824292e+01            nan
 2.40009147e+01 1.22393451e+01 5.69632827e+01]
2023-04-06 07:10:12,889 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:10:13,723 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.17479884e+00 4.82835442e+02 1.11746010e+02 2.73408498e-01
 1.99018331e+02 1.32144762e+01 1.05011674e+02            nan
 2.73422958e+01 1.19513223e+01 5.25764608e+01]
2023-04-06 07:14:07,974 - django.request - WARNING - Method Not Allowed: /opt_tur/
2023-04-06 07:14:08,313 - django.request - WARNING - Not Found: /favicon.ico
2023-04-06 07:15:35,319 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 85, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 25, in minimize
    bounds["floc_dose"][0]/bounds["floc_concentration"][0],
ZeroDivisionError: division by zero
2023-04-06 07:15:42,650 - django.request - WARNING - Method Not Allowed: /opt_tur/
2023-04-06 07:16:06,727 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 134, in post
    int(request.data.get("duration_coagulation_phase_min")),
ValueError: invalid literal for int() with base 10: '0.1'
2023-04-06 07:16:14,648 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:16:15,469 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 327.9864807128906, best pos: [3.04040464e+02 4.94374544e+01 6.46784128e-01 1.22659561e+01
 1.79601637e+00 1.47093057e-01]
2023-04-06 07:20:32,363 - django.request - WARNING - Method Not Allowed: /opt_tur/
2023-04-06 07:20:37,243 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:20:38,091 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.0974104404449463, best pos: [8.16260467e+00 5.76730511e+02 3.31543446e+00 6.18053452e-01
 1.12928482e+02 2.21662715e+01 7.65059776e+01 2.96293317e-01
 3.67235665e+01 3.35317268e+00 7.63483407e+01]
2023-04-06 07:26:52,068 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:26:52,631 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:26:53,770 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.20924147e+00 4.79080372e+02 1.10696510e+02 1.10005868e-01
 2.59811983e+02 3.36152211e+01 1.03715844e+02            nan
 2.68632998e+01 1.17903766e+01 5.34409876e+01]
2023-04-06 07:26:54,184 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.24406290e+00 4.80787592e+02 9.73021939e+01 3.96856852e-01
 2.33920200e+02 3.71975015e+01 1.05509754e+02            nan
 2.41894274e+01 1.21542078e+01 5.99240508e+01]
2023-04-06 07:28:04,107 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:28:04,859 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21082659e+00 4.76593903e+02 1.15810769e+02 1.02944366e-01
 1.66540828e+02 1.57799703e+01 9.59422713e+01            nan
 2.57028672e+01 1.19133793e+01 5.49544996e+01]
2023-04-06 07:28:33,348 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:28:34,398 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.24945117e+00 4.80389116e+02 1.01053889e+02 2.03266922e-01
 1.15588619e+02 2.96839396e+01 1.19097922e+02            nan
 2.44324488e+01 1.04863274e+01 5.39400806e+01]
2023-04-06 07:28:54,382 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:28:55,488 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.20971323e+00 4.79569607e+02 9.89977139e+01 1.13680084e-01
 1.82222121e+02 2.62957809e+01 1.05671246e+02            nan
 2.52854338e+01 1.15754732e+01 5.56393753e+01]
2023-04-06 07:29:24,311 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:29:25,506 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.22594035e+00 4.70979139e+02 1.12102366e+02 4.44622085e-01
 1.11618888e+02 2.45327521e+01 9.65520763e+01            nan
 2.50068619e+01 1.22282406e+01 5.27538491e+01]
2023-04-06 07:29:36,519 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:29:37,626 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21912155e+00 4.80439512e+02 9.74651798e+01 2.35443488e-01
 2.50086430e+02 3.73452054e+01 1.06537144e+02            nan
 2.88080956e+01 1.12376568e+01 5.77012669e+01]
2023-04-06 07:29:38,479 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:29:39,251 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.17436519e+00 4.75401552e+02 9.77124283e+01 3.08197893e-01
 2.04832388e+02 1.24414179e+01 9.85928679e+01            nan
 2.51636590e+01 1.24066948e+01 5.41430708e+01]
2023-04-06 07:29:41,542 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:29:42,347 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.22238506e+00 4.77621277e+02 1.05353308e+02 4.34263123e-01
 1.68825554e+02 3.24818648e+01 1.00886596e+02            nan
 2.61990120e+01 1.13065606e+01 5.38303579e+01]
2023-04-06 07:32:02,246 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/views.py changed, reloading.
2023-04-06 07:32:42,183 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:32:43,156 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:32:43,189 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.754457473754883, best pos: [8.17705889e+00 4.78493332e+02 9.55596247e+01 2.58805975e-01
 1.59477517e+02 1.86408195e+01 1.04795635e+02            nan
 2.85046673e+01 1.22119384e+01 4.38776208e+01]
2023-04-06 07:32:43,956 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.18410010e+00 4.77872757e+02 9.69658920e+01 3.19929207e-01
 1.57533662e+02 1.77458227e+01 9.68560167e+01            nan
 2.53768817e+01 1.07953959e+01 5.42199577e+01]
2023-04-06 07:35:01,314 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:35:02,579 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.20585807e+00 4.77003113e+02 1.03093189e+02 2.04044257e-01
 1.85288994e+02 2.36615780e+01 8.62330335e+01            nan
 2.61615218e+01 1.10391348e+01 5.31405760e+01]
2023-04-06 07:35:03,074 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:35:04,012 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.754457473754883, best pos: [8.22392726e+00 4.83921767e+02 1.01463618e+02 1.43327027e-01
 2.20140351e+02 2.28890520e+01 1.04429067e+02            nan
 2.60892899e+01 1.23332709e+01 4.15408471e+01]
2023-04-06 07:37:20,363 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:37:21,434 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.22816405e+00 4.83119782e+02 1.09914383e+02 1.83459916e-01
 1.73755927e+02 3.34384431e+01 1.03510037e+02            nan
 2.66467242e+01 1.09925069e+01 5.50607846e+01]
2023-04-06 07:37:22,149 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:37:23,025 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.22058176e+00 4.66238497e+02 1.00815614e+02 2.72824164e-01
 2.41621392e+02 2.31806716e+01 8.83567463e+01            nan
 2.57562865e+01 1.21266771e+01 5.26866328e+01]
2023-04-06 07:46:01,975 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:46:02,204 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:46:03,273 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.18874873e+00 4.84182994e+02 1.07641744e+02 4.23908236e-01
 2.98685075e+02 1.97586847e+01 8.82852149e+01            nan
 2.58857482e+01 1.14231113e+01 5.46208041e+01]
2023-04-06 07:46:03,597 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.20307836e+00 4.80531911e+02 1.04227768e+02 3.93640206e-01
 1.53681867e+02 4.59989039e+00 1.09030958e+02            nan
 2.61488193e+01 1.10911366e+01 5.26892151e+01]
2023-04-06 07:46:32,498 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:46:33,540 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.16439348e+00 4.69960021e+02 8.85424782e+01 3.14463276e-01
 1.42361159e+02 3.57671920e+01 9.67293796e+01            nan
 2.29599431e+01 1.12986490e+01 5.25979431e+01]
2023-04-06 07:46:34,609 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:46:35,495 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21195137e+00 4.76871612e+02 9.96248532e+01 1.45366459e-01
 1.25536314e+02 2.42490820e+01 7.99017189e+01            nan
 2.54744188e+01 1.18523785e+01 5.26301695e+01]
2023-04-06 07:47:13,834 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:47:14,922 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.24536668e+00 4.71102528e+02 1.10420834e+02 2.76950313e-01
 1.24026574e+02 2.73718914e+01 9.18924989e+01            nan
 2.68558945e+01 1.20954727e+01 5.43983167e+01]
2023-04-06 07:47:16,090 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:47:16,852 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.754457473754883, best pos: [8.20275629e+00 4.71662267e+02 8.69047534e+01 4.35057265e-01
 2.31024909e+02 1.30155597e+01 1.08951010e+02            nan
 2.67460126e+01 1.06465970e+01 4.62729411e+01]
2023-04-06 07:47:42,520 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:47:43,393 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.8534404039382935, best pos: [25.8363508  24.1344814          nan 27.10605756 21.10163827 17.89256334
 87.02243275]
2023-04-06 07:47:47,190 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:47:47,965 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.7973366379737854, best pos: [25.39292898 24.26787203         nan 78.68718184 19.22532967 19.73494447
 85.99428041]
2023-04-06 07:47:48,456 - django.request - WARNING - Method Not Allowed: /opt_tur/
2023-04-06 07:47:49,131 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:47:49,837 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.6822935938835144, best pos: [ 25.33217035  24.47360231          nan  33.59698665  19.43182239
  17.5071673  102.44060154]
2023-04-06 07:47:52,958 - django.request - WARNING - Method Not Allowed: /opt_bsf/
2023-04-06 07:49:08,224 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:49:08,859 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.6822935938835144, best pos: [ 26.36809991  23.99428061          nan  21.09679033  18.95136525
  17.71508468 102.01144213]
2023-04-06 07:50:14,971 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:50:15,838 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.1486712545156479, best pos: [25.60326678 14.63234333         nan  1.08450037 19.5046067  11.35006222
  9.21312851]
2023-04-06 07:50:21,215 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:50:21,996 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.04202081263065338, best pos: [28.37343329 14.58249408         nan 37.90691842 20.6152099  10.85339656
  8.910153  ]
2023-04-06 07:50:24,876 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:50:25,513 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.04202081263065338, best pos: [26.76231051 14.30656216         nan 40.26966963 19.28906337 10.89516123
  8.89127884]
2023-04-06 07:50:34,210 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:50:34,799 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.11334195733070374, best pos: [25.12811723 23.75095973         nan 26.5684456  16.43771703 17.71183625
 48.007761  ]
2023-04-06 07:53:22,472 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:53:23,071 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.36262136697769165, best pos: [26.60418532 24.31288932         nan 36.34526319 17.36311607 18.28982065
 34.93553413]
2023-04-06 07:57:21,468 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:57:22,612 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.04202081263065338, best pos: [25.52354926 13.81132932         nan 40.11513773 17.09468153 11.2857519
  8.61824843]
2023-04-06 07:57:38,590 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:57:39,058 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:57:39,348 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.37105825543403625, best pos: [25.16766726 23.65600356         nan 34.23689115 16.85809886 17.99098085
 31.78922103]
2023-04-06 07:57:39,907 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.04202081263065338, best pos: [29.3894906  11.84391359         nan 39.46106814 16.56394676 11.06297465
  8.71621798]
2023-04-06 07:57:55,713 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:57:56,366 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.1486712545156479, best pos: [24.40314871 14.00875156         nan  1.84955171 21.16879116 11.05454885
  9.14628311]
2023-04-06 07:59:09,131 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:59:09,656 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:59:10,015 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.4368874132633209, best pos: [23.7924675  24.22778195         nan  1.20350487 16.4591179  18.89974684
 34.05749982]
2023-04-06 07:59:10,614 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.21939988434314728, best pos: [21.46492167 16.12836883         nan  1.71693613 18.22775908 10.9951231
  9.30505816]
2023-04-06 07:59:10,708 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 07:59:11,305 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.18235768377780914, best pos: [23.37121687 23.5137301          nan 48.39231032 16.82095134 18.18401173
 33.53542001]
2023-04-06 08:00:57,922 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:00:58,887 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.1486712545156479, best pos: [27.24328245 13.64891566         nan  1.53140037 22.91054959 10.8629745
  9.1775772 ]
2023-04-06 08:00:59,080 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:00:59,690 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.04202081263065338, best pos: [24.12850776 15.06598506         nan 38.82851748 22.87637761 11.13499421
  9.04594129]
2023-04-06 08:02:23,274 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:02:24,168 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.3715052008628845, best pos: [26.14711627 23.66428228         nan 34.14518409 17.29104064 17.96295984
 33.71467344]
2023-04-06 08:02:44,420 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:02:45,400 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.032626401633024216, best pos: [25.44371573 15.35554126         nan 61.62174349 20.84652609 11.49843767
  9.12663269]
2023-04-06 08:02:45,644 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:02:46,361 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.36400842666625977, best pos: [25.8358933  23.53509795         nan 34.75933099 18.95549914 18.42136872
 34.64021603]
2023-04-06 08:03:21,787 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:03:22,694 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.04202081263065338, best pos: [27.24247389 14.90109182         nan 37.95619036 18.79476577 10.93910049
  9.33388808]
2023-04-06 08:03:28,160 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:03:28,908 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.04202081263065338, best pos: [26.58138866 13.8039957          nan 38.71799161 17.3005149  11.16468614
  8.56449335]
2023-04-06 08:03:35,507 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:03:36,406 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.04202081263065338, best pos: [27.16902384 12.74954492         nan 39.35926267 19.7116145  11.19438981
  9.27603527]
2023-04-06 08:03:39,652 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:03:40,324 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.1486712545156479, best pos: [27.78712715 13.35254722         nan  1.83436516 16.51669274 11.08764876
  9.23074933]
2023-04-06 08:03:43,963 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:03:44,302 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:03:44,848 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.04202081263065338, best pos: [27.13203378 15.03321417         nan 39.171242   19.7675016  11.39032962
  8.76374494]
2023-04-06 08:03:45,254 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.17116501927375793, best pos: [25.30446557 15.8773145          nan 40.05883685 21.43402768 15.34563704
  8.74779089]
2023-04-06 08:03:45,984 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:03:46,635 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.032626401633024216, best pos: [25.81707783 14.19860927         nan 74.80065014 19.3815236  11.45680148
  9.10881609]
2023-04-06 08:04:07,385 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:04:08,913 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.04202081263065338, best pos: [26.85758757 13.31264744         nan 38.52314541 21.60497234 10.1468062
  8.74617784]
2023-04-06 08:04:09,022 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:04:09,873 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.1486712545156479, best pos: [25.21964497 12.33188975         nan  1.47826551 18.9203149  10.56906358
  8.70891291]
2023-04-06 08:04:51,447 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:04:52,437 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.04202081263065338, best pos: [24.60090756 13.70239618         nan 39.62157307 17.4022215  11.31260335
  9.09026355]
2023-04-06 08:04:52,650 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:04:53,448 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.1486712545156479, best pos: [27.31482491 11.93091541         nan  1.63386153 21.85674128 10.65244684
  9.15665387]
2023-04-06 08:05:52,377 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:05:53,023 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.21939988434314728, best pos: [23.96592774 14.71900314         nan  1.78480634 18.07519005 10.87061811
  9.27875464]
2023-04-06 08:05:53,615 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:05:54,339 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.032626401633024216, best pos: [25.94507962 15.16806172         nan 65.40081941 22.86066316 11.19569994
  9.34291029]
2023-04-06 08:06:28,039 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:06:29,378 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.032626401633024216, best pos: [24.55774011 16.03354649         nan 61.60293634 16.70164354 10.10696265
  8.86930127]
2023-04-06 08:06:29,379 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:06:30,200 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.1486712545156479, best pos: [25.98771656 14.15851792         nan  1.16527124 19.52336758 10.54376117
  9.23278979]
2023-04-06 08:07:10,377 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:07:11,104 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.1486712545156479, best pos: [27.12016053 13.05730113         nan  1.56528484 22.69905379 10.23246753
  9.2687759 ]
2023-04-06 08:07:11,994 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:07:12,638 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.1959497034549713, best pos: [23.46087558 23.64563857         nan 38.27813904 20.72564555 17.58669426
 34.77426591]
2023-04-06 08:07:38,359 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:07:39,356 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.18191073834896088, best pos: [22.71662845 23.61788621         nan 53.71303539 21.18540994 19.09554855
 33.43772392]
2023-04-06 08:07:39,535 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:07:40,229 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.032626401633024216, best pos: [24.44794525 12.26626922         nan 61.72947041 17.45160332 11.49070799
  8.8162109 ]
2023-04-06 08:08:30,814 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:08:31,479 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.04202081263065338, best pos: [24.61067952 12.97257575         nan 38.13663563 17.33617415 10.96501504
  9.13449327]
2023-04-06 08:08:32,059 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:08:32,692 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.032626401633024216, best pos: [25.67849625 13.86583302         nan 58.06804713 20.37958579 11.18997789
  8.97359937]
2023-04-06 08:13:30,660 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-06 08:13:31,364 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.016197754070162773, best pos: [23.99076737 13.81830348         nan  1.84042436 14.48242776 17.2915723
  9.60840257]
2023-04-11 13:35:11,804 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-11 13:35:12,569 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.20826797e+00 4.80731494e+02 9.41997451e+01 4.08767401e-01
 1.01842161e+02 3.04411635e+01 8.48658173e+01            nan
 2.69009389e+01 1.16856438e+01 5.32062442e+01]
2023-04-11 13:35:13,475 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-11 13:35:14,282 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.19742835e+00 4.65806773e+02 1.08278050e+02 2.95739918e-01
 1.83377797e+02 3.94444603e+01 1.22297639e+02            nan
 2.52462211e+01 1.11645316e+01 5.99788741e+01]
2023-04-11 13:35:35,562 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-11 13:35:36,268 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.32599756121635437, best pos: [26.23811421 23.74700666         nan 82.07728991 22.75885188 17.68882336
 34.55013158]
2023-04-11 13:35:36,762 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-11 13:35:37,383 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.04202081263065338, best pos: [26.72811657 15.34248902         nan 39.78640226 21.31550295 11.31572931
  8.71927923]
2023-04-11 14:49:51,415 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/disinfection.py changed, reloading.
2023-04-11 14:51:51,531 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/disinfection.py changed, reloading.
2023-04-11 15:00:22,129 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/disinfection.py changed, reloading.
2023-04-11 15:01:12,134 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/disinfection.py changed, reloading.
2023-04-11 15:02:07,033 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/disinfection.py changed, reloading.
2023-04-11 15:02:28,831 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/disinfection.py changed, reloading.
2023-04-11 15:02:58,966 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/disinfection.py changed, reloading.
2023-04-11 15:03:18,446 - django.utils.autoreload - INFO - /opt/django/backend/sodis_forecast/scripts/modules/disinfection.py changed, reloading.
2023-04-11 15:16:14,947 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-11 15:16:15,827 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.18170929e+00 4.85382109e+02 9.56859450e+01 3.54737466e-01
 1.71841858e+02 2.17217464e+01 9.27724739e+01            nan
 2.31051062e+01 1.18713755e+01 5.74214756e+01]
2023-04-11 15:16:17,335 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-11 15:16:18,175 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.22320846e+00 4.75423611e+02 9.31024779e+01 3.56062722e-01
 2.58013870e+02 3.44015199e+01 9.63800602e+01            nan
 2.58205382e+01 1.18498782e+01 5.49130770e+01]
2023-04-11 15:18:47,024 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-11 15:18:47,612 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.032626401633024216, best pos: [24.92925671 11.63859828         nan 63.51375561 21.07489181 10.95534356
  9.35844803]
2023-04-11 15:19:04,454 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-11 15:19:05,118 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.32599756121635437, best pos: [25.37818228 23.43352643         nan 40.98801026 22.51408471 17.75078571
 33.69304547]
2023-04-11 15:20:05,513 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-11 15:20:06,201 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.47895172238349915, best pos: [40.91955811 18.55474394         nan 40.26739404 19.66222953 10.87003374
  9.20716872]
2023-04-11 15:22:17,614 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-11 15:22:18,327 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.04138631746172905, best pos: [23.25065985 23.91795628         nan 48.81107058 13.6467281  18.58134993
 46.01192472]
2023-04-11 15:22:29,903 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-11 15:22:30,777 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.04202081263065338, best pos: [27.43593309 12.53839363         nan 38.17882497 17.51029314 10.83960822
  8.79903826]
2023-04-12 09:24:45,078 - django.request - WARNING - Not Found: /favicon.ico
2023-04-12 09:25:04,999 - django.request - WARNING - Method Not Allowed: /tur/
2023-04-12 09:25:11,815 - django.request - WARNING - Method Not Allowed: /ec/
2023-04-12 09:36:10,279 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-04-12 09:36:27,465 - django.request - WARNING - Method Not Allowed: /ec/
2023-04-12 09:36:31,220 - django.request - ERROR - Internal Server Error: /ec/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 38, in post
    result=outputprediction(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 84, in outputprediction
    pipe, _ = trainorloadpipe(pred_type, sw, floc, loadpipe, printass)
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 49, in trainorloadpipe
    load_pipeline(pipe, "floc_analyzer/data/ec_pipe")
UnboundLocalError: local variable 'pipe' referenced before assignment
2023-04-12 09:36:49,844 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-04-12 09:37:12,149 - django.request - WARNING - Method Not Allowed: /ec/
2023-04-12 09:37:19,118 - django.request - ERROR - Internal Server Error: /ec/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 38, in post
    result=outputprediction(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 84, in outputprediction
    pipe, _ = trainorloadpipe(pred_type, sw, floc, loadpipe, printass)
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 80, in trainorloadpipe
    return pipe, bounds
UnboundLocalError: local variable 'pipe' referenced before assignment
2023-04-12 09:37:39,178 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-04-12 09:39:13,703 - django.request - WARNING - Method Not Allowed: /ec/
2023-04-12 09:39:41,635 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-04-12 09:40:37,457 - django.request - WARNING - Method Not Allowed: /ph/
2023-04-12 09:40:47,928 - django.request - ERROR - Internal Server Error: /ph/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 62, in post
    result=outputprediction(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 84, in outputprediction
    pipe, _ = trainorloadpipe(pred_type, sw, floc, loadpipe, printass)
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 47, in trainorloadpipe
    pipe = load_pipeline("floc_analyzer/data/ph_pipe")
  File "/opt/django/backend/floc_analyzer/scripts/modules/mlalgorithms.py", line 76, in load_pipeline
    pipeline = load(loadpath)
  File "/usr/local/lib/python3.10/dist-packages/joblib/numpy_pickle.py", line 650, in load
    with open(filename, 'rb') as f:
FileNotFoundError: [Errno 2] No such file or directory: 'floc_analyzer/data/ph_pipe'
2023-04-12 09:40:55,766 - django.request - WARNING - Method Not Allowed: /ph/
2023-04-12 09:41:51,838 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-04-12 09:42:04,230 - django.request - WARNING - Method Not Allowed: /ph/
2023-04-12 09:42:12,908 - django.request - WARNING - Method Not Allowed: /ph/
2023-04-12 09:42:30,165 - django.request - WARNING - Method Not Allowed: /ec/
2023-04-12 09:42:35,439 - django.request - WARNING - Method Not Allowed: /ph/
2023-04-12 09:43:00,176 - django.request - WARNING - Method Not Allowed: /ph/
2023-04-12 09:44:50,282 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/main.py changed, reloading.
2023-04-12 09:45:03,700 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/main.py changed, reloading.
2023-04-12 09:45:22,850 - django.request - WARNING - Method Not Allowed: /bsf/
2023-04-12 09:45:43,602 - django.request - ERROR - Internal Server Error: /bsf/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/bsf_concept/views.py", line 34, in post
    result=outputprediction(
  File "/opt/django/backend/bsf_concept/scripts/main.py", line 70, in outputprediction
    pipe, _ = trainorloadpipe(loadpipe, printass)
  File "/opt/django/backend/bsf_concept/scripts/main.py", line 48, in trainorloadpipe
    save_pipeline(pipe, "bsf_concept/data/pipe_bsf.dump")
  File "/opt/django/backend/bsf_concept/scripts/modules/mlalgorithms.py", line 74, in save_pipeline
    dump(pipeline, savepath)
  File "/usr/local/lib/python3.10/dist-packages/joblib/numpy_pickle.py", line 552, in dump
    with open(filename, 'wb') as f:
FileNotFoundError: [Errno 2] No such file or directory: 'bsf_concept/data/pipe_bsf.dump'
2023-04-12 09:46:08,476 - django.request - WARNING - Method Not Allowed: /bsf/
2023-04-12 09:57:59,971 - django.request - ERROR - Internal Server Error: /bsf/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/bsf_concept/views.py", line 34, in post
    result=outputprediction(
  File "/opt/django/backend/bsf_concept/scripts/main.py", line 70, in outputprediction
    pipe, _ = trainorloadpipe(loadpipe, printass)
  File "/opt/django/backend/bsf_concept/scripts/main.py", line 52, in trainorloadpipe
    actualvpredicted, scores, evaluation = assess_pipeline(pipe, X_train, X_test, y_train, y_test)
  File "/opt/django/backend/bsf_concept/scripts/modules/mlalgorithms.py", line 61, in assess_pipeline
    used_features = pipe[2].get_support(indices=True)
  File "/usr/local/lib/python3.10/dist-packages/sklearn/pipeline.py", line 265, in __getitem__
    name, est = self.steps[ind]
IndexError: list index out of range
2023-04-12 09:58:14,230 - django.request - ERROR - Internal Server Error: /bsf/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/bsf_concept/views.py", line 34, in post
    result=outputprediction(
  File "/opt/django/backend/bsf_concept/scripts/main.py", line 70, in outputprediction
    pipe, _ = trainorloadpipe(loadpipe, printass)
  File "/opt/django/backend/bsf_concept/scripts/main.py", line 52, in trainorloadpipe
    actualvpredicted, scores, evaluation = assess_pipeline(pipe, X_train, X_test, y_train, y_test)
  File "/opt/django/backend/bsf_concept/scripts/modules/mlalgorithms.py", line 61, in assess_pipeline
    used_features = pipe[2].get_support(indices=True)
  File "/usr/local/lib/python3.10/dist-packages/sklearn/pipeline.py", line 265, in __getitem__
    name, est = self.steps[ind]
IndexError: list index out of range
2023-04-12 10:01:12,024 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/modules/mlalgorithms.py changed, reloading.
2023-04-12 10:02:38,407 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/modules/mlalgorithms.py changed, reloading.
2023-04-12 10:03:38,262 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/modules/mlalgorithms.py changed, reloading.
2023-04-12 10:03:50,764 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/main.py changed, reloading.
2023-04-12 10:04:07,685 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/modules/mlalgorithms.py changed, reloading.
2023-04-12 10:06:43,932 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/main.py changed, reloading.
2023-04-12 10:08:15,732 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/main.py changed, reloading.
2023-04-12 10:09:13,603 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/main.py changed, reloading.
2023-04-12 10:09:48,688 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/main.py changed, reloading.
2023-04-12 10:10:26,954 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/main.py changed, reloading.
2023-04-12 10:19:43,319 - django.request - ERROR - Internal Server Error: /tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 91, in post
    result=outputprediction(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 84, in outputprediction
    pipe, _ = trainorloadpipe(pred_type, sw, floc, loadpipe, printass)
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 51, in trainorloadpipe
    pipe = load_pipeline("floc_analyzer/data/pipe_tur.dump")
  File "/opt/django/backend/floc_analyzer/scripts/modules/mlalgorithms.py", line 76, in load_pipeline
    pipeline = load(loadpath)
  File "/usr/local/lib/python3.10/dist-packages/joblib/numpy_pickle.py", line 650, in load
    with open(filename, 'rb') as f:
FileNotFoundError: [Errno 2] No such file or directory: 'floc_analyzer/data/pipe_tur.dump'
2023-04-18 12:09:43,970 - django.request - WARNING - Not Found: /favicon.ico
2023-04-18 12:10:07,891 - django.request - WARNING - Method Not Allowed: /ec/
2023-04-18 13:16:17,586 - django.request - WARNING - Method Not Allowed: /ph/
2023-04-18 13:16:17,834 - django.request - WARNING - Not Found: /favicon.ico
2023-04-19 08:39:57,308 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-19 08:39:58,058 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.20451490e+00 4.85369207e+02 1.05095109e+02 3.09628792e-01
 1.69089953e+02 2.78448513e+01 1.08475200e+02            nan
 2.56614986e+01 1.13145079e+01 5.57492538e+01]
2023-04-19 08:40:24,154 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-19 08:40:25,010 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 31.21194839477539, best pos: [8.91809681e+00 4.42347593e+02 8.60798586e+01 4.25212271e-01
 2.40208696e+02 2.57603358e+01 1.17884513e+02 1.00000000e+00
 2.52824870e+01 1.16047768e+01 5.65194749e+01]
2023-04-19 08:40:59,498 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-19 08:41:00,232 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 31.107351303100586, best pos: [8.89396631e+00 4.42115153e+02 1.17836521e+02 4.03968359e-01
 1.28947603e+02 1.68148258e+01 1.02266368e+02 1.00000000e+00
 2.85848011e+01 1.22219974e+01 5.03654537e+01]
2023-04-19 08:41:14,488 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-19 08:41:15,355 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.15623894e+00 4.80068300e+02 9.53985301e+01 2.91715127e-01
 2.20820483e+02 2.68182074e+01 8.95384984e+01            nan
 2.50366074e+01 1.15287782e+01 5.91201080e+01]
2023-04-19 08:41:15,785 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-19 08:41:16,572 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.24076740e+00 4.69120368e+02 1.05321411e+02 2.99069742e-01
 2.33206385e+02 9.18510690e+00 1.03471605e+02            nan
 2.60107566e+01 1.16405071e+01 5.32343748e+01]
2023-04-19 08:41:21,129 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-04-19 08:41:21,983 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.24489254e+00 4.72346323e+02 9.38093806e+01 1.07925694e-01
 2.29983413e+02 2.27658833e+01 9.50684447e+01            nan
 2.41672507e+01 1.21531553e+01 5.42257491e+01]
2023-04-19 08:43:23,362 - django.request - WARNING - Not Found: /favicon.ico
2023-04-19 08:43:30,669 - django.request - WARNING - Method Not Allowed: /ec/
2023-04-25 09:05:54,644 - django.request - WARNING - Not Found: /favicon.ico
2023-04-25 09:06:26,181 - django.request - WARNING - Not Found: /favicon.ico
2023-04-25 09:10:26,052 - django.request - WARNING - Not Found: /favicon.ico
2023-04-25 09:51:39,417 - django.request - WARNING - Not Found: /favicon.ico
2023-04-25 10:04:58,396 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-04-25 10:06:16,001 - django.request - WARNING - Method Not Allowed: /ec/
2023-04-25 10:08:33,854 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-04-25 10:08:43,443 - django.request - WARNING - Method Not Allowed: /ec/
2023-04-25 10:09:31,461 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-04-25 10:09:42,773 - django.request - WARNING - Method Not Allowed: /ec/
2023-04-25 10:22:31,930 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/mlalgorithms.py changed, reloading.
2023-04-25 10:24:50,602 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/mlalgorithms.py changed, reloading.
2023-04-25 10:28:21,251 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/mlalgorithms.py changed, reloading.
2023-04-25 10:29:36,344 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/mlalgorithms.py changed, reloading.
2023-04-25 10:29:57,253 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-04-25 10:30:10,567 - django.request - ERROR - Internal Server Error: /ec/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 38, in post
    result=outputprediction(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 85, in outputprediction
    pipe, _ = trainorloadpipe(pred_type, sw, floc, loadpipe, printass)
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 59, in trainorloadpipe
    save_pipeline(pipe, "floc_analyzer/data/pipelines/pipe_ec.dump")
  File "/opt/django/backend/floc_analyzer/scripts/modules/mlalgorithms.py", line 74, in save_pipeline
    dump(pipeline, savepath)
  File "/usr/local/lib/python3.10/dist-packages/joblib/numpy_pickle.py", line 552, in dump
    with open(filename, 'wb') as f:
FileNotFoundError: [Errno 2] No such file or directory: 'floc_analyzer/data/pipelines/pipe_ec.dump'
2023-04-25 10:30:10,571 - django.request - ERROR - Internal Server Error: /ph/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 62, in post
    result=outputprediction(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 85, in outputprediction
    pipe, _ = trainorloadpipe(pred_type, sw, floc, loadpipe, printass)
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 57, in trainorloadpipe
    save_pipeline(pipe, "floc_analyzer/data/pipelines/pipe_ph.dump")
  File "/opt/django/backend/floc_analyzer/scripts/modules/mlalgorithms.py", line 74, in save_pipeline
    dump(pipeline, savepath)
  File "/usr/local/lib/python3.10/dist-packages/joblib/numpy_pickle.py", line 552, in dump
    with open(filename, 'wb') as f:
FileNotFoundError: [Errno 2] No such file or directory: 'floc_analyzer/data/pipelines/pipe_ph.dump'
2023-04-25 10:30:10,740 - django.request - ERROR - Internal Server Error: /tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 91, in post
    result=outputprediction(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 85, in outputprediction
    pipe, _ = trainorloadpipe(pred_type, sw, floc, loadpipe, printass)
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 61, in trainorloadpipe
    save_pipeline(pipe, "floc_analyzer/data/pipelines/pipe_tur.dump")
  File "/opt/django/backend/floc_analyzer/scripts/modules/mlalgorithms.py", line 74, in save_pipeline
    dump(pipeline, savepath)
  File "/usr/local/lib/python3.10/dist-packages/joblib/numpy_pickle.py", line 552, in dump
    with open(filename, 'wb') as f:
FileNotFoundError: [Errno 2] No such file or directory: 'floc_analyzer/data/pipelines/pipe_tur.dump'
2023-05-01 16:22:39,962 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-05-01 16:22:40,711 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.22284407e+00 4.65606057e+02 1.05129906e+02 2.48560472e-01
 2.50014005e+02 3.36968151e+01 9.49638875e+01            nan
 2.48418300e+01 1.24080603e+01 5.34205906e+01]
2023-05-01 16:22:41,965 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-05-01 16:22:42,799 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.16606150e+00 4.73338207e+02 9.84092114e+01 4.03641946e-01
 1.93213274e+02 2.07221591e+01 1.09487967e+02            nan
 2.59846312e+01 1.11051300e+01 5.25178465e+01]
2023-07-04 08:08:31,108 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-07-04 08:09:25,301 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-07-04 08:43:27,573 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-07-04 08:53:03,491 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-07-04 08:53:52,206 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-07-04 08:54:13,034 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-07-04 08:54:57,346 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-07-04 09:02:07,668 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-07-04 09:05:23,681 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-07-04 09:29:15,651 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-07-05 16:27:03,322 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-07-05 16:30:28,751 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-07-05 16:38:16,237 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/mlalgorithms.py changed, reloading.
2023-07-05 16:38:26,508 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-07-13 09:22:07,369 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/modules/mlalgorithms.py changed, reloading.
2023-07-13 09:26:30,554 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/main.py changed, reloading.
2023-07-13 09:28:27,040 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/main.py changed, reloading.
2023-07-13 09:28:50,431 - django.request - ERROR - Internal Server Error: /bsf/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/bsf_concept/views.py", line 34, in post
    result=outputprediction(
  File "/opt/django/backend/bsf_concept/scripts/main.py", line 70, in outputprediction
    pipe, _ = trainorloadpipe(loadpipe, printass)
  File "/opt/django/backend/bsf_concept/scripts/main.py", line 53, in trainorloadpipe
    actualvpredicted, scores, evaluation = assess_pipeline(pred_type, pipe, X_train, X_test, y_train, y_test)
NameError: name 'pred_type' is not defined
2023-07-13 09:29:53,274 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/main.py changed, reloading.
2023-07-13 09:31:05,646 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/main.py changed, reloading.
2023-07-13 09:33:24,264 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/main.py changed, reloading.
2023-07-13 09:34:16,115 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/main.py changed, reloading.
2023-07-13 09:35:12,192 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/main.py changed, reloading.
2023-07-15 11:40:41,648 - django.request - WARNING - Not Found: /favicon.ico
2023-07-15 11:45:14,766 - django.utils.autoreload - INFO - /opt/django/backend/aaa_doser/models.py changed, reloading.
2023-07-15 12:18:58,835 - django.utils.autoreload - INFO - /opt/django/backend/backend/urls.py changed, reloading.
2023-07-15 12:19:10,649 - django.request - WARNING - Method Not Allowed: /aaa/
2023-07-15 12:19:36,007 - django.request - ERROR - Internal Server Error: /aaa/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/aaa_doser/views.py", line 14, in post
    coverage = aaa_doser.interpolate(time=t, concentration=c)
TypeError: aaa_doser.interpolate() missing 1 required positional argument: 'self'
2023-07-15 12:20:21,942 - django.utils.autoreload - INFO - /opt/django/backend/aaa_doser/views.py changed, reloading.
2023-07-15 12:20:41,452 - django.request - WARNING - Method Not Allowed: /aaa/
2023-07-15 12:22:01,592 - django.utils.autoreload - INFO - /opt/django/backend/aaa_doser/serializers.py changed, reloading.
2023-07-15 12:22:11,931 - django.request - WARNING - Method Not Allowed: /aaa/
2023-07-15 12:22:17,877 - django.request - ERROR - Internal Server Error: /aaa/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/aaa_doser/views.py", line 15, in post
    coverage = doser.interpolate(time=t, concentration=c)
  File "/opt/django/backend/aaa_doser/scripts/main.py", line 22, in interpolate
    return itp([[time,concentration]])
  File "/usr/local/lib/python3.10/dist-packages/scipy/interpolate/_rgi.py", line 320, in __call__
    raise ValueError("One of the requested xi is out of bounds "
ValueError: One of the requested xi is out of bounds in dimension 1
2023-07-15 12:22:47,093 - django.utils.autoreload - INFO - /opt/django/backend/aaa_doser/scripts/main.py changed, reloading.
2023-07-15 12:23:02,194 - django.request - WARNING - Method Not Allowed: /aaa/
2023-07-15 13:15:36,819 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 15, in post
    int(request.data.get('starting_hour')),
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
2023-07-15 13:15:47,301 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 15, in post
    int(request.data.get('starting_hour')),
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
2023-07-15 13:16:07,627 - django.request - ERROR - Internal Server Error: /aaa/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/aaa_doser/views.py", line 15, in post
    coverage = doser.interpolate(time=t, concentration=c)
  File "/opt/django/backend/aaa_doser/scripts/main.py", line 22, in interpolate
    return itp([[time,concentration]])[0]
  File "/usr/local/lib/python3.10/dist-packages/scipy/interpolate/_rgi.py", line 320, in __call__
    raise ValueError("One of the requested xi is out of bounds "
ValueError: One of the requested xi is out of bounds in dimension 1
2023-07-15 13:19:10,854 - django.utils.autoreload - INFO - /opt/django/backend/aaa_doser/scripts/main.py changed, reloading.
2023-07-15 13:19:30,792 - django.request - ERROR - Internal Server Error: /aaa/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/aaa_doser/views.py", line 15, in post
    coverage = doser.interpolate(time=t, concentration=c)
  File "/opt/django/backend/aaa_doser/scripts/main.py", line 22, in interpolate
    return itp([[concentration,time]])[0]
  File "/usr/local/lib/python3.10/dist-packages/scipy/interpolate/_rgi.py", line 320, in __call__
    raise ValueError("One of the requested xi is out of bounds "
ValueError: One of the requested xi is out of bounds in dimension 1
2023-07-15 13:24:06,477 - django.utils.autoreload - INFO - /opt/django/backend/aaa_doser/models.py changed, reloading.
2023-07-15 13:24:29,549 - django.utils.autoreload - INFO - /opt/django/backend/aaa_doser/serializers.py changed, reloading.
2023-07-15 13:25:10,329 - django.request - WARNING - Method Not Allowed: /aaa/
2023-07-15 13:25:39,446 - django.utils.autoreload - INFO - /opt/django/backend/aaa_doser/models.py changed, reloading.
2023-07-15 13:25:51,555 - django.request - WARNING - Method Not Allowed: /aaa/
2023-07-15 13:25:55,344 - django.request - WARNING - Method Not Allowed: /aaa/
2023-07-15 13:26:01,678 - django.utils.autoreload - INFO - /opt/django/backend/aaa_doser/models.py changed, reloading.
2023-07-15 13:26:22,959 - django.utils.autoreload - INFO - /opt/django/backend/aaa_doser/views.py changed, reloading.
2023-07-15 13:26:57,928 - django.request - ERROR - Internal Server Error: /aaa/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/aaa_doser/views.py", line 15, in post
    coverage = doser.interpolate(time=t, concentration=c)
  File "/opt/django/backend/aaa_doser/scripts/main.py", line 22, in interpolate
    return itp([[concentration,time]])[0]
  File "/usr/local/lib/python3.10/dist-packages/scipy/interpolate/_rgi.py", line 320, in __call__
    raise ValueError("One of the requested xi is out of bounds "
ValueError: One of the requested xi is out of bounds in dimension 1
2023-07-15 14:51:56,176 - django.request - ERROR - Internal Server Error: /aaa/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/aaa_doser/views.py", line 15, in post
    coverage = doser.interpolate(time=t, concentration=c)
  File "/opt/django/backend/aaa_doser/scripts/main.py", line 22, in interpolate
    return itp([[concentration,time]])[0]
  File "/usr/local/lib/python3.10/dist-packages/scipy/interpolate/_rgi.py", line 320, in __call__
    raise ValueError("One of the requested xi is out of bounds "
ValueError: One of the requested xi is out of bounds in dimension 1
2023-07-15 14:52:02,230 - django.request - ERROR - Internal Server Error: /aaa/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/aaa_doser/views.py", line 15, in post
    coverage = doser.interpolate(time=t, concentration=c)
  File "/opt/django/backend/aaa_doser/scripts/main.py", line 22, in interpolate
    return itp([[concentration,time]])[0]
  File "/usr/local/lib/python3.10/dist-packages/scipy/interpolate/_rgi.py", line 320, in __call__
    raise ValueError("One of the requested xi is out of bounds "
ValueError: One of the requested xi is out of bounds in dimension 1
2023-07-15 14:55:19,068 - django.utils.autoreload - INFO - /opt/django/backend/aaa_doser/scripts/main.py changed, reloading.
2023-07-26 14:55:52,787 - django.utils.autoreload - INFO - /opt/django/backend/aaa_doser/views.py changed, reloading.
2023-07-26 14:56:04,348 - django.request - WARNING - Not Found: /favicon.ico
2023-07-26 14:56:08,452 - django.request - ERROR - Internal Server Error: /aaa/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 723, in render
    context = self.get_context(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 695, in get_context
    'post_form': self.get_rendered_html_form(data, view, 'POST', request),
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 510, in get_rendered_html_form
    return self.render_form_for_serializer(serializer)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 518, in render_form_for_serializer
    serializer.data,
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 555, in data
    ret = super().data
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 257, in data
    self._data = self.get_initial()
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 405, in get_initial
    for field in self.fields.values()
  File "/usr/local/lib/python3.10/dist-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 356, in fields
    for key, value in self.get_fields().items():
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 1076, in get_fields
    field_class, field_kwargs = self.build_field(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 1222, in build_field
    return self.build_unknown_field(field_name, model_class)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 1340, in build_unknown_field
    raise ImproperlyConfigured(
django.core.exceptions.ImproperlyConfigured: Field name `concentration_chloride` is not valid for model `predictAAAData`.
2023-07-26 14:57:26,832 - django.utils.autoreload - INFO - /opt/django/backend/aaa_doser/models.py changed, reloading.
2023-07-26 14:57:38,207 - django.request - ERROR - Internal Server Error: /aaa/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 723, in render
    context = self.get_context(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 695, in get_context
    'post_form': self.get_rendered_html_form(data, view, 'POST', request),
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 510, in get_rendered_html_form
    return self.render_form_for_serializer(serializer)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 518, in render_form_for_serializer
    serializer.data,
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 555, in data
    ret = super().data
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 257, in data
    self._data = self.get_initial()
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 405, in get_initial
    for field in self.fields.values()
  File "/usr/local/lib/python3.10/dist-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 356, in fields
    for key, value in self.get_fields().items():
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 1076, in get_fields
    field_class, field_kwargs = self.build_field(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 1222, in build_field
    return self.build_unknown_field(field_name, model_class)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 1340, in build_unknown_field
    raise ImproperlyConfigured(
django.core.exceptions.ImproperlyConfigured: Field name `concentration_sulphate` is not valid for model `predictAAAData`.
2023-07-26 14:57:50,653 - django.utils.autoreload - INFO - /opt/django/backend/aaa_doser/serializers.py changed, reloading.
2023-07-26 14:58:00,027 - django.request - ERROR - Internal Server Error: /aaa/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 220, in _get_response
    response = response.render()
  File "/usr/local/lib/python3.10/dist-packages/django/template/response.py", line 114, in render
    self.content = self.rendered_content
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/response.py", line 70, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 723, in render
    context = self.get_context(data, accepted_media_type, renderer_context)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 695, in get_context
    'post_form': self.get_rendered_html_form(data, view, 'POST', request),
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 510, in get_rendered_html_form
    return self.render_form_for_serializer(serializer)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/renderers.py", line 518, in render_form_for_serializer
    serializer.data,
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 555, in data
    ret = super().data
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 257, in data
    self._data = self.get_initial()
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 405, in get_initial
    for field in self.fields.values()
  File "/usr/local/lib/python3.10/dist-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 356, in fields
    for key, value in self.get_fields().items():
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 1076, in get_fields
    field_class, field_kwargs = self.build_field(
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 1222, in build_field
    return self.build_unknown_field(field_name, model_class)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/serializers.py", line 1340, in build_unknown_field
    raise ImproperlyConfigured(
django.core.exceptions.ImproperlyConfigured: Field name `concentratiln_bicarbonate` is not valid for model `predictAAAData`.
2023-07-26 14:58:07,454 - django.utils.autoreload - INFO - /opt/django/backend/aaa_doser/serializers.py changed, reloading.
2023-07-26 14:58:17,943 - django.request - WARNING - Method Not Allowed: /aaa/
2023-07-26 14:58:35,687 - django.request - WARNING - Method Not Allowed: /aaa/
2023-07-26 14:59:06,348 - django.request - WARNING - Method Not Allowed: /aaa/
2023-07-26 14:59:17,873 - django.request - WARNING - Method Not Allowed: /aaa/
2023-07-26 15:00:19,880 - django.request - ERROR - Internal Server Error: /aaa/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/aaa_doser/views.py", line 14, in post
    cCl = float(request.data.get('concentration_chloride'))
TypeError: float() argument must be a string or a real number, not 'NoneType'
2023-07-26 15:01:12,161 - django.request - ERROR - Internal Server Error: /aaa/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/aaa_doser/views.py", line 14, in post
    cCl = float(request.data.get('concentration_chloride'))
TypeError: float() argument must be a string or a real number, not 'NoneType'
2023-09-05 12:52:00,910 - django.request - WARNING - Not Found: /favicon.ico
2023-09-05 12:52:08,736 - django.request - WARNING - Method Not Allowed: /ec/
2023-09-05 12:52:43,231 - django.request - WARNING - Method Not Allowed: /ec/
2023-09-05 12:53:04,234 - django.request - WARNING - Method Not Allowed: /ec/
2023-09-05 13:01:09,487 - django.request - WARNING - Method Not Allowed: /ec/
2023-09-13 11:58:14,077 - django.request - WARNING - Not Found: /favicon.ico
2023-09-13 12:12:02,445 - django.request - WARNING - Method Not Allowed: /ec/
2023-09-13 12:15:49,750 - django.request - WARNING - Method Not Allowed: /ph/
2023-09-13 12:26:13,052 - django.request - WARNING - Method Not Allowed: /tur/
2023-09-13 12:30:16,777 - django.request - WARNING - Method Not Allowed: /opt_tur/
2023-09-13 12:32:15,266 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 12:32:15,774 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 85, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 12:32:51,656 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 130, in post
    int(request.data.get("floc_cactus_share_min")),
ValueError: invalid literal for int() with base 10: '0.0'
2023-09-13 12:33:27,115 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 12:33:27,375 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 85, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 12:34:20,373 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 12:34:20,643 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 85, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 12:34:40,096 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 12:34:40,308 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 85, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,6,50) (50,6) (50,6) 
2023-09-13 12:35:57,902 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 12:35:58,158 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 85, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 12:36:00,734 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 12:36:00,997 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 85, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 12:50:18,650 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 12:50:18,856 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 85, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,6,50) (50,6) (50,6) 
2023-09-13 12:52:07,711 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 12:52:07,936 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 85, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,6,50) (50,6) (50,6) 
2023-09-13 12:56:24,068 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 12:56:24,423 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.62132460501089, best pos: [20.0928123   9.94982093         nan  2.91908345 22.22213721 10.21451017
 26.28345251]
2023-09-13 12:56:27,392 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 12:56:27,730 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.100033465420768, best pos: [22.22881421  5.08094727  0.2         1.19445596 22.94214975 16.08994295
 44.87205052]
2023-09-13 12:58:35,816 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 12:58:36,076 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 85, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 13:02:21,976 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:02:22,185 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 85, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,6,50) (50,6) (50,6) 
2023-09-13 13:02:33,598 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:02:33,876 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 85, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 13:02:42,259 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:02:42,516 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 85, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 13:10:16,930 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:10:17,326 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.746306376097768, best pos: [20.7925414   9.46866694  0.2         5.22064296 17.616269   11.03093642
 21.05644078]
2023-09-13 13:10:18,356 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:10:18,754 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.68469111169911, best pos: [22.96539248 19.24678112  0.2         4.84688225 20.46829916 10.69124766
 40.3605442 ]
2023-09-13 13:10:38,402 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:10:38,686 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 85, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 13:10:40,562 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:10:40,815 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 85, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 13:11:20,121 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/pso.py changed, reloading.
2023-09-13 13:11:44,970 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:11:45,343 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 85, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (60,11,60) (60,11) (60,11) 
2023-09-13 13:11:45,508 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:11:46,010 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 85, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (60,11,60) (60,11) (60,11) 
2023-09-13 13:11:56,051 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/pso.py changed, reloading.
2023-09-13 13:17:00,151 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:17:00,435 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 85, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 13:18:01,301 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:18:01,743 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 85, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 13:19:28,312 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:19:28,574 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 85, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 13:20:55,992 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:20:56,265 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 85, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 13:22:33,882 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:22:34,143 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 85, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 13:23:04,334 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/pso.py changed, reloading.
2023-09-13 13:23:15,269 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:23:15,561 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 86, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 13:25:20,191 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/pso.py changed, reloading.
2023-09-13 13:25:42,344 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:25:42,565 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 85, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (10,11,10) (10,11) (10,11) 
2023-09-13 13:25:51,119 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/pso.py changed, reloading.
2023-09-13 13:26:03,819 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:26:04,016 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 85, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 246, in optimize
    self.swarm.position = self.top.compute_position(
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/topology/star.py", line 159, in compute_position
    return ops.compute_position(swarm, bounds, bh)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 198, in compute_position
    temp_position += swarm.velocity
ValueError: non-broadcastable output operand with shape (11,11) doesn't match the broadcast shape (11,11,11)
2023-09-13 13:27:03,813 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/pso.py changed, reloading.
2023-09-13 13:28:06,600 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/pso.py changed, reloading.
2023-09-13 13:28:17,882 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:28:18,180 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 88, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 13:29:27,293 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/pso.py changed, reloading.
2023-09-13 13:29:45,282 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:29:45,566 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 89, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 13:29:58,748 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:29:59,184 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 89, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 13:30:59,511 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/pso.py changed, reloading.
2023-09-13 13:31:39,599 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:31:39,885 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 85, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 13:32:50,920 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/pso.py changed, reloading.
2023-09-13 13:34:35,864 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:34:36,346 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.373541308496813, best pos: [23.92491492 18.60820184  0.2         6.60508038 20.98203931 11.00018806
 32.02190305]
2023-09-13 13:34:37,797 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:34:38,156 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -6.1798031422899244, best pos: [20.36590492 20.49966848  0.2         3.04807982 22.9241479  10.37066367
 47.45246856]
2023-09-13 13:35:09,406 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:35:09,685 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 86, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 13:35:16,358 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:35:16,702 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.280098281695488, best pos: [22.68266271 15.25172035         nan  1.2493475  23.40268953 10.46247116
 24.54048252]
2023-09-13 13:36:16,963 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:36:17,307 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.306738473600036, best pos: [25.41998984 10.23605012  0.2         6.6396963  21.81909734 11.21238272
 27.9423782 ]
2023-09-13 13:36:24,269 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:36:24,596 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:36:25,326 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.501224419819307, best pos: [20.65008698 13.54311881         nan  1.88221548 21.02211439 10.44464514
 30.44736785]
2023-09-13 13:36:25,530 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.070927958168476, best pos: [23.71694624 13.54458589         nan  1.90336864 21.23994829 10.29325981
 23.47444569]
2023-09-13 13:36:33,415 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:36:33,844 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.628086916886091, best pos: [21.90605245 18.50046004  0.2         1.4144765  13.45815388 10.25906328
 28.2012473 ]
2023-09-13 13:39:18,937 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:39:19,588 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.222911459437964, best pos: [21.10021301 12.00595542         nan  1.94510672 19.06479131 10.35387289
 18.41836099]
2023-09-13 13:39:31,062 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:39:31,475 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.701242779677828, best pos: [21.07181442 11.14986828         nan  1.819752   23.51800963 10.01647953
 30.9076383 ]
2023-09-13 13:39:38,688 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:39:39,037 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.642148683919646, best pos: [21.17019271 12.33627337         nan  1.28018942 22.73323093 10.53678377
 48.37156148]
2023-09-13 13:39:42,088 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:39:42,441 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.667651652646578, best pos: [21.65005728 12.43255402         nan  1.22282007 23.47841998 10.35325372
 39.6946138 ]
2023-09-13 13:39:43,530 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:39:43,869 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.6140838723689805, best pos: [21.23670622  5.63225741  0.2        10.66205499 19.73559619 10.59277742
 32.89187953]
2023-09-13 13:40:21,180 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:40:21,613 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.511478637524697, best pos: [20.07702912 10.85952816         nan  3.48298123 21.09253768 10.46967002
 32.18906844]
2023-09-13 13:40:25,492 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:40:25,855 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.868538513280458, best pos: [21.12146346 12.52773347  0.2         8.70555163 21.06372726 10.73615966
 47.49683732]
2023-09-13 13:40:29,454 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:40:29,844 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.192890601736161, best pos: [26.68522454  9.87054865  0.2         1.48821032 18.72064892 11.62831874
 23.77354785]
2023-09-13 13:40:31,957 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:40:32,349 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -4.692198389156466, best pos: [24.65241335  9.45298888  0.2         6.79153035 17.99515253 13.94409842
 32.93713826]
2023-09-13 13:40:33,564 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:40:33,983 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.307947690716272, best pos: [21.51240539 15.17422371  0.2         2.23073234 17.56363164 12.68739601
 11.38656417]
2023-09-13 13:40:35,343 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:40:35,684 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.320866979372307, best pos: [20.71145747  7.34891286  0.2         1.59869906 14.09897493 12.74350887
 40.28809389]
2023-09-13 13:40:36,964 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:40:37,307 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.236177265158154, best pos: [21.13106448 11.81705062         nan  1.13846018 22.74233345 12.27221095
 36.8839623 ]
2023-09-13 13:44:18,060 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:44:18,507 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.768844407683746, best pos: [20.72601387  9.46489449  0.2         3.46311184 21.46171482 11.43973591
 13.18696088]
2023-09-13 13:44:20,943 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:44:21,335 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.101990917346362, best pos: [20.09281546 17.66930397         nan  1.77256906 17.45230442 10.88403526
 36.16903937]
2023-09-13 13:45:27,124 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:45:27,672 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.556780889682773, best pos: [20.33895828 11.30299671         nan  2.5539432  23.7486377  11.36949954
 44.14053199]
2023-09-13 13:45:29,179 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:45:29,592 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.608319569434319, best pos: [21.76657022 11.1975141   0.2         7.18998528 20.90465821 10.61741904
 12.89379772]
2023-09-13 13:45:43,989 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:45:44,554 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.589263982487196, best pos: [20.33864294 18.65303867         nan  1.40511968 21.90343951 10.63116637
 49.33638605]
2023-09-13 13:45:46,527 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:45:46,948 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.582701286375095, best pos: [20.91897511  7.51245998         nan  3.98773238 23.8476404  10.09942079
 25.63292897]
2023-09-13 13:45:48,797 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:45:49,131 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -5.216425297244773, best pos: [26.02043892 20.05915543  0.2         2.56452136 19.16643496 11.7642247
 49.41719248]
2023-09-13 13:47:00,484 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:47:00,811 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 86, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 13:50:59,537 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/pso.py changed, reloading.
2023-09-13 13:51:10,419 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:51:10,727 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 86, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 13:57:54,593 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-09-13 13:58:08,012 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:58:08,333 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 86, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 13:58:14,725 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 13:58:15,164 - django.request - ERROR - Internal Server Error: /opt_tur/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/floc_analyzer/views.py", line 159, in post
    output, best_param = inputoptimization(
  File "/opt/django/backend/floc_analyzer/scripts/main.py", line 95, in inputoptimization
    output, best_param = minimize(pipe=pipe, pred_type=pred_type, bounds=bounds)
  File "/opt/django/backend/floc_analyzer/scripts/modules/pso.py", line 86, in minimize
    output, best_param = optimizer.optimize(objective_function, iters=iterations)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/single/global_best.py", line 210, in optimize
    self.swarm.pbest_pos, self.swarm.pbest_cost = compute_pbest(self.swarm)
  File "/usr/local/lib/python3.10/dist-packages/pyswarms/backend/operators.py", line 69, in compute_pbest
    new_pbest_pos = np.where(~mask_pos, swarm.pbest_pos, swarm.position)
  File "<__array_function__ internals>", line 180, in where
ValueError: operands could not be broadcast together with shapes (50,11,50) (50,11) (50,11) 
2023-09-13 13:58:21,521 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-09-13 14:01:20,170 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/main.py changed, reloading.
2023-09-13 14:02:12,611 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/main.py changed, reloading.
2023-09-13 14:55:38,136 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 14:55:38,996 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 3.331700563430786, best pos: [8.60664717e+00 4.00311278e+02 9.56278727e+01 2.51555791e+02
 2.48069197e-01 6.46549703e+00 1.21342570e+02            nan
 2.58151074e+01 1.43441983e+01 5.72589127e+01]
2023-09-13 14:55:41,312 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 14:55:42,098 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 2.8316597938537598, best pos: [8.25336509e+00 4.00193543e+02 9.70231245e+01 2.32195090e+02
 2.22097420e-01 1.20662427e+01 9.57406638e+01            nan
 2.38938598e+01 1.45089293e+01 5.83426521e+01]
2023-09-13 14:56:00,684 - django.request - WARNING - Method Not Allowed: /opt_tur/
2023-09-13 14:56:01,950 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 14:56:02,864 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 2.143173933029175, best pos: [8.41818987e+00 3.54809028e+02 5.10726969e+01 2.41933209e+02
 2.64693203e-01 2.93731264e+00 1.08156133e+02 1.45347584e+00
 2.89494392e+01 1.34034149e+01 3.82102496e+01]
2023-09-13 14:56:59,826 - django.request - WARNING - Method Not Allowed: /bsf/
2023-09-13 14:58:37,163 - django.request - WARNING - Not Found: /Opt_bsf/
2023-09-13 14:58:44,737 - django.request - WARNING - Method Not Allowed: /opt_bsf/
2023-09-13 14:58:54,327 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 14:58:55,028 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.2591917514801025, best pos: [26.70645575 23.77070528         nan 39.25073886 10.08675944 13.86541989
 31.80897618]
2023-09-13 14:59:30,912 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 14:59:31,646 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.0500777959823608, best pos: [23.26299097 21.12035849         nan  1.81244579 12.55151301 16.14264501
 10.35868074]
2023-09-13 15:03:18,039 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 15:03:18,786 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.0500777959823608, best pos: [23.43443424 23.76606961         nan  1.54703618 15.19507135 16.82795048
 10.22141615]
2023-09-13 15:03:21,344 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 15:03:22,081 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.255767822265625, best pos: [25.97130338 23.52902742         nan 60.77810872 10.81517472 16.3754409
 33.3000804 ]
2023-09-13 15:03:39,539 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 15:03:40,249 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 4.647879600524902, best pos: [8.15634275e+00 5.28326018e+02 1.12406517e+02 1.53356937e+02
 4.77958977e-01 3.37127287e+01 1.01203707e+02            nan
 2.89634057e+01 1.47953724e+01 4.72281058e+01]
2023-09-13 15:03:43,421 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 15:03:44,190 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 4.298679351806641, best pos: [8.22272860e+00 5.04697045e+02 1.01701991e+02 1.53325906e+02
 4.98700014e-01 1.23036146e+01 1.07853327e+02            nan
 2.49773331e+01 1.39748751e+01 5.27294642e+01]
2023-09-13 15:06:56,931 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/pso.py changed, reloading.
2023-09-13 15:07:12,121 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-13 15:07:13,148 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.15549889e+00 4.68565981e+02 9.44579002e+01 4.06027049e-01
 2.34547515e+02 3.48574279e+01 1.09012897e+02            nan
 2.40449142e+01 1.23782035e+01 5.27253781e+01]
2023-09-14 08:02:50,319 - django.request - WARNING - Not Found: /favicon.ico
2023-09-14 08:02:54,071 - django.request - WARNING - Method Not Allowed: /aaa/
2023-09-14 08:10:15,682 - django.request - WARNING - Method Not Allowed: /sodis/
2023-09-14 08:11:24,321 - django.request - ERROR - Internal Server Error: /sodis/
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/decorators/csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/django/views/generic/base.py", line 103, in view
    return self.dispatch(request, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 480, in raise_uncaught_exception
    raise exc
  File "/usr/local/lib/python3.10/dist-packages/rest_framework/views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "/opt/django/backend/sodis_forecast/views.py", line 19, in post
    result, message, duration = sodis_forecast(
  File "/opt/django/backend/sodis_forecast/scripts/main.py", line 24, in sodis_forecast
    disdata, message, duration = disinfectionuntil(raddata, starttime, wattemp, tarlogdis)
  File "/opt/django/backend/sodis_forecast/scripts/modules/disinfection.py", line 75, in disinfectionuntil
    message += "Not enough Suntime left.\n" %logdis
TypeError: not all arguments converted during string formatting
2023-09-14 08:13:44,064 - django.request - WARNING - Method Not Allowed: /ec/
2023-09-14 08:18:48,463 - django.request - WARNING - Method Not Allowed: /tur/
2023-09-14 08:25:26,304 - django.request - WARNING - Not Found: /opt
2023-09-14 08:25:30,170 - django.request - WARNING - Method Not Allowed: /opt_tur/
2023-09-14 08:27:21,724 - django.request - WARNING - Method Not Allowed: /bsf/
2023-09-14 08:29:07,196 - django.request - WARNING - Method Not Allowed: /opt_bsf/
2023-09-14 08:46:37,649 - django.request - WARNING - Method Not Allowed: /aaa/
2023-09-14 08:49:38,190 - django.request - WARNING - Method Not Allowed: /sodis/
2023-09-14 09:05:38,599 - django.request - WARNING - Method Not Allowed: /sodis/
2023-09-14 09:05:45,972 - django.request - WARNING - Method Not Allowed: /ec/
2023-09-14 09:11:31,980 - django.request - WARNING - Method Not Allowed: /tur/
2023-09-14 09:20:35,079 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-14 09:20:35,943 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.20575791e+00 4.68454074e+02 9.54597096e+01 2.50673390e-01
 1.66173308e+02 3.20426413e+01 8.70974286e+01            nan
 2.57320716e+01 1.14502537e+01 5.36379297e+01]
2023-09-14 09:20:37,480 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-14 09:20:38,235 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.18752039e+00 4.71161513e+02 1.16605655e+02 1.64014750e-01
 1.21685793e+02 1.57401428e+01 1.13109046e+02            nan
 2.54740363e+01 1.09803332e+01 5.43827299e+01]
2023-09-14 09:22:34,372 - django.request - WARNING - Method Not Allowed: /opt_tur/
2023-09-14 09:35:41,840 - django.request - WARNING - Method Not Allowed: /bsf/
2023-09-14 09:35:52,731 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-14 09:35:53,712 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.21230212e+00 4.71048176e+02 1.03118335e+02 2.49541671e-01
 1.67337773e+02 2.31601659e+01 8.75143887e+01            nan
 2.51385000e+01 1.07128827e+01 5.40318900e+01]
2023-09-14 09:38:49,016 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-14 09:38:49,733 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.2665321826934814, best pos: [25.65099508 24.63008804         nan 38.48172763 10.68119904 12.10333163
 33.00083878]
2023-09-14 09:39:01,714 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-14 09:39:02,431 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.263108253479004, best pos: [30.9317335  24.81853765         nan 87.92749778 10.42776669 13.66738787
 32.04344516]
2023-09-14 09:39:30,031 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-14 09:39:30,920 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.263108253479004, best pos: [27.66475168 24.50643329         nan 46.89706036 10.71770772 16.68870417
 31.63164213]
2023-09-14 09:40:04,482 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-14 09:40:05,205 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.0214468240737915, best pos: [28.7011884  24.50620002         nan 13.37341532 10.18364466 11.64953871
 33.46370388]
2023-09-14 09:47:16,725 - django.request - WARNING - Method Not Allowed: /opt_bsf/
2023-09-14 09:47:42,244 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-14 09:47:43,067 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.263108253479004, best pos: [27.54193131 24.71867946         nan 46.70167675 10.26801022 13.69582952
 33.31397193]
2023-09-14 09:48:36,589 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-14 09:48:36,709 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-14 09:48:38,522 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.8646935820579529, best pos: [26.89154006 21.2772161          nan  1.60002718 16.4959491  13.13580922
  9.64111845]
2023-09-14 09:48:38,745 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.0500777959823608, best pos: [23.92500211 22.26206196         nan  1.12894363 14.2383289  12.14477271
  9.59920398]
2023-09-14 09:48:48,507 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-14 09:48:49,265 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.8776141405105591, best pos: [27.01483774 24.67004713         nan  1.10982753 16.0029292  12.53051937
 33.60377986]
2023-09-14 09:48:56,204 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-14 09:48:56,972 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.8656279444694519, best pos: [27.71186212 24.13185681         nan  1.01650742 11.67118818 17.67918489
 33.24812433]
2023-09-14 10:04:08,477 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-14 10:04:08,534 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-14 10:04:10,030 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.263108253479004, best pos: [25.93329887 24.52320302         nan 40.93931982 10.59627777 14.67063267
 32.518288  ]
2023-09-14 10:04:10,095 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.7654262185096741, best pos: [23.06616199 18.76893438         nan 20.76585451 16.2613894  16.04400134
  9.67550659]
2023-09-19 08:41:51,967 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/modules/mlalgorithms.py changed, reloading.
2023-09-19 08:43:28,127 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/main.py changed, reloading.
2023-09-21 09:42:48,208 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-21 09:42:49,090 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.19056707e+00 4.80384642e+02 9.64071402e+01 3.69233243e-01
 2.04058235e+02 2.92309368e+01 9.42169006e+01            nan
 2.37980788e+01 1.23995528e+01 5.74730452e+01]
2023-09-21 09:45:09,646 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-21 09:45:10,418 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 12.682085037231445, best pos: [8.18298720e+00 4.81528456e+02 9.21290805e+01 3.18078093e-01
 2.91421886e+02 2.97569128e+01 1.05795872e+02            nan
 2.58825260e+01 1.22672006e+01 5.66210400e+01]
2023-09-21 09:49:19,204 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-21 09:49:19,998 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.7203260064125061, best pos: [27.94903455 24.51902687         nan 22.50737755 14.82057944 15.73532664
 33.53454183]
2023-09-21 09:50:27,252 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-21 09:50:27,986 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.8670373558998108, best pos: [20.12437332 24.5463173          nan 92.9686861  10.92185444 15.26664964
 28.39302689]
2023-09-21 09:50:32,905 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-21 09:50:33,641 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.0500777959823608, best pos: [23.83333048 20.60259167         nan  1.27670328 15.73801702 15.87890944
 10.32001208]
2023-09-21 09:50:35,503 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-21 09:50:36,285 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.0500777959823608, best pos: [22.94481372 20.35200072         nan  1.50905294 15.19374636 12.53679486
  9.6181082 ]
2023-09-21 09:50:38,228 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-21 09:50:39,093 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.9523286819458008, best pos: [22.62191402 17.5056655          nan  1.43608687 15.98651995 15.52917557
 10.88848953]
2023-09-21 09:50:40,413 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-21 09:50:41,149 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.9523286819458008, best pos: [21.87648065 22.43870461         nan  1.61203299 15.6340293  15.06149809
 11.02476135]
2023-09-21 09:50:42,728 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-21 09:50:43,459 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.0500777959823608, best pos: [22.56846873 16.96570801         nan  1.12383224 16.23835863 14.47362048
  9.90243572]
2023-09-21 09:50:44,531 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-21 09:50:45,354 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.0500777959823608, best pos: [22.38932617 18.7033155          nan  1.23480551 14.52739024 16.98063787
  9.88045854]
2023-09-21 09:50:46,598 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-21 09:50:47,305 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.0500777959823608, best pos: [23.46980161 18.43731471         nan  1.15081088 15.68643431 16.42868646
 10.05156291]
2023-09-21 09:50:49,146 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-21 09:50:49,939 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.0500777959823608, best pos: [23.68866499 22.63977948         nan  1.60048565 15.73780601 14.62156206
 10.46894179]
2023-09-21 09:50:51,531 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-21 09:50:52,273 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.2665321826934814, best pos: [25.21686855 24.54403837         nan 38.99389756 10.52249889 15.77653959
 32.63513121]
2023-09-21 09:50:53,393 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-21 09:50:54,208 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.2591917514801025, best pos: [27.46128072 24.27261312         nan 39.13409586 10.79102915 13.2223577
 32.31599385]
2023-09-21 09:50:55,381 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-21 09:50:56,117 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.7654262185096741, best pos: [22.61486619 23.19020377         nan 23.09321073 16.71338117 18.07831701
  9.87901879]
2023-09-21 09:50:57,384 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-21 09:50:58,118 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -1.0214468240737915, best pos: [26.01320915 24.50844874         nan 19.18053945 10.34999003 14.48733238
 33.10672623]
2023-12-27 11:35:56,030 - django.request - WARNING - Not Found: /favicon.ico
2023-12-27 11:36:13,547 - django.request - WARNING - Method Not Allowed: /tur/
2023-12-27 11:36:25,302 - django.request - WARNING - Method Not Allowed: /tur/
2023-12-27 11:36:42,703 - django.request - WARNING - Method Not Allowed: /ec/
2023-12-27 11:46:56,961 - django.utils.autoreload - INFO - /opt/django/backend/backend/settings.py changed, reloading.
2023-12-27 11:49:22,778 - django.utils.autoreload - INFO - /opt/django/backend/backend/settings.py changed, reloading.
2024-01-02 19:40:14,138 - django.request - WARNING - Not Found: /favicon.ico
2024-01-02 19:40:27,176 - django.request - WARNING - Not Found: /favicon.ico
2024-01-02 19:49:28,282 - django.utils.autoreload - INFO - /opt/django/backend/backend/settings.py changed, reloading.
2024-01-02 19:49:43,000 - django.utils.autoreload - INFO - /opt/django/backend/backend/settings.py changed, reloading.
2024-01-02 19:50:29,813 - django.utils.autoreload - INFO - /opt/django/backend/backend/settings.py changed, reloading.
2024-01-02 19:50:50,192 - django.utils.autoreload - INFO - /opt/django/backend/backend/settings.py changed, reloading.
2024-01-02 19:51:38,297 - django.utils.autoreload - INFO - /opt/django/backend/backend/settings.py changed, reloading.
2024-01-02 19:54:16,293 - django.security.DisallowedHost - ERROR - Invalid HTTP_HOST header: 'api.sustainable-water.local'. You may need to add 'api.sustainable-water.local' to ALLOWED_HOSTS.
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/utils/deprecation.py", line 135, in __call__
    response = self.process_request(request)
  File "/usr/local/lib/python3.10/dist-packages/django/middleware/common.py", line 48, in process_request
    host = request.get_host()
  File "/usr/local/lib/python3.10/dist-packages/django/http/request.py", line 148, in get_host
    raise DisallowedHost(msg)
django.core.exceptions.DisallowedHost: Invalid HTTP_HOST header: 'api.sustainable-water.local'. You may need to add 'api.sustainable-water.local' to ALLOWED_HOSTS.
2024-01-02 19:54:16,399 - django.request - WARNING - Bad Request: /
2024-01-02 19:54:16,573 - django.security.DisallowedHost - ERROR - Invalid HTTP_HOST header: 'api.sustainable-water.local'. You may need to add 'api.sustainable-water.local' to ALLOWED_HOSTS.
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/utils/deprecation.py", line 135, in __call__
    response = self.process_request(request)
  File "/usr/local/lib/python3.10/dist-packages/django/middleware/common.py", line 48, in process_request
    host = request.get_host()
  File "/usr/local/lib/python3.10/dist-packages/django/http/request.py", line 148, in get_host
    raise DisallowedHost(msg)
django.core.exceptions.DisallowedHost: Invalid HTTP_HOST header: 'api.sustainable-water.local'. You may need to add 'api.sustainable-water.local' to ALLOWED_HOSTS.
2024-01-02 19:54:16,653 - django.request - WARNING - Bad Request: /favicon.ico
2024-01-02 19:54:34,221 - django.utils.autoreload - INFO - /opt/django/backend/backend/settings.py changed, reloading.
2024-01-02 19:54:43,861 - django.security.DisallowedHost - ERROR - Invalid HTTP_HOST header: 'api.sustainable-water.local'. You may need to add 'api.sustainable-water.local' to ALLOWED_HOSTS.
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/utils/deprecation.py", line 135, in __call__
    response = self.process_request(request)
  File "/usr/local/lib/python3.10/dist-packages/django/middleware/common.py", line 48, in process_request
    host = request.get_host()
  File "/usr/local/lib/python3.10/dist-packages/django/http/request.py", line 148, in get_host
    raise DisallowedHost(msg)
django.core.exceptions.DisallowedHost: Invalid HTTP_HOST header: 'api.sustainable-water.local'. You may need to add 'api.sustainable-water.local' to ALLOWED_HOSTS.
2024-01-02 19:54:43,977 - django.request - WARNING - Bad Request: /
2024-01-02 19:54:44,051 - django.security.DisallowedHost - ERROR - Invalid HTTP_HOST header: 'api.sustainable-water.local'. You may need to add 'api.sustainable-water.local' to ALLOWED_HOSTS.
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/utils/deprecation.py", line 135, in __call__
    response = self.process_request(request)
  File "/usr/local/lib/python3.10/dist-packages/django/middleware/common.py", line 48, in process_request
    host = request.get_host()
  File "/usr/local/lib/python3.10/dist-packages/django/http/request.py", line 148, in get_host
    raise DisallowedHost(msg)
django.core.exceptions.DisallowedHost: Invalid HTTP_HOST header: 'api.sustainable-water.local'. You may need to add 'api.sustainable-water.local' to ALLOWED_HOSTS.
2024-01-02 19:54:44,131 - django.request - WARNING - Bad Request: /favicon.ico
2024-01-02 19:54:46,167 - django.security.DisallowedHost - ERROR - Invalid HTTP_HOST header: 'api.sustainable-water.local'. You may need to add 'api.sustainable-water.local' to ALLOWED_HOSTS.
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/utils/deprecation.py", line 135, in __call__
    response = self.process_request(request)
  File "/usr/local/lib/python3.10/dist-packages/django/middleware/common.py", line 48, in process_request
    host = request.get_host()
  File "/usr/local/lib/python3.10/dist-packages/django/http/request.py", line 148, in get_host
    raise DisallowedHost(msg)
django.core.exceptions.DisallowedHost: Invalid HTTP_HOST header: 'api.sustainable-water.local'. You may need to add 'api.sustainable-water.local' to ALLOWED_HOSTS.
2024-01-02 19:54:46,246 - django.request - WARNING - Bad Request: /
2024-01-02 19:54:46,316 - django.security.DisallowedHost - ERROR - Invalid HTTP_HOST header: 'api.sustainable-water.local'. You may need to add 'api.sustainable-water.local' to ALLOWED_HOSTS.
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/utils/deprecation.py", line 135, in __call__
    response = self.process_request(request)
  File "/usr/local/lib/python3.10/dist-packages/django/middleware/common.py", line 48, in process_request
    host = request.get_host()
  File "/usr/local/lib/python3.10/dist-packages/django/http/request.py", line 148, in get_host
    raise DisallowedHost(msg)
django.core.exceptions.DisallowedHost: Invalid HTTP_HOST header: 'api.sustainable-water.local'. You may need to add 'api.sustainable-water.local' to ALLOWED_HOSTS.
2024-01-02 19:54:46,404 - django.request - WARNING - Bad Request: /favicon.ico
2024-01-02 19:54:56,942 - django.utils.autoreload - INFO - /opt/django/backend/backend/settings.py changed, reloading.
2024-01-02 19:55:06,252 - django.security.DisallowedHost - ERROR - Invalid HTTP_HOST header: 'api.sustainable-water.local'. You may need to add 'api.sustainable-water.local' to ALLOWED_HOSTS.
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/utils/deprecation.py", line 135, in __call__
    response = self.process_request(request)
  File "/usr/local/lib/python3.10/dist-packages/django/middleware/common.py", line 48, in process_request
    host = request.get_host()
  File "/usr/local/lib/python3.10/dist-packages/django/http/request.py", line 148, in get_host
    raise DisallowedHost(msg)
django.core.exceptions.DisallowedHost: Invalid HTTP_HOST header: 'api.sustainable-water.local'. You may need to add 'api.sustainable-water.local' to ALLOWED_HOSTS.
2024-01-02 19:55:06,392 - django.request - WARNING - Bad Request: /
2024-01-02 19:55:06,462 - django.security.DisallowedHost - ERROR - Invalid HTTP_HOST header: 'api.sustainable-water.local'. You may need to add 'api.sustainable-water.local' to ALLOWED_HOSTS.
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/utils/deprecation.py", line 135, in __call__
    response = self.process_request(request)
  File "/usr/local/lib/python3.10/dist-packages/django/middleware/common.py", line 48, in process_request
    host = request.get_host()
  File "/usr/local/lib/python3.10/dist-packages/django/http/request.py", line 148, in get_host
    raise DisallowedHost(msg)
django.core.exceptions.DisallowedHost: Invalid HTTP_HOST header: 'api.sustainable-water.local'. You may need to add 'api.sustainable-water.local' to ALLOWED_HOSTS.
2024-01-02 19:55:06,542 - django.request - WARNING - Bad Request: /favicon.ico
2024-01-02 19:55:27,622 - django.utils.autoreload - INFO - /opt/django/backend/backend/settings.py changed, reloading.
2024-01-02 19:55:37,761 - django.request - WARNING - Not Found: /favicon.ico
2024-01-02 19:55:58,413 - django.security.DisallowedHost - ERROR - Invalid HTTP_HOST header: 'api.sustainable-water.de'. You may need to add 'api.sustainable-water.de' to ALLOWED_HOSTS.
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/utils/deprecation.py", line 135, in __call__
    response = self.process_request(request)
  File "/usr/local/lib/python3.10/dist-packages/django/middleware/common.py", line 48, in process_request
    host = request.get_host()
  File "/usr/local/lib/python3.10/dist-packages/django/http/request.py", line 148, in get_host
    raise DisallowedHost(msg)
django.core.exceptions.DisallowedHost: Invalid HTTP_HOST header: 'api.sustainable-water.de'. You may need to add 'api.sustainable-water.de' to ALLOWED_HOSTS.
2024-01-02 19:55:58,502 - django.request - WARNING - Bad Request: /
2024-01-02 19:55:58,678 - django.security.DisallowedHost - ERROR - Invalid HTTP_HOST header: 'api.sustainable-water.de'. You may need to add 'api.sustainable-water.de' to ALLOWED_HOSTS.
Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/django/core/handlers/exception.py", line 55, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.10/dist-packages/django/utils/deprecation.py", line 135, in __call__
    response = self.process_request(request)
  File "/usr/local/lib/python3.10/dist-packages/django/middleware/common.py", line 48, in process_request
    host = request.get_host()
  File "/usr/local/lib/python3.10/dist-packages/django/http/request.py", line 148, in get_host
    raise DisallowedHost(msg)
django.core.exceptions.DisallowedHost: Invalid HTTP_HOST header: 'api.sustainable-water.de'. You may need to add 'api.sustainable-water.de' to ALLOWED_HOSTS.
2024-01-02 19:55:58,755 - django.request - WARNING - Bad Request: /favicon.ico
2024-01-02 19:56:14,708 - django.utils.autoreload - INFO - /opt/django/backend/backend/settings.py changed, reloading.
2024-01-02 19:56:23,945 - django.request - WARNING - Not Found: /favicon.ico
2024-01-02 20:44:38,922 - django.request - WARNING - Not Found: /favicon.ico
2024-01-02 20:50:39,584 - django.utils.autoreload - INFO - /opt/django/backend/backend/settings.py changed, reloading.
2024-01-02 20:50:53,588 - django.request - WARNING - Not Found: /static/rest_framework/css/bootstrap.min.css
2024-01-02 20:50:53,595 - django.request - WARNING - Not Found: /static/rest_framework/css/bootstrap-tweaks.css
2024-01-02 20:50:53,600 - django.request - WARNING - Not Found: /static/rest_framework/css/prettify.css
2024-01-02 20:50:53,607 - django.request - WARNING - Not Found: /static/rest_framework/css/default.css
2024-01-02 20:51:10,035 - django.request - WARNING - Not Found: /static/rest_framework/css/bootstrap.min.css
2024-01-02 20:51:10,040 - django.request - WARNING - Not Found: /static/rest_framework/css/bootstrap-tweaks.css
2024-01-02 20:51:10,047 - django.request - WARNING - Not Found: /static/rest_framework/css/prettify.css
2024-01-02 20:51:10,053 - django.request - WARNING - Not Found: /static/rest_framework/css/default.css
2024-01-02 20:51:19,413 - django.utils.autoreload - INFO - /opt/django/backend/backend/settings.py changed, reloading.
2024-01-03 10:09:15,544 - django.utils.autoreload - INFO - /opt/django/backend/backend/settings.py changed, reloading.
2024-01-03 10:12:02,794 - django.utils.autoreload - INFO - /opt/django/backend/backend/settings.py changed, reloading.
2024-01-03 10:25:24,578 - django.utils.autoreload - INFO - /opt/django/backend/backend/settings.py changed, reloading.
2024-01-03 10:30:10,653 - django.utils.autoreload - INFO - /opt/django/backend/backend/settings.py changed, reloading.
2024-01-03 11:18:39,120 - django.request - WARNING - Not Found: /favicon.ico
2024-01-03 12:12:42,987 - django.utils.autoreload - INFO - /opt/django/backend/aaa_doser/scripts/modules/connectdb.py changed, reloading.
2024-01-03 12:13:13,101 - django.utils.autoreload - INFO - /opt/django/backend/bsf_concept/scripts/modules/connectdb.py changed, reloading.
2024-01-03 12:13:26,360 - django.utils.autoreload - INFO - /opt/django/backend/floc_analyzer/scripts/modules/connectdb.py changed, reloading.
